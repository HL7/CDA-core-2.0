
<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
   <script src="../../support/js/tree.js" type="text/javascript"></script><script src="../../support/js/setTopFrameText.js" type="text/javascript"></script><script type="text/javascript">
			if (find('heading')) setHeadingTextFromFileName(document.location.href);
			</script><title>XML Implementation Technology Specification - Data Types</title>
      <link rel="stylesheet" type="text/css" href="../../support/css/V3m.css"><style type="text/css"></style></head>
   <body>
      <table class="header">
         <tr>
            <td width="100%" colspan="3">
               <h1>XML Implementation Technology Specification - Data Types</h1>
            </td>
         </tr>
         <tr>
            <td colspan="3" valign="middle">
               <table cellspacing="0" cellpadding="3" border="1">
                  <tr>
                     <td align="center"><img src="../../support/graphics/ansilogo.gif" alt="ANSI"><br>ANSI/HL7 V3 XMLITSDT, R1-2004<br>4/8/2004<img width="5" src="../../support/graphics/spacer.gif"></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td width="100%" colspan="3"></td>
         </tr>
         <tr>
            <td width="100%" colspan="3">
               <table border="0" width="100%">
                  <tr>
                     <td width="225" valign="top" align="left" nowrap>Editor</td>
                     <td width="95%" valign="top" align="left" nowrap>Gunther Schadow<br><a href="mailto:gunther@aurora.rg.iupui.edu">gunther@aurora.rg.iupui.edu</a><br>Regenstrief Institute for Health Care
                     </td>
                  </tr>
                  <tr>
                     <td width="225" valign="top" align="left" nowrap>Editor</td>
                     <td width="95%" valign="top" align="left" nowrap>Paul Vincent Biron<br><a href="mailto:Paul.V.Biron@kp.org">Paul.V.Biron@kp.org</a><br>Kaiser Permanente
                     </td>
                  </tr>
                  <tr>
                     <td width="225" valign="top" align="left" nowrap>Editor</td>
                     <td width="95%" valign="top" align="left" nowrap>Grahame Grieve<br><a href="mailto:grahame@kestral.com.au">grahame@kestral.com.au</a><br>Kestral Computing P/L
                     </td>
                  </tr>
                  <tr>
                     <td width="225" valign="top" align="left" nowrap>Editor</td>
                     <td width="95%" valign="top" align="left" nowrap>Doug Pratt<br><a href="mailto:doug.pratt@smed.com">doug.pratt@smed.com</a><br>Siemens Medical Solutions, Health Services Co.
                        
                     </td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td width="100%" colspan="3"></td>
         </tr>
         <tr>
            <td width="100%" colspan="3">
               <p class="copyright">Last Published:&nbsp;10/03/2005&nbsp;12:09&nbsp;PM</p>
               <p class="copyright">HL7&reg; Version 3 Standard, &copy; 2005 Health 
                  Level Seven&reg;, Inc.  All Rights Reserved.
               </p>
               <p class="copyright">HL7 and Health Level Seven are registered 
                  trademarks of Health Level Seven, Inc.  Reg. U.S. Pat &amp; TM Off
               </p>
            </td>
         </tr>
         <tr>
            <td width="100%" colspan="3"></td>
         </tr>
         <tr>
            <td width="100%" colspan="3">
               <hr title="Separator for header">
            </td>
         </tr>
         <tr>
            <td width="100%" colspan="3">
               <h2><a name="contents">Table of Contents</a></h2>
               
               <div class="toc1"><a href="#prefBegin">Preface</a></div>
               <div class="toc2">i &nbsp;<a href="#datyp2preface">Preface</a></div>
               <div class="toc2">ii &nbsp;<a href="#datyp2acks">Acknowledgements</a></div>
               
               <div class="toc1">1 &nbsp;<a href="#intro">Introduction</a></div>
               <div class="toc2">1.1 &nbsp;<a href="#organization">Organization of this Specification</a></div>
               <div class="toc2">1.2 &nbsp;<a href="#xmlrep">Defining the XML Representation of Data Types</a></div>
               <div class="toc2">1.3 &nbsp;<a href="#namespaces">Namespaces used in this document</a></div>
               <div class="toc2">1.4 &nbsp;<a href="#Use-of-attributes-from-XML-specifications">Use of attributes from XML specifications</a></div>
               
               <div class="toc1">2 &nbsp;<a href="#basic-types">Basic Data Types</a></div>
               <div class="toc2">2.1 &nbsp;<a href="#dtimpl-ANY">Data Value (ANY)</a></div>
               <div class="toc3">2.1.1 &nbsp;<a href="#comp-ANY.nullFlavor">Null Flavor : CS</a></div>
               <div class="toc2">2.2 &nbsp;<a href="#dtimpl-BL">Boolean (BL)</a></div>
               <div class="toc3">2.2.1 &nbsp;<a href="#BL-examples">Examples</a></div>
               <div class="toc2">2.3 &nbsp;<a href="#dtimpl-BN">BooleanNonNull (BN)</a></div>
               <div class="toc2">2.4 &nbsp;<a href="#dtimpl-BIN">Binary Data (BIN)</a></div>
               <div class="toc3">2.4.1 &nbsp;<a href="#comp-BIN.data">Data : XML Text Content</a></div>
               <div class="toc3">2.4.2 &nbsp;<a href="#comp-BIN.representation">Representation : CS</a></div>
               <div class="toc2">2.5 &nbsp;<a href="#dtimpl-ED">Encapsulated Data (ED) specializes BIN</a></div>
               <div class="toc3">2.5.1 &nbsp;<a href="#comp-ED.data">Data : XML Text Content (inherited from BIN)</a></div>
               <div class="toc3">2.5.2 &nbsp;<a href="#comp-ED.representation">Representation : CS (inherited from BIN)</a></div>
               <div class="toc3">2.5.3 &nbsp;<a href="#comp-ED.mediaType">Media Type : CS</a></div>
               <div class="toc3">2.5.4 &nbsp;<a href="#comp-ED.charset">Charset : CS</a></div>
               <div class="toc3">2.5.5 &nbsp;<a href="#comp-ED.language">Language : CS</a></div>
               <div class="toc3">2.5.6 &nbsp;<a href="#comp-ED.compression">Compression : CS</a></div>
               <div class="toc3">2.5.7 &nbsp;<a href="#comp-ED.reference">Reference : TEL</a></div>
               <div class="toc3">2.5.8 &nbsp;<a href="#comp-ED.integrityCheck">Integrity Check : BIN</a></div>
               <div class="toc3">2.5.9 &nbsp;<a href="#comp-ED.integrityCheckAlgorithm">Integrity Check Algorithm : CS</a></div>
               <div class="toc3">2.5.10 &nbsp;<a href="#comp-ED.thumbnail">Thumbnail : ED</a></div>
               <div class="toc3">2.5.11 &nbsp;<a href="#ED-examples">Examples</a></div>
               <div class="toc2">2.6 &nbsp;<a href="#dtimpl-ST">Character String (ST) specializes ED</a></div>
               <div class="toc3">2.6.1 &nbsp;<a href="#comp-ST.data">Data : XML Text Content (inherited from BIN)</a></div>
               <div class="toc3">2.6.2 &nbsp;<a href="#comp-ST.representation">Representation : CS (inherited from BIN)</a></div>
               <div class="toc3">2.6.3 &nbsp;<a href="#comp-ST.mediaType">Media Type : CS (inherited from ED)</a></div>
               <div class="toc3">2.6.4 &nbsp;<a href="#comp-ST.charset">Charset : CS (inherited from ED)</a></div>
               <div class="toc3">2.6.5 &nbsp;<a href="#comp-ST.language">Language : CS (inherited from ED)</a></div>
               <div class="toc3">2.6.6 &nbsp;<a href="#comp-ST.compression">Compression : CS (fixed)</a></div>
               <div class="toc3">2.6.7 &nbsp;<a href="#comp-ST.reference">Reference : TEL (fixed)</a></div>
               <div class="toc3">2.6.8 &nbsp;<a href="#comp-ST.integrityCheck">Integrity Check : BIN (fixed)</a></div>
               <div class="toc3">2.6.9 &nbsp;<a href="#comp-ST.integrityCheckAlgorithm">Integrity Check Algorithm : CS (fixed)</a></div>
               <div class="toc3">2.6.10 &nbsp;<a href="#comp-ST.thumbnail">Thumbnail : ED (fixed)</a></div>
               <div class="toc3">2.6.11 &nbsp;<a href="#ST-examples">Examples</a></div>
               <div class="toc2">2.7 &nbsp;<a href="#dtimpl-CS">Coded Simple Value (CS) specializes CV</a></div>
               <div class="toc3">2.7.1 &nbsp;<a href="#comp-CS.code">Code : ST (inherited from CD)</a></div>
               <div class="toc3">2.7.2 &nbsp;<a href="#comp-CS.codeSystem">Code System : UID (fixed)</a></div>
               <div class="toc3">2.7.3 &nbsp;<a href="#comp-CS.codeSystemName">Code System Name : ST (fixed)</a></div>
               <div class="toc3">2.7.4 &nbsp;<a href="#comp-CS.codeSystemVersion">Code System Version : ST (fixed)</a></div>
               <div class="toc3">2.7.5 &nbsp;<a href="#comp-CS.displayName">Display Name : ST (fixed)</a></div>
               <div class="toc3">2.7.6 &nbsp;<a href="#comp-CS.originalText">Original Text : ED (fixed)</a></div>
               <div class="toc3">2.7.7 &nbsp;<a href="#CS-examples">Examples</a></div>
               <div class="toc2">2.8 &nbsp;<a href="#dtimpl-CV">Coded Value (CV) specializes CE</a></div>
               <div class="toc3">2.8.1 &nbsp;<a href="#comp-CV.code">Code : ST (inherited from CD)</a></div>
               <div class="toc3">2.8.2 &nbsp;<a href="#comp-CV.codeSystem">Code System : UID (inherited from CD)</a></div>
               <div class="toc3">2.8.3 &nbsp;<a href="#comp-CV.codeSystemName">Code System Name : ST (inherited from CD)</a></div>
               <div class="toc3">2.8.4 &nbsp;<a href="#comp-CV.codeSystemVersion">Code System Version : ST (inherited from CD)</a></div>
               <div class="toc3">2.8.5 &nbsp;<a href="#comp-CV.displayName">Display Name : ST (inherited from CD)</a></div>
               <div class="toc3">2.8.6 &nbsp;<a href="#comp-CV.originalText">Original Text : ED (inherited from CD)</a></div>
               <div class="toc3">2.8.7 &nbsp;<a href="#comp-CV.translation">Translation : SET&lt;CD&gt; (fixed)</a></div>
               <div class="toc3">2.8.8 &nbsp;<a href="#CV-examples">Examples</a></div>
               <div class="toc2">2.9 &nbsp;<a href="#dtimpl-CO">Coded Ordinal (CO) specializes CV</a></div>
               <div class="toc3">2.9.1 &nbsp;<a href="#comp-C0.code">Code : ST (inherited from CD)</a></div>
               <div class="toc3">2.9.2 &nbsp;<a href="#comp-C0.codeSystem">Code System : UID (inherited from CD)</a></div>
               <div class="toc3">2.9.3 &nbsp;<a href="#comp-C0.codeSystemName">Code System Name : ST (inherited from CD)</a></div>
               <div class="toc3">2.9.4 &nbsp;<a href="#comp-C0.codeSystemVersion">Code System Version : ST (inherited from CD)</a></div>
               <div class="toc3">2.9.5 &nbsp;<a href="#comp-C0.displayName">Display Name : ST (inherited from CD)</a></div>
               <div class="toc3">2.9.6 &nbsp;<a href="#comp-C0.originalText">Original Text : ED (inherited from CD)</a></div>
               <div class="toc3">2.9.7 &nbsp;<a href="#comp-C0.translation">Translation : SET&lt;CD&gt; (fixed)</a></div>
               <div class="toc2">2.10 &nbsp;<a href="#dtimpl-CE">Coded with Equivalents (CE) specializes CD</a></div>
               <div class="toc3">2.10.1 &nbsp;<a href="#comp-CE.code">Code : ST (inherited from CD)</a></div>
               <div class="toc3">2.10.2 &nbsp;<a href="#comp-CE.codeSystem">Code System : UID (inherited from CD)</a></div>
               <div class="toc3">2.10.3 &nbsp;<a href="#comp-CE.codeSystemName">Code System Name : ST (inherited from CD)</a></div>
               <div class="toc3">2.10.4 &nbsp;<a href="#comp-CE.codeSystemVersion">Code System Version : ST (inherited from CD)</a></div>
               <div class="toc3">2.10.5 &nbsp;<a href="#comp-CE.displayName">Display Name : ST (inherited from CD)</a></div>
               <div class="toc3">2.10.6 &nbsp;<a href="#comp-CE.qualifier">Qualifier : LIST&lt;CR&gt; (fixed)</a></div>
               <div class="toc3">2.10.7 &nbsp;<a href="#comp-CE.originalText">Original Text : ED (inherited from CD)</a></div>
               <div class="toc3">2.10.8 &nbsp;<a href="#comp-CE.translation">Translation : SET&lt;CD&gt; (inherited from CD)</a></div>
               <div class="toc3">2.10.9 &nbsp;<a href="#CE-examples">Examples</a></div>
               <div class="toc2">2.11 &nbsp;<a href="#dtimpl-CD">Concept Descriptor (CD)</a></div>
               <div class="toc3">2.11.1 &nbsp;<a href="#comp-CD.code">Code : ST</a></div>
               <div class="toc3">2.11.2 &nbsp;<a href="#comp-CD.codeSystem">Code System : UID</a></div>
               <div class="toc3">2.11.3 &nbsp;<a href="#comp-CD.codeSystemName">Code System Name : ST</a></div>
               <div class="toc3">2.11.4 &nbsp;<a href="#comp-CD.codeSystemVersion">Code System Version : ST</a></div>
               <div class="toc3">2.11.5 &nbsp;<a href="#comp-CD.displayName">Display Name : ST</a></div>
               <div class="toc3">2.11.6 &nbsp;<a href="#comp-CD.originalText">Original Text : ED</a></div>
               <div class="toc3">2.11.7 &nbsp;<a href="#comp-CD.translation">Translation : SET&lt;CD&gt;</a></div>
               <div class="toc3">2.11.8 &nbsp;<a href="#comp-CD.qualifier">Qualifier : LIST&lt;CR&gt;</a></div>
               <div class="toc3">2.11.9 &nbsp;<a href="#CD-examples">Examples</a></div>
               <div class="toc2">2.12 &nbsp;<a href="#dtimpl-CR">Concept Role (CR)</a></div>
               <div class="toc3">2.12.1 &nbsp;<a href="#comp-CR.name">Name : CV</a></div>
               <div class="toc3">2.12.2 &nbsp;<a href="#comp-CR.value">Value : CD</a></div>
               <div class="toc3">2.12.3 &nbsp;<a href="#comp-CR.inverted">Inversion Indicator : BN</a></div>
               <div class="toc3">2.12.4 &nbsp;<a href="#CR-examples">Examples</a></div>
               <div class="toc2">2.13 &nbsp;<a href="#dtimpl-SC">Character String with Code (SC) specializes ST</a></div>
               <div class="toc3">2.13.1 &nbsp;<a href="#comp-SC.code">Code : ST (inherited from CD)</a></div>
               <div class="toc3">2.13.2 &nbsp;<a href="#comp-SC.codeSystem">Code System : UID (inherited from CD)</a></div>
               <div class="toc3">2.13.3 &nbsp;<a href="#comp-SC.codeSystemName">Code System Name : ST (inherited from CD)</a></div>
               <div class="toc3">2.13.4 &nbsp;<a href="#comp-SC.codeSystemVersion">Code System Version : ST (inherited from CD)</a></div>
               <div class="toc3">2.13.5 &nbsp;<a href="#comp-SC.displayName">Display Name : ST (inherited from CD)</a></div>
               <div class="toc2">2.14 &nbsp;<a href="#dtimpl-UID">Unique Identifier String (UID)</a></div>
               <div class="toc3">2.14.1 &nbsp;<a href="#dtimpl-OID">ISO Object Identifier (OID) Scheme</a></div>
               <div class="toc3">2.14.2 &nbsp;<a href="#dtimpl-UUID">DCE Universal Unique Identifier (UUID) Scheme</a></div>
               <div class="toc3">2.14.3 &nbsp;<a href="#dtimpl-RUID">HL7 Reserved Identifier Scheme</a></div>
               <div class="toc3">2.14.4 &nbsp;<a href="#UID-examples">Examples</a></div>
               <div class="toc2">2.15 &nbsp;<a href="#dtimpl-II">Instance Identifier (II)</a></div>
               <div class="toc3">2.15.1 &nbsp;<a href="#comp-II.root">Root : UID</a></div>
               <div class="toc3">2.15.2 &nbsp;<a href="#comp-II.extension">Extension : ST</a></div>
               <div class="toc3">2.15.3 &nbsp;<a href="#comp-II.assigningAuthorityName">Assigning Authority Name : ST</a></div>
               <div class="toc3">2.15.4 &nbsp;<a href="#comp-II.displayable">Displayable : BL</a></div>
               <div class="toc3">2.15.5 &nbsp;<a href="#II-examples">Examples</a></div>
               <div class="toc2">2.16 &nbsp;<a href="#dtimpl-URL">Universal Resource Locator (URL)</a></div>
               <div class="toc3">2.16.1 &nbsp;<a href="#tel-fax-uris">Telephone and FAX Numbers</a></div>
               <div class="toc3">2.16.2 &nbsp;<a href="#URL-examples">Examples</a></div>
               <div class="toc2">2.17 &nbsp;<a href="#dtimpl-TEL">Telecommunication Address (TEL) specializes URL</a></div>
               <div class="toc3">2.17.1 &nbsp;<a href="#comp-TEL.useablePeriod">Useable Period : GTS</a></div>
               <div class="toc3">2.17.2 &nbsp;<a href="#comp-TEL.use">Use : SET&lt;CS&gt;</a></div>
               <div class="toc3">2.17.3 &nbsp;<a href="#TEL-examples">Examples</a></div>
               <div class="toc2">2.18 &nbsp;<a href="#dtimpl-ADXP">Address Part (ADXP)</a></div>
               <div class="toc3">2.18.1 &nbsp;<a href="#comp-ADXP.data">Data : XML Text Content (inherited from BIN)</a></div>
               <div class="toc3">2.18.2 &nbsp;<a href="#comp-ADXP.partType">Address Part Type : CS</a></div>
               <div class="toc3">2.18.3 &nbsp;<a href="#ADXP-examples">Examples</a></div>
               <div class="toc2">2.19 &nbsp;<a href="#dtimpl-AD">Postal Address (AD)</a></div>
               <div class="toc3">2.19.1 &nbsp;<a href="#comp-AD.use">Use : SET&lt;CS&gt;</a></div>
               <div class="toc3">2.19.2 &nbsp;<a href="#comp-AD.useablePeriod">Useable Period : GTS</a></div>
               <div class="toc3">2.19.3 &nbsp;<a href="#comp-AD.isNotOrdered">Is Not Ordered : BL</a></div>
               <div class="toc3">2.19.4 &nbsp;<a href="#AD-examples">Examples</a></div>
               <div class="toc2">2.20 &nbsp;<a href="#dtimpl-ENXP">Entity Name Part (ENXP)</a></div>
               <div class="toc3">2.20.1 &nbsp;<a href="#comp-ENXP.data">Data : XML Text Content (inherited from BIN)</a></div>
               <div class="toc3">2.20.2 &nbsp;<a href="#comp-ENXP.partType">Name Part Type : CS</a></div>
               <div class="toc3">2.20.3 &nbsp;<a href="#comp-ENXP.qualifier">Qualifier : SET&lt;CS&gt;</a></div>
               <div class="toc3">2.20.4 &nbsp;<a href="#ENXP-examples">Examples</a></div>
               <div class="toc2">2.21 &nbsp;<a href="#dtimpl-EN">Entity Name (EN)</a></div>
               <div class="toc3">2.21.1 &nbsp;<a href="#comp-EN.use">Use : SET&lt;CS&gt;</a></div>
               <div class="toc3">2.21.2 &nbsp;<a href="#comp-EN.validTime">Valid Time : IVL&lt;TS&gt;</a></div>
               <div class="toc3">2.21.3 &nbsp;<a href="#EN-examples">Examples</a></div>
               <div class="toc2">2.22 &nbsp;<a href="#dtimpl-PN">Person Name (PN) specializes EN</a></div>
               <div class="toc3">2.22.1 &nbsp;<a href="#comp-PN.use">Use : SET&lt;CS&gt; (inherited from EN)</a></div>
               <div class="toc3">2.22.2 &nbsp;<a href="#comp-PN.validTime">Valid Time : IVL&lt;TS&gt; (inherited from EN)</a></div>
               <div class="toc3">2.22.3 &nbsp;<a href="#PN-examples">Examples</a></div>
               <div class="toc2">2.23 &nbsp;<a href="#dtimpl-ON">Organization Name (ON) specializes EN</a></div>
               <div class="toc3">2.23.1 &nbsp;<a href="#comp-ON.use">Use : SET&lt;CS&gt; (inherited from EN)</a></div>
               <div class="toc3">2.23.2 &nbsp;<a href="#comp-ON.validTime">Valid Time : IVL&lt;TS&gt; (inherited from EN)</a></div>
               <div class="toc3">2.23.3 &nbsp;<a href="#ON-examples">Examples</a></div>
               <div class="toc2">2.24 &nbsp;<a href="#dtimpl-TN">Trivial Name (TN) specializes EN</a></div>
               <div class="toc3">2.24.1 &nbsp;<a href="#comp-TN.use">Use : SET&lt;CS&gt; (inherited from EN)</a></div>
               <div class="toc3">2.24.2 &nbsp;<a href="#comp-TN.validTime">Valid Time : IVL&lt;TS&gt; (inherited from EN)</a></div>
               <div class="toc3">2.24.3 &nbsp;<a href="#TN-examples">Examples</a></div>
               <div class="toc2">2.25 &nbsp;<a href="#dtimpl-QTY">Quantity (QTY)</a></div>
               <div class="toc2">2.26 &nbsp;<a href="#dtimpl-INT">Integer Number (INT) specializes QTY</a></div>
               <div class="toc2">2.27 &nbsp;<a href="#dtimpl-REAL">Real Number (REAL) specializes QTY</a></div>
               <div class="toc2">2.28 &nbsp;<a href="#dtimpl-PQ">Physical Quantity (PQ) specializes QTY</a></div>
               <div class="toc3">2.28.1 &nbsp;<a href="#comp-PQ.value">Value : REAL</a></div>
               <div class="toc3">2.28.2 &nbsp;<a href="#comp-PQ.unit">Unit of Measure : CS</a></div>
               <div class="toc3">2.28.3 &nbsp;<a href="#comp-PQ.translation">Translation : PQR</a></div>
               <div class="toc3">2.28.4 &nbsp;<a href="#PQ-examples">Examples</a></div>
               <div class="toc2">2.29 &nbsp;<a href="#dtimpl-PQR">Physical Quantity Representation (PQR) specializes CV</a></div>
               <div class="toc3">2.29.1 &nbsp;<a href="#comp-PQR.value">Value : REAL</a></div>
               <div class="toc3">2.29.2 &nbsp;<a href="#comp-PQR.code">Code : ST (inherited from CD)</a></div>
               <div class="toc3">2.29.3 &nbsp;<a href="#comp-PQR.codeSystem">Code System : UID (inherited from CD)</a></div>
               <div class="toc3">2.29.4 &nbsp;<a href="#comp-PQR.codeSystemName">Code System Name : ST (inherited from CD)</a></div>
               <div class="toc3">2.29.5 &nbsp;<a href="#comp-PQR.codeSystemVersion">Code System Version : ST (inherited from CD)</a></div>
               <div class="toc3">2.29.6 &nbsp;<a href="#comp-PQR.displayName">Display Name : ST (inherited from CD)</a></div>
               <div class="toc3">2.29.7 &nbsp;<a href="#comp-PQR.originalText">Original Text : ED (inherited from CD)</a></div>
               <div class="toc3">2.29.8 &nbsp;<a href="#PQR-examples">Examples</a></div>
               <div class="toc2">2.30 &nbsp;<a href="#dtimpl-MO">Monetary Amount (MO) specializes QTY</a></div>
               <div class="toc3">2.30.1 &nbsp;<a href="#comp-MO.value">Value : REAL</a></div>
               <div class="toc3">2.30.2 &nbsp;<a href="#comp-MO.currency">Currency : CS</a></div>
               <div class="toc3">2.30.3 &nbsp;<a href="#MO-examples">Examples</a></div>
               <div class="toc2">2.31 &nbsp;<a href="#dtimpl-RTO">Ratio (RTO) specializes QTY</a></div>
               <div class="toc3">2.31.1 &nbsp;<a href="#comp-RTO.numerator">Numerator : QTY</a></div>
               <div class="toc3">2.31.2 &nbsp;<a href="#comp-RTO.denominator">Denominator : QTY</a></div>
               <div class="toc3">2.31.3 &nbsp;<a href="#RTO-examples">Examples</a></div>
               <div class="toc2">2.32 &nbsp;<a href="#dtimpl-TS">Point in Time (TS) specializes QTY</a></div>
               <div class="toc3">2.32.1 &nbsp;<a href="#TS-examples">Examples</a></div>
               
               <div class="toc1">3 &nbsp;<a href="#generics">Generic Data Types</a></div>
               <div class="toc2">3.1 &nbsp;<a href="#dtimpl-SET">Set (SET)</a></div>
               <div class="toc3">3.1.1 &nbsp;<a href="#SET-examples">Examples</a></div>
               <div class="toc2">3.2 &nbsp;<a href="#dtimpl-SXCM">Set Component (SXCM)</a></div>
               <div class="toc3">3.2.1 &nbsp;<a href="#comp-SXCM.operator">Operator : CS</a></div>
               <div class="toc3">3.2.2 &nbsp;<a href="#SXCM-examples">Examples</a></div>
               <div class="toc2">3.3 &nbsp;<a href="#dtimpl-LIST">Sequence (LIST)</a></div>
               <div class="toc3">3.3.1 &nbsp;<a href="#LIST-examples">Examples</a></div>
               <div class="toc2">3.4 &nbsp;<a href="#dtimpl-GLIST">Generated Sequence (GLIST)</a></div>
               <div class="toc3">3.4.1 &nbsp;<a href="#comp-GLIST.head">Head : T</a></div>
               <div class="toc3">3.4.2 &nbsp;<a href="#comp-GLIST.increment">Increment : T.diff</a></div>
               <div class="toc3">3.4.3 &nbsp;<a href="#comp-GLIST.period">Period Step Count : INT</a></div>
               <div class="toc3">3.4.4 &nbsp;<a href="#comp-GLIST.denominator">Denominator : INT</a></div>
               <div class="toc3">3.4.5 &nbsp;<a href="#GLIST-examples">Examples</a></div>
               <div class="toc2">3.5 &nbsp;<a href="#dtimpl-SLIST">Sampled Sequence (SLIST)</a></div>
               <div class="toc3">3.5.1 &nbsp;<a href="#comp-SLIST.origin">Origin : T</a></div>
               <div class="toc3">3.5.2 &nbsp;<a href="#comp-SLIST.scale">Scale Factor : T.diff</a></div>
               <div class="toc3">3.5.3 &nbsp;<a href="#comp-SLIST.digits">Sampled Digits : LIST&lt;INT&gt;</a></div>
               <div class="toc3">3.5.4 &nbsp;<a href="#SLIST-examples">Examples</a></div>
               <div class="toc2">3.6 &nbsp;<a href="#dtimpl-BAG">Bag (BAG)</a></div>
               <div class="toc3">3.6.1 &nbsp;<a href="#BAG-examples">Examples</a></div>
               <div class="toc2">3.7 &nbsp;<a href="#dtimpl-BXIT">Bag Item (BXIT)</a></div>
               <div class="toc3">3.7.1 &nbsp;<a href="#comp-BXIT.qty">Quantity : INT</a></div>
               <div class="toc3">3.7.2 &nbsp;<a href="#BXIT-examples">Examples</a></div>
               <div class="toc2">3.8 &nbsp;<a href="#dtimpl-IVL">Interval (IVL) specializes SXCM</a></div>
               <div class="toc3">3.8.1 &nbsp;<a href="#comp-IVL.low">Low Boundary : IVXB</a></div>
               <div class="toc3">3.8.2 &nbsp;<a href="#comp-IVL.high">High Boundary : IVXB</a></div>
               <div class="toc3">3.8.3 &nbsp;<a href="#comp-IVL.center">Center : T</a></div>
               <div class="toc3">3.8.4 &nbsp;<a href="#comp-IVL.width">Width : T.diff</a></div>
               <div class="toc3">3.8.5 &nbsp;<a href="#IVL-examples">Examples</a></div>
               <div class="toc2">3.9 &nbsp;<a href="#dtimpl-IVXB">Interval Boundary (IVXB)</a></div>
               <div class="toc3">3.9.1 &nbsp;<a href="#comp-IVXB.inclusive">Inclusive : BL</a></div>
               <div class="toc2">3.10 &nbsp;<a href="#dtimpl-HIST">History (HIST)</a></div>
               <div class="toc2">3.11 &nbsp;<a href="#dtimpl-HXIT">History Item (HXIT)</a></div>
               <div class="toc3">3.11.1 &nbsp;<a href="#comp-HXIT.validTime">Valid Time : IVL&lt;TS&gt;</a></div>
               <div class="toc2">3.12 &nbsp;<a href="#dtimpl-UVP">Uncertain Value - Probabilistic (UVP)</a></div>
               <div class="toc3">3.12.1 &nbsp;<a href="#comp-UVP.probability">Probability : REAL</a></div>
               <div class="toc2">3.13 &nbsp;<a href="#dtimpl-NPPD">Non-Parametric Probability Distribution (NPPD)</a></div>
               
               <div class="toc1">4 &nbsp;<a href="#dtimpltiming">Timing Specification</a></div>
               <div class="toc2">4.1 &nbsp;<a href="#dtimpl-PIVL">Periodic Interval of Time (PIVL) specializes SXCM</a></div>
               <div class="toc3">4.1.1 &nbsp;<a href="#comp-PIVL.phase">Phase : IVL</a></div>
               <div class="toc3">4.1.2 &nbsp;<a href="#comp-PIVL.period">Period : T.diff</a></div>
               <div class="toc3">4.1.3 &nbsp;<a href="#comp-PIVL.alignment">Alignment to the Calendar : CS</a></div>
               <div class="toc3">4.1.4 &nbsp;<a href="#comp-PIVL.institutionSpecified">Institution Specified Timing : BL</a></div>
               <div class="toc3">4.1.5 &nbsp;<a href="#PIVL-examples">Examples</a></div>
               <div class="toc2">4.2 &nbsp;<a href="#dtimpl-EIVL">Event-Related Interval of Time (EIVL) specializes SXCM</a></div>
               <div class="toc3">4.2.1 &nbsp;<a href="#comp-EIVL.event">Event : CS</a></div>
               <div class="toc3">4.2.2 &nbsp;<a href="#comp-EIVL.offset">Offset : IVL&lt;T.diff&gt;</a></div>
               <div class="toc3">4.2.3 &nbsp;<a href="#EIVL-examples">Examples</a></div>
               <div class="toc2">4.3 &nbsp;<a href="#dtimpl-SXPR">Parenthetic Set Expression (SXPR) specializes SXCM</a></div>
               <div class="toc3">4.3.1 &nbsp;<a href="#comp-SXPR.expr">Sub-Expression : SXCM</a></div>
               <div class="toc3">4.3.2 &nbsp;<a href="#SXPR-examples">Examples</a></div>
               <h3>Appendices</h3>
               
               <div class="toc1">A &nbsp;<a href="#informative">Informative Types</a></div>
               <div class="toc2">A.1 &nbsp;<a href="#dtimpl-PPD">Parametric Probability Distribution (PPD)</a></div>
               <div class="toc3">A.1.1 &nbsp;<a href="#comp-PPD.standardDeviation">Standard Deviation : T.diff</a></div>
               <div class="toc3">A.1.2 &nbsp;<a href="#comp-PPD.distributionType">Probability Distribution Type : CS</a></div>
               <div class="toc2">A.2 &nbsp;<a href="#dtimpl-GTS">General Timing Specification (GTS)</a></div>
               <div class="toc3">A.2.1 &nbsp;<a href="#GTS-examples">Examples</a></div>
               
               <div class="toc1">B &nbsp;<a href="#completeSchema">W3C XML Schema</a></div>
               <div class="toc2">B.1 &nbsp;<a href="#datatypes-base.xsd">Base Types</a></div>
               <div class="toc2">B.2 &nbsp;<a href="#datatypes.xsd">Generic Type Instantiations</a></div>
               <hr>
            </td>
         </tr>
         <tr>
            <td width="100%" colspan="3">
               <h2><a name="prefBegin">Preface</a></h2>
            </td>
         </tr>
         <!--divN/head-->
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h2><a name="datyp2preface"></a>i 
               </h2>
            </td>
            <td class="body_col">
               <h2>Preface</h2>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  This document specifies the HL7 Version 3 Data Types in the
                  context of their XML Implementation Technology Specification (ITS).
                  Although ITS dependent, this document can stand on its own for
                  the purpose of this ballot.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  This document is based on the Data Types Abstract Specification, which defines
                  the data types on an abstract layer independent from representation.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Vocabulary tables within this specification list the current
                  contents of vocabulary domains for ease of reference by the
                  reader. However, at any given time the normative source for these
                  domains is the vocabulary tables in the RIM database. For some large
                  domains, only a sample of possible values is shown. The complete
                  domains can be referenced in the vocabulary tables by looking up the
                  domain name associated with the table in the RIM vocabulary
                  tables.
                  
               </p>
            </td>
         </tr>
         <!--divN/head-->
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h2><a name="datyp2acks"></a>ii 
               </h2>
            </td>
            <td class="body_col">
               <h2>Acknowledgements</h2>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The following persons served as co-editors of this document or have
                  otherwise made major contributions to this specification.  Wes Rishel
                  (Gartner Group) has driven the initial forumlation of the approach.
                  Paul V. Biron (Kaiser Permanente) has prepared the first ballot draft
                  and continued to be a major support in all XML matters.  Douglas Pratt
                  (Siemens) has contributed the initial distillation of the abstract
                  definitions. Gunther Schadow (Regenstrief Institute, Inc.) has done
                  most of the editing, document automation, and maintenance during the
                  many ballot cycles.  Major contributions of thought are from Mark
                  Tucker (Regenstrief Institute). Lloyd McKenzie (IBM), and Grahame
                  Grieve (Kestral Computing Pty. Ltd.) have helped in the cleaning
                  up of many aspects of the recent ballot draft.
                  
               </p>
            </td>
         </tr>
         <hr title="Separator from body">
         <!--divN/head-->
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h2><a name="intro"></a>1 
               </h2>
            </td>
            <td class="body_col">
               <h2>Introduction</h2>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>What is a Data Type?</strong>
                  Data types are the basic building blocks used to construct messages,
                  computerized patient record documents, business objects and their
                  transactions. Data types define the meaning of any given field's
                  value. Without knowing a field's data type, it is impossible to
                  interpret the field's value.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Representation of Data Values.</strong>
                  On an abstract layer, independent from representation, data types
                  define properties of values. When values are represented, some of
                  their properties are directly represented as atomic literal forms or
                  as data structures. At that point we call those properties
                  "components". On the representation layer we can also distinguish
                  simple data types, represented as atomic literal forms, from complex
                  ones, represented as structures with components. For the implementor,
                  it is important to realize that data types have more properties than
                  shown as components, and that it only depends on the implementation
                  technology and ITS specification what data types are simple or complex
                  and which of their properties are represented as "components" and
                  which are inferred from those components.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  This specification defines standard representations for data values in
                  XML only. Other ITS, and programming environments may choose different
                  representations and data structures, all of which must be consistent
                  with the Data Types Abstract Specification.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="organization"></a>1.1 
               </h3>
            </td>
            <td class="body_col">
               <h3>Organization of this Specification</h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>This specification is divided in two major parts:</p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <ol>
                  <li>Basic data types</li>
                  <li>Generic data types (templates)</li>
               </ol>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The fully specified data types are organized approximately in the same
                  order in which they appear in the Data Types Abstract Specification, divided in roughly
                  three categories: (1) boolean, binary, text and multimedia, (2) codes
                  and identifiers, and (3) quantitative data types.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Generic types are about collections (sets, lists, etc.) and common
                  data type extensions to deal with uncertainty, time-dependency and
                  other qualifications of data values. Finally, the framework of
                  specifying complex timing patterns (e.g., for scheduling periodic
                  activities) is mostly specified in terms of generic data types.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The following table lists all data types specified in the XML ITS.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-summary-table">&nbsp;</a>
                     			Table
                     			1: 
                     Overview of HL7 version 3 data types
                     
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Symbol</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>Data Value</td>
                        <td>ANY</td>
                        <td>
                           Defines the basic properties of every data value. This
                           is an abstract type, meaning that no value can be just
                           a data value without belonging to any concrete type.
                           Every concrete type is a specialization of this
                           general abstract DataValue type.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Boolean</td>
                        <td>BL</td>
                        <td>
                           The Boolean type stands for the values of two-valued logic.
                           A Boolean value can be either <em>true</em> or
                           <em>false</em>, or, as any other value may be NULL.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>BooleanNonNull</td>
                        <td>BN</td>
                        <td>
                           The BooleanNonNull type is used where a Boolean cannot
                           have a null value. A Boolean value can be either
                           <em>true</em> or <em>false</em>.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Binary Data</td>
                        <td>BIN</td>
                        <td>
                           Binary data is a raw block of bits. Binary data is a
                           protected type that MUST not be used outside the data
                           type specification.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Encapsulated Data</td>
                        <td>ED</td>
                        <td>
                           Data that is primarily intended for human interpretation
                           or for further machine processing is outside the scope of
                           HL7. This includes unformatted or formatted written language,
                           multimedia data, or structured information as defined by a
                           different standard (e.g., XML-signatures.)  Instead of the
                           data itself, an ED may contain 
                           only a reference (see TEL.) Note
                           that the ST data type is a
                           specialization of <em>ED</em>
                           when the mediaType is <em>text/plain</em>.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Character String</td>
                        <td>ST</td>
                        <td>
                           The character string data type stands for text data,
                           primarily intended for machine processing (e.g.,
                           sorting, querying, indexing, etc.) Used for names,
                           symbols, and formal expressions.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Coded Simple Value</td>
                        <td>CS</td>
                        <td>
                           Coded data in its simplest form, consists of a code.
                           The code system and code system version is fixed by 
                           the context in which the <em>CS</em> value occurs. <em>CS</em> is used
                           for coded attributes that have a single HL7-defined
                           value set.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Coded Value</td>
                        <td>CV</td>
                        <td>
                           Coded data, consists of a code, display name, code system,
                           and original text. Used when a single code value must be sent.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Coded Ordinal</td>
                        <td>CO</td>
                        <td>
                           Coded data, where the domain from which the codeset comes
                           is ordered. The Coded Ordinal data type adds semantics
                           related to ordering so that models that make use of such
                           domains may introduce model elements that involve statements
                           about the order of the terms in a domain. 
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Coded with Equivalents</td>
                        <td>CE</td>
                        <td>
                           Coded data, consists of a coded value (CV)
                           and, optionally, coded value(s) from other coding systems
                           that identify the same concept. Used when alternative
                           codes may exist.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Concept Descriptor</td>
                        <td>CD</td>
                        <td>
                           A concept descriptor represents any kind of concept usually
                           by giving a code defined in a code system.  A concept
                           descriptor can contain the original text or phrase that
                           served as the basis of the coding and one or more
                           translations into different coding systems. A concept
                           descriptor can also contain qualifiers to describe, e.g.,
                           the concept of a "left foot" as a postcoordinated term built
                           from the primary code "FOOT" and the qualifier "LEFT".
                           In exceptional cases, the concept descriptor need not
                           contain a code but only the original text describing
                           that concept.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Concept Role</td>
                        <td>CR</td>
                        <td>
                           A concept qualifier code with optionally named role.
                           Both qualifier role and value codes must be defined by
                           the coding system.  For example, if SNOMED RT defines a
                           concept "leg", a role relation "has-laterality", and
                           another concept "left", the concept role relation allows
                           to add the qualifier "has-laterality: left" to a primary
                           code "leg" to construct the meaning "left leg".
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Character String with Code</td>
                        <td>SC</td>
                        <td>
                           An ST that optionally may have a code attached.
                           The text must always be present if a code is present. The
                           code is often a local code.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Unique Identifier String</td>
                        <td>UID</td>
                        <td>
                           A unique identifier string is a character string which
                           identifies an object in a globally unique and timeless
                           manner. The allowable formats and values and procedures
                           of this data type are strictly controlled by HL7. At this
                           time, user-assigned identifiers may be certain character
                           representations of ISO Object Identifiers (OID)
                           and DCE
                           Universally Unique Identifiers (UUID).
                           HL7 also reserves
                           the right to assign other forms of UIDs (RUID,
                           such as mnemonic
                           identifiers for code systems.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Instance Identifier</td>
                        <td>II</td>
                        <td>
                           An identifier that uniquely identifies a thing or object.
                           Examples are object identifier for HL7 RIM objects,
                           medical record number, order id, service catalog item id,
                           Vehicle Identification Number (VIN), etc. Instance
                           identifiers are defined based on ISO object identifiers.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Universal Resource Locator</td>
                        <td>URL</td>
                        <td>
                           A telecommunications address  specified according to
                           Internet standard RFC 1738
                           [<a href="http://www.ietf.org/rfc/rfc1738.txt">http://www.ietf.org/rfc/rfc1738.txt</a>]. The
                           URL specifies the protocol and the contact point defined
                           by that protocol for the resource.  Notable uses of the
                           telecommunication address data type are for telephone and
                           telefax numbers, e-mail addresses, Hypertext references,
                           FTP references, etc.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Telecommunication Address</td>
                        <td>TEL</td>
                        <td>
                           A telephone number (voice or fax), e-mail address, or
                           other locator for a resource (information or service)
                           mediated by telecommunication equipment. The address
                           is specified as a URL
                           qualified by time specification and use codes that help
                           in deciding which address to use for a given time and
                           purpose.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Address Part</td>
                        <td>ADXP</td>
                        <td>
                           A character string that may have a type-tag signifying its
                           role in the address. Typical parts that exist in about
                           every address are street, house number, or post box,
                           postal code, city, country but other roles may be defined
                           regionally, nationally, or on an enterprise level (e.g. in
                           military addresses). Addresses are usually broken up into
                           lines, which are indicated by special line-breaking
                           delimiter elements (e.g., DEL).
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Postal Address</td>
                        <td>AD</td>
                        <td>
                           Mailing and home or office addresses. A sequence of
                           address parts, such as street or post office Box, city,
                           postal code, country, etc.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Entity Name Part</td>
                        <td>ENXP</td>
                        <td>
                           A character string token representing a part of a name.
                           May have a type code signifying the role of the part in
                           the whole entity name, and a qualifier code for more detail
                           about the name part type. Typical name parts for person
                           names are given names, and family names, titles, etc.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Entity Name</td>
                        <td>EN</td>
                        <td>
                           A name for a person, organization, place or thing. A
                           sequence of name parts, such as given name or family
                           name, prefix, suffix, etc. Examples for entity name
                           values are "Jim Bob Walton, Jr.", "Health Level Seven,
                           Inc.", "Lake Tahoe", etc. An entity name may be as simple
                           as a character string or may consist of several entity name
                           parts, such as, "Jim", "Bob", "Walton", and "Jr.", "Health
                           Level Seven" and "Inc.", "Lake" and "Tahoe".
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Person Name</td>
                        <td>PN</td>
                        <td>
                           A name for a person. A sequence of name parts, such as
                           given name or family name, prefix, suffix, etc. PN differs
                           from EN because the qualifier type cannot include LS
                           (Legal Status).
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Organization Name</td>
                        <td>ON</td>
                        <td>
                           A name for an organization. A sequence of name parts.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Trivial Name</td>
                        <td>TN</td>
                        <td>
                           A restriction of entity name that is effectively a simple string used
                           for a simple name for things and places.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Quantity</td>
                        <td>QTY</td>
                        <td><em>QTY</em> is an abstract generalization
                           for all data types (1) whose value set has an order
                           relation (less-or-equal) and (2) where difference is
                           defined in all of the data type's totally ordered value
                           subsets.  The quantity type abstraction is needed in
                           defining certain other types, such as the interval and
                           the probability distribution.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Integer Number</td>
                        <td>INT</td>
                        <td>
                           Integer numbers (-1,0,1,2, 100, 3398129, etc.) are precise
                           numbers that are results of counting and enumerating.
                           Integer numbers are discrete, the set of integers is
                           infinite but countable.  No arbitrary limit is imposed on
                           the range of integer numbers. Two NULL flavors are
                           defined for the positive and negative infinity.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Real Number</td>
                        <td>REAL</td>
                        <td>
                           Fractional numbers. Typically used whenever quantities
                           are measured, estimated, or computed from other real
                           numbers.  The typical representation is decimal, where
                           the number of significant decimal digits is known as the
                           precision. Real numbers are needed beyond integers
                           whenever quantities of the real world are measured,
                           estimated, or computed from other real numbers. The term
                           "Real number" in this specification is used to mean
                           that fractional values are covered without necessarily
                           implying the full set of the mathematical real numbers.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Physical Quantity</td>
                        <td>PQ</td>
                        <td>
                           A dimensioned quantity expressing the result of a
                           measurement act.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Physical Quantity Representation</td>
                        <td>PQR</td>
                        <td>
                           A representation of a physical quantity in a unit from
                           any code system. Used to show alternative representation
                           for a physical quantity.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Monetary Amount</td>
                        <td>MO</td>
                        <td>
                           A monetary amount is a quantity expressing the amount of
                           money in some currency. Currencies are the units in which
                           monetary amounts are denominated in different economic
                           regions. While the monetary amount is a single kind of
                           quantity (money) the exchange rates between the different
                           units are variable.  This is the principle difference
                           between physical quantity and monetary amounts, and the
                           reason why currency units are not physical units.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Ratio</td>
                        <td>RTO</td>
                        <td>
                           A quantity constructed as the quotient of a numerator
                           quantity divided by a denominator quantity. Common
                           factors in the numerator and denominator are not
                           automatically cancelled out.  <em>RTO</em> supports titers
                           (e.g., "1:128") and other quantities produced by
                           laboratories that truly represent ratios. Ratios are
                           not simply "structured numerics", particularly blood
                           pressure measurements (e.g. "120/60") are not ratios.
                           In many cases REAL should be used instead
                           of <em>RTO</em>.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Point in Time</td>
                        <td>TS</td>
                        <td>
                           A quantity specifying a point on the axis of natural time.
                           A point in time is most often represented as a calendar
                           expression.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Set</td>
                        <td>SET</td>
                        <td>
                           A value that contains other distinct values in no particular order.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Set Component</td>
                        <td>SXCM</td>
                        <td>
                           An ITS-defined generic type extension for the base data
                           type of a set, representing a component of a general set
                           over a discrete or continuous value domain. Its use is
                           mainly for continuous value domains. Discrete (enumerable)
                           set components are the individual elements of the base
                           data type.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Sequence</td>
                        <td>LIST</td>
                        <td>
                           A value that contains other discrete values in a
                           defined sequence.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Generated Sequence</td>
                        <td>GLIST</td>
                        <td>
                           A periodic or monotone sequence of values generated
                           from a few parameters, rather than being enumerated.
                           Used to specify regular sampling points for biosignals.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Sampled Sequence</td>
                        <td>SLIST</td>
                        <td>
                           A sequence of sampled values scaled and translated from a
                           list of integer values.  Used to specify sampled biosignals.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Bag</td>
                        <td>BAG</td>
                        <td>
                           An unordered collection of values, where each value can
                           be contained more than once in the bag.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Bag Item</td>
                        <td>BXIT</td>
                        <td>
                           An ITS-defined generic data type extension that
                           represents a collection of a certain number of identical
                           items in a bag.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Interval</td>
                        <td>IVL</td>
                        <td>
                           A set of consecutive values of an ordered base data type.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Interval Boundary</td>
                        <td>IVXB</td>
                        <td>
                           An ITS-defined generic type extension representing the
                           boundary value for an interval.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>History</td>
                        <td>HIST</td>
                        <td>
                           A set of data values that conform to the history item
                           (HXIT) type, (i.e., that have a valid-time
                           property). The history information is not limited to the
                           past; expected future values can also appear.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>History Item</td>
                        <td>HXIT</td>
                        <td>
                           A generic data type extension that tags a time range to
                           any data value of any data type.  The time range is the
                           time in which the information represented by the value
                           is (was) valid.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Uncertain Value - Probabilistic</td>
                        <td>UVP</td>
                        <td>
                           A generic data type extension used to specify a
                           probability expressing the information producer's belief
                           that the given value holds.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Non-Parametric Probability Distribution</td>
                        <td>NPPD</td>
                        <td>
                           A set of uncertain values with probabilities (also known
                           as a histogram).
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Periodic Interval of Time</td>
                        <td>PIVL</td>
                        <td>
                           An interval of time that recurs periodically. Periodic
                           intervals have two properties, phase and period. The
                           phase specifies the "interval prototype" that is repeated
                           every period.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Event-Related Interval of Time</td>
                        <td>EIVL</td>
                        <td>
                           Specifies a periodic interval of time where the
                           recurrence is based on activities of daily living
                           or other important events that are time-related but
                           not fully determined by time.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Parenthetic Set Expression</td>
                        <td>SXPR</td>
                        <td>
                           A set-component that is itself made up of set-components
                           that are evaluated as one value.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>Parametric Probability Distribution</td>
                        <td>PPD</td>
                        <td>
                           A generic data type extension specifying uncertainty of
                           quantitative data using a distribution function and its
                           parameters. Aside from the specific parameters of the
                           distribution, a mean (expected value) and standard
                           deviation is always given to help maintain a minimum layer
                           of interoperability if receiving applications cannot deal
                           with a certain probability distribution.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>General Timing Specification</td>
                        <td>GTS</td>
                        <td>
                           A set of points in time, specifying the timing of events
                           and actions and the cyclical validity-patterns that may
                           exist for certain kinds of information, such as phone
                           numbers (evening, daytime), addresses (so called
                           "snowbirds," residing closer to the equator during winter
                           and farther from the equator during summer) and office
                           hours.
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Element and Attibute Forms</strong></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Data types may be represented in either an Element form or an abbreviated
                  Attribute form. The context where the data type is used will define which
                  form is to be used.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  In the Element form, which is the normal case, the data type is represented
                  using an XML elment. This is usually encountered for high-level
                  HL7 content derived from the Reference Information Model (RIM).
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  In the abbreviated Attribute form, the data type is represented by a single
                  XML attribute. This form is used when the data type is a property of other
                  data types or when the data type is used in a Stuctutral RIM attribute.
                  If an Attribute form is allowed, it is defined in the narrative.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Any data types represented in an Attribute form cannot convey any
                  form of null flavor. If the attribute is not present in the XML instance
                  then the data type has a null flavor of NI.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="xmlrep"></a>1.2 
               </h3>
            </td>
            <td class="body_col">
               <h3>Defining the XML Representation of Data Types</h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  This standard specifies the XML representation for the
                  HL7 data types. The XML representation is described in several
                  different ways:
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <ul style="margin-left:20px;">
                  <li>Narrative</li>
                  <li>Template</li>
               </ul>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>XML Templates</strong></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The XML Template format used in this document has been adapted
                  from the format used in the W3C XML Schema specification.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 1</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type ED --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   representation = (B64 | TXT) : TXT
   language = CS
   mediaType = CS
   compression = CS
   integrityCheck = BIN
   integrityCheckAlgorithm = (SHA-1 | SHA-256) : SHA-1
   &gt;
  <em>Content</em>: ( reference, thumbnail, (#PCDATA | any) )
&lt;/x&gt;

&lt;!-- type EN --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   use = CS*
   &gt;
  <em>Content</em>: ( (delimiter | family | given | prefix | suffix)*, validTime )
&lt;/x&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  This example template shows the attributes and elements for the
                  <a class="termref" href="#dtimpl-ED">ED</a> and <a class="termref" href="#dtimpl-EN">EN</a> types.
                  The template describes a set of XML attributes and elements that may be used to
                  represent the semantics of the data type described in the Data Types Abstract Specification.
                  There may not be a direct mapping between the XML attributes and elements and
                  the properties of the type described in the Data Types Abstract Specification. If the name of
                  the XML attribute or element matches a property name in the Data Types Abstract Specification
                  then the semantics of the content will be as described in the Data Types Abstract Specification,
                  otherwise the narrative will explain the use of the attribute or element.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  This specification describes types, not elements, so the element name
                  for a given type is not known. The character x is used in place of
                  the element name, which will be determined by the context in which the type
                  is used, either in this specification, or the name of the RIM attribute.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  For each attribute, the XML name of the attribute is shown, followed by
                  either a set of possible values or a type name.  Allowed values are shown
                  separated by vertical bars between parentheses. A default value, if applicable,
                  is specified following a colon. If the attribute is assigned a type, then
                  it is represented using the Attribute format described for the specified type.
                  Some attributes are given the type <a class="termref" href="#dtimpl-CS">CS</a>*. For these
                  attributes, the valid content is a whitespace separated list of
                  <a class="termref" href="#dtimpl-CS">CS</a> codes.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  For the element and text content, only the element names are shown. The type
                  of the elements is described in the narrative associated with the type. The
                  presence of a * denotes that the element or set of elements grouped by
                  parentheses may appear more than once.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Some types may contain text data. This is represented using #PCDATA. Any
                  text content must be properly escaped character content with no markup.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  All attributes and elements are optional. If an attribute or
                  element is not present, then the data type property it represents has the
                  nullFlavor NI. Although all attributes and elements are optional, the datatype
                  represented in the XML instance must be a valid instance of the datatype - it
                  must meet all the constraints and specifications from the Data Types Abstract Specification.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The rules which determine which data types can be substituted for other
                  data types are defined in the Data Types Abstract Specification.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Validation against Schema and Predicates</strong></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  HL7 artefact processing systems are not required to validate any HL7
                  XML data type representations against any schema or XPath predicates.
                  Systems may wish to perform schema validation to gain access to
                  the Post Schema Validation Instance
                  [<a href="http://www.w3.org/TR/xmlschema-1#key-psvi">http://www.w3.org/TR/xmlschema-1#key-psvi</a>],
                  but there will be no requirement to do this in order to properly understand the message,
                  though all systems must be aware of the default values that are not represented
                  in the instance by some means.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <blockquote><b>NOTE: </b>
                  All XML data type representations must conform to this
                  specification irrespective of whether validation by schema or any
                  other method is being performed.
                  
               </blockquote>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <blockquote><b>NOTE: </b>
                  No existing technology for validating XML is able to completely
                  validate the HL7 data types as represented in XML.
                  
               </blockquote>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="namespaces"></a>1.3 
               </h3>
            </td>
            <td class="body_col">
               <h3>Namespaces used in this document</h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <tr>
                     <td colspan="1">xml</td>
                     <td colspan="1">http://www.w3.org/XML/1998/namespace</td>
                     <td colspan="1">xml namespace defined in Namespaces in XML
                        			[<a href="http://www.w3.org/TR/1999/REC-xml-names-19990114">http://www.w3.org/TR/1999/REC-xml-names-19990114</a>]
                     </td>
                  </tr>
                  <tr>
                     <td colspan="1">xs</td>
                     <td colspan="1">http://www.w3.org/2001/XMLSchema</td>
                     <td colspan="1">W3C Schema namespace defined in XML Schema Part 1: Structures
                        					  [<a href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/">http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/</a>]
                     </td>
                  </tr>
                  <tr>
                     <td colspan="1">xsi</td>
                     <td colspan="1">http://www.w3.org/2001/XMLSchema-instance</td>
                     <td colspan="1">W3C Schema namespace defined in XML Schema Part 1: Structures
                        					  [<a href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/">http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/</a>]
                     </td>
                  </tr>
                  <tr>
                     <td colspan="1">hl7</td>
                     <td colspan="1">urn:hl7-org:v3</td>
                     <td colspan="1">HL7 defined namespace for V3</td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="Use-of-attributes-from-XML-specifications"></a>1.4 
               </h3>
            </td>
            <td class="body_col">
               <h3>Use of attributes from XML specifications</h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The W3C XML specifications define several attributes in w3c namespaces that
                  carry particular meaning when processing XML documents. This section
                  documents the usage for several such attributes. Other attributes not
                  described in this section may be used but HL7 artefact processing systems
                  are not required to attach any meaning to them beyond that required in the
                  context of processing the XML containing the HL7 artefacts.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><a href="http://www.w3.org/TR/REC-xml/#lang" target="xml-rec">xml:lang</a>
                  is not used. HL7 uses it's own attribute to convey the
                  HL7 langauge property. This is done for several reasons.
                  Many existing tools do not properly support
                  xml:lang, and using <a href="http://www.w3.org/TR/REC-xml/#lang" target="xml-rec">xml:lang</a>
                  provides no useful outcomes. In addition, using a <a class="termref" href="#dtimpl-CS">CS</a>
                  instead of <a href="http://www.w3.org/TR/REC-xml/#lang" target="xml-rec">xml:lang</a>
                  provides clear support for the realm variation by international HL7
                  affiliates. Note that at present, the codeset of <a class="termref" href="#comp-ED.language">language</a>
                  is identical to that of 
                  <a href="http://www.w3.org/TR/REC-xml/#lang" target="xml-rec">xml:lang</a>
                  so it is possible to transform from one to the other.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><a href="http://www.w3.org/TR/xmlschema-1/#schemaLocation">xsi:schemaLocation</a>
                  must not be used in an instance to point to a schema
                  document to be used for validation. Instance processors
                  are expected to provide their own schemas.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><a href="http://www.w3.org/TR/xmlschema-1/#type">xsi:type</a>
                  is required when:
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <ul style="margin-left:20px;">
                  <li>
                     The type of the RIM attribute is <a class="termref" href="#dtimpl-ANY">ANY</a>,
                     <a class="termref" href="#dtimpl-RTO">RTO</a>, or <a class="termref" href="#dtimpl-QTY">QTY</a></li>
                  <li>
                     An instance of an <a class="termref" href="#dtimpl-SC">SC</a> is being sent
                     as a promotion of an <a class="termref" href="#dtimpl-ST">ST</a></li>
               </ul>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><a href="http://www.w3.org/TR/xmlschema-1/#type">xsi:type</a>
                  may be used at other times according to the XML Schema specification.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  When xsi:type is used to describe a data type defined in this specification,
                  the correct type name is the value of the "Symbol" column for the type as given
                  in <a href="#dtimpl-summary-table">Table
                     			1</a> in the hl7 namespace.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  For generic types, the type names of the parameter types are appended to
                  the generic type with an underscore between, so that an
                  <a class="termref" href="#dtimpl-IVL">IVL</a>&lt;<a class="termref" href="#dtimpl-TS">TS</a>&gt; becomes IVL_TS.
                  No ambiguities arise with this naming scheme due to the way that
                  the data types have been defined.
                  
               </p>
            </td>
         </tr>
         <!--divN/head-->
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h2><a name="basic-types"></a>2 
               </h2>
            </td>
            <td class="body_col">
               <h2>Basic Data Types</h2>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-ANY"></a>2.1 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="ANY"></a>Data Value (ANY)
               </h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Defines the basic properties of every data value. This
                  is an abstract type, meaning that no value can be just
                  a data value without belonging to any concrete type.
                  Every concrete type is a specialization of this
                  general abstract DataValue type.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>ANY</em> is an abstract datatype and may not be used directly; hence,
                  <em>ANY</em> has no XML representation.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-ANY.nullFlavor"></a>2.1.1 
               </h4>
            </td>
            <td class="body_col">
               <h4>Null Flavor : <a class="termref" href="#dtimpl-CS">CS</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  An exceptional value expressing missing information
                  and possibly the reason why the information is missing.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Every data element has either a proper value or it is considered
                  NULL. If and only if it is NULL, a "null flavor" provides more
                  detail as to in what way or why no proper value is supplied.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="domain-NullFlavor">&nbsp;</a>
                     			Table
                     			2: Domain NullFlavor
                  </caption>
                  <thead>
                     <tr>
                        <th>code</th>
                        <th>name</th>
                        <th>definition</th>
                     </tr>
                  </thead>
                  <tr>
                     <td>NI</td>
                     <td>NoInformation</td>
                     <td>No information whatsoever can be inferred from this exceptional value.  This is the most general exceptional value.  It is
                        also the default exceptional value.
                     </td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;OTH</td>
                     <td>other</td>
                     <td>The actual value is not an element in the value domain of a variable.  (e.g., concept not provided by required code system).</td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;&nbsp;&nbsp;NINF</td>
                     <td>negative infinity</td>
                     <td>Negative infinity of numbers.</td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;&nbsp;&nbsp;PINF</td>
                     <td>positive infinity</td>
                     <td>Positive infinity of numbers.</td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;UNK</td>
                     <td>unknown</td>
                     <td>A proper value is applicable, but not known.</td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;&nbsp;&nbsp;ASKU</td>
                     <td>asked but unknown</td>
                     <td>Information was sought but not found (e.g., patient was asked but didn't know)</td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NAV</td>
                     <td>temporarily unavailable</td>
                     <td>Information is not available at this time but it is expected that it will be available later.</td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;&nbsp;&nbsp;NASK</td>
                     <td>not asked</td>
                     <td>This information has not been sought (e.g., patient was not asked)</td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;&nbsp;&nbsp;TRC</td>
                     <td>trace</td>
                     <td>The content is greater than zero, but too small to be quantified.</td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;MSK</td>
                     <td>masked</td>
                     <td>There is information on this item available but it has not been provided by the sender due to security, privacy or other reasons.
                        There may be an alternate mechanism for gaining access to this information.Note: using this null flavor does provide information
                        that may be a breach of confidentiality, even though no detail data is provided.  Its primary purpose is for those circumstances
                        where it is necessary to inform the receiver that the information does exist without providing any detail.
                     </td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;NA</td>
                     <td>not applicable</td>
                     <td>No proper value is applicable in this context (e.g., last menstrual period for a male).</td>
                  </tr>
                  <tr>
                     <td>NP</td>
                     <td>not present</td>
                     <td>Value is not present in a message.  This is only defined in messages, never in application data!  All values not present in
                        the message must be replaced by the applicable default, or no-information (NI) as the default of all defaults.
                     </td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>nullFlavor</em> is represented by the XML attribute<em>nullFlavor</em>
                  whose value, if present, must be a valid value from the NullFlavor
                  domain (<a href="#domain-NullFlavor">Table
                     			2</a>).
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-BL"></a>2.2 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="BL"></a>Boolean (BL)
               </h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The Boolean type stands for the values of two-valued logic.
                  A Boolean value can be either <em>true</em> or
                  <em>false</em>, or, as any other value may be NULL.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  All Boolean values obey the common operators negation, conjunction,
                  and disjunction. With the NULL value these common Boolean operations
                  are extended as shown in the following tables.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="BL-truth-tables">&nbsp;</a>
                     			Table
                     			3: Truth tables for Boolean logic with NULL values
                  </caption>
                  <thead>
                     <tr>
                        <th colspan="1">NOT</th>
                        <th colspan="1">&nbsp;</th>
                        <th colspan="1"></th>
                        <th colspan="1">AND</th>
                        <th colspan="1">true</th>
                        <th colspan="1">false</th>
                        <th colspan="1">NULL</th>
                        <th colspan="1"></th>
                        <th colspan="1">OR</th>
                        <th colspan="1">true</th>
                        <th colspan="1">false</th>
                        <th colspan="1">NULL</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <th colspan="1">true</th>
                        <td colspan="1">false</td>
                        <td colspan="1"></td>
                        <th colspan="1">true</th>
                        <td colspan="1">true</td>
                        <td colspan="1">false</td>
                        <td colspan="1">NULL</td>
                        <td colspan="1"></td>
                        <th colspan="1">true</th>
                        <td colspan="1">true</td>
                        <td colspan="1">true</td>
                        <td colspan="1">true</td>
                     </tr>
                     <tr>
                        <th colspan="1">false</th>
                        <td colspan="1">true</td>
                        <td colspan="1"></td>
                        <th colspan="1">false</th>
                        <td colspan="1">false</td>
                        <td colspan="1">false</td>
                        <td colspan="1">false</td>
                        <td colspan="1"></td>
                        <th colspan="1">false</th>
                        <td colspan="1">true</td>
                        <td colspan="1">false</td>
                        <td colspan="1">NULL</td>
                     </tr>
                     <tr>
                        <th colspan="1">NULL</th>
                        <td colspan="1">NULL</td>
                        <td colspan="1"></td>
                        <th colspan="1">NULL</th>
                        <td colspan="1">NULL</td>
                        <td colspan="1">false</td>
                        <td colspan="1">NULL</td>
                        <td colspan="1"></td>
                        <th colspan="1">NULL</th>
                        <td colspan="1">true</td>
                        <td colspan="1">NULL</td>
                        <td colspan="1">NULL</td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>BL</em> is represented by both Element and Attribute forms.
                  In the Element form, the name of the element is determined by the
                  context in which it is used. The element has attributes as described
                  in the template and the sub-sections below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 2</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type BL --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   value = (true | false)
   /&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  XML instances may carry either a nullFlavor or a value, but not both.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The Attribute form of <em>BL</em> is used when properties of other data types
                  have type <em>BL</em>.  The name of the attribute is determined by the context
                  in which it is used. The attribute must have the value <em>true</em> 
                  or <em>false</em>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="BL-examples"></a>2.2.1 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The first example shows true and false negation and context conduction indicators.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 1</caption>
                  <tr>
                     <td class="example"><pre>
&lt;negationInd value='true'/&gt;
&lt;contextConductionInd value='false'/&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The second example shows the use of true and false
                  inclusive interval boundaries.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 2</caption>
                  <tr>
                     <td class="example"><pre>
&lt;effectiveTime&gt;
   &lt;low value='20020101' inclusive='true'/&gt;
   &lt;high value='20040101' inclusive='false'/&gt;
&lt;/effectiveTime&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-BN"></a>2.3 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="BN"></a>BooleanNonNull (BN)
               </h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The BooleanNonNull type is used where a Boolean cannot
                  have a null value. A Boolean value can be either
                  <em>true</em> or <em>false</em>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>BN</em> is represented by both Element and Attribute
                  forms. In the Element form, the name of the element is determined
                  by the context in which it is used. The element has attributes as
                  described in the template and the sub-sections below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 3</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type BN --&gt;
&lt;x
   value = (true | false)
   /&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  XML instances must carry a value.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The Attribute form of <em>BN</em> is used when properties of other data types
                  have type <em>BN</em>.  The name of the attribute is determined by the context
                  in which it is used and whose value is either <em>true</em> or
                  <em>false</em>. Unless the value has a default property the
                  attribute must be present.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-BIN"></a>2.4 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="BIN"></a>Binary Data (BIN)
               </h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Binary data is a raw block of bits. Binary data is a
                  protected type that MUST not be used outside the data
                  type specification.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-BIN-comp-summary">&nbsp;</a>
                     			Table
                     			4: Components of
                     Binary Data
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>data</td>
                        <td>XML Text Content</td>
                        <td>
                           The data itself represented in the XML instance encoding
                           according to the binary data representation element (text
                           or base64 form.) ST and types that specialize ST use only
                           the text representation.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>representation</td>
                        <td>CS</td>
                        <td>
                           Specifies the representation of the binary data that
                           is the content of the binary data value.
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>BIN</em> is represented by both Element and Attribute
                  forms. The Element form serves as the basis of the encapsulated
                  data type, used for both written text and multimedia (binary data).
                  When an element is defined to be of type <em></em> that property is
                  represented as the character data (e.g., #PCDATA) content of the
                  element in question.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The Attribute form of <em>BIN</em> is used when properties of other
                  data types have type <em>BIN</em> (e.g., <a class="termref" href="#comp-ED.integrityCheck">ED.integrityCheck</a>).
                  The name of the XML attribute is determined by the name of the
                  property in question.  The value of the XML attribute must be the
                  base64 encoding [<a href="http://www.ietf.org/rfc/rfc2045.txt">http://www.ietf.org/rfc/rfc2045.txt</a>]
                  of the binary data.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-BIN.data"></a>2.4.1 
               </h4>
            </td>
            <td class="body_col">
               <h4>Data : XML Text Content</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The data itself represented in the XML instance encoding
                  according to the binary data representation element (text
                  or base64 form.) ST and types that specialize ST use only
                  the text representation.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>data</em> is represented as the text content of the
                  XML element representing the <em>BIN</em> value, whose value, if
                  present must be the base64 encoding of the actual value.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-BIN.representation"></a>2.4.2 
               </h4>
            </td>
            <td class="body_col">
               <h4>Representation : <a class="termref" href="#dtimpl-CS">CS</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Specifies the representation of the binary data that
                  is the content of the binary data value.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  BIN in the Data Types Abstract Specification does not have a representation property since,
                  for HL7's purposes, representation is not a meaningful property of data.
                  Therefore applications need not retain the representation.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>representation</em> is represented by the XML attribute<em>representation</em>
                  whose value, if present, must be <em>TXT</em> or <em>B64</em>.
                  The default value is <em>TXT</em>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>TXT</em> indicates that the character data of the
                  <em>BIN</em> is to be interpreted directly
                  as characters; <em>B64</em> indicates that the
                  <em>BIN</em> data has been base64 encoded
                  and must be decoded in order to recover the original data.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-ED"></a>2.5 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="ED"></a>Encapsulated Data (ED) specializes <a class="termref" href="#dtimpl-BIN">BIN</a></h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Data that is primarily intended for human interpretation
                  or for further machine processing is outside the scope of
                  HL7. This includes unformatted or formatted written language,
                  multimedia data, or structured information as defined by a
                  different standard (e.g., XML-signatures.)  Instead of the
                  data itself, an <a class="termref" href="#dtimpl-ED">ED</a> may contain 
                  only a reference (see <a class="termref" href="#dtimpl-TEL">TEL</a>.) Note
                  that the <a class="termref" href="#dtimpl-ST">ST</a> data type is a
                  specialization of <em>ED</em>
                  when the <a class="termref" href="#comp-ED.mediaType">mediaType</a> is <em>text/plain</em>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-ED-comp-summary">&nbsp;</a>
                     			Table
                     			5: Components of
                     Encapsulated Data
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>data</td>
                        <td>XML Text Content</td>
                        <td>
                           The data itself represented in the XML instance encoding
                           according to the binary data representation element (text
                           or base64 form.) ST and types that specialize ST use only
                           the text representation.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>representation</td>
                        <td>CS</td>
                        <td>
                           Specifies the representation of the binary data that
                           is the content of the binary data value.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>mediaType</td>
                        <td>CS</td>
                        <td>
                           Identifies the type of the encapsulated data and
                           identifies a method to interpret or render the data.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>charset</td>
                        <td>CS</td>
                        <td>
                           For character-based encoding types, this property
                           specifies the character set and character encoding
                           used. The charset shall be identified by an Internet
                           Assigned Numbers Authority (IANA) Charset Registration
                           [<a href="http://www.iana.org/assignments/character-sets">http://www.iana.org/assignments/character-sets</a>] 
                           in accordance with RFC 2978
                           [<a href="http://www.ietf.org/rfc/rfc2978.txt">http://www.ietf.org/rfc/rfc2978.txt</a>].
                           
                        </td>
                     </tr>
                     <tr>
                        <td>language</td>
                        <td>CS</td>
                        <td>
                           For character based information the language property
                           specifies the human language of the text.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>compression</td>
                        <td>CS</td>
                        <td>
                           Indicates whether the raw byte data is compressed,
                           and what compression algorithm was used.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>reference</td>
                        <td>TEL</td>
                        <td>
                           A telecommunication address (TEL), such as a URL
                           for HTTP or FTP, which will resolve to precisely
                           the same binary data that could as well have been
                           provided as inline data.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>integrityCheck</td>
                        <td>BIN</td>
                        <td>
                           The integrity check is a short binary value representing
                           a cryptographically strong checksum that is calculated
                           over the binary data. The purpose of this property, when
                           communicated with a reference is for anyone to validate
                           later whether the reference still resolved to the same
                           data that the reference resolved to when the encapsulated
                           data value with reference was created.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>integrityCheckAlgorithm</td>
                        <td>CS</td>
                        <td>
                           Specifies the algorithm used to compute the
                           integrityCheck value.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>thumbnail</td>
                        <td>ED</td>
                        <td>
                           A thumbnail is an abbreviated rendition of the full
                           data. A thumbnail requires significantly fewer
                           resources than the full data, while still maintaining
                           some distinctive similarity with the full data. A
                           thumbnail is typically used with by-reference
                           encapsulated data. It allows a user to select data
                           more efficiently before actually downloading through
                           the reference.
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Encapsulated data can be present in one of two forms, inline
                  or by reference. Inline data is communicated or moved as part
                  of the encapsulated data value, whereas by-reference data may
                  reside at a different (remote) location. The data is the same
                  whether it is located inline or remote.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 4</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type ED --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   representation = (B64 | TXT) : TXT
   language = CS
   mediaType = CS
   compression = CS
   integrityCheck = BIN
   integrityCheckAlgorithm = (SHA-1 | SHA-256) : SHA-1
   &gt;
   <em>Content</em>: ( reference, thumbnail, (#PCDATA | any) )
&lt;/x&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>ED</em> is always represented in Element form as
                  described in the template and sub-sections below. The binary
                  data is conveyed as inline character content. Alternatively
                  addition ED can contain the data as XML markup. In these cases
                  the mediaType is expected to describe some form of XML markup,
                  and the content must be
                  <a href="http://www.w3.org/TR/REC-xml/#dt-wellformed" target="xml-rec">well-formed</a>
                  XML contained in a single element in the ED content. If the
                  in-line content is HTML or SGML, it must be 
                  <a href="http://www.w3.org/TR/REC-xml/#dt-wellformed" target="xml-rec">well-formed</a>
                  XML or it must be represented as escaped or base64 encoded
                  character content.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Markup contained in an <em>ED</em> can come from any namespace other
                  than the HL7 V3 namespace (urn:hl7-org:v3) without restriction.
                  Additionally, any element in the HL7 namespace that represents
                  an interaction or the root of a CDA document may also appear.
                  The reason for this restriction on elements from the HL7 namespace
                  is to help support those who choose to do optional XML Schema
                  processing.  It would not be possible to write a schema definition
                  that would allow arbitrary content from the HL7 namespace since
                  that would result in a violation of
                  <a href="http://www.w3.org/TR/xmlschema-1/#cos-nonambig" target="schema-rec">
                     Schema Component Constraint: Unique Particle Attribution</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Because inline data for <em>ED</em> (and its restricted form,
                  <a class="termref" href="#dtimpl-ST">ST</a>) may be encoded as character
                  data, and the content model also includes a thumbnail and
                  reference element, <em>ED</em> has
                  <a href="http://www.w3.org/TR/REC-xml/#sec-mixed-content" target="xml-rec">mixed content</a>.
                  An instance of <em>ED</em> may only contain at most one text node.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-ED.data"></a>2.5.1 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Data : XML Text Content (inherited from <a class="termref" href="#dtimpl-BIN">BIN</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The data itself represented in the XML instance encoding
                  according to the binary data representation element (text
                  or base64 form.) ST and types that specialize ST use only
                  the text representation.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>data</em> is represented as the text content of the
                  XML element representing the <em>ED</em> value.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-ED.representation"></a>2.5.2 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Representation : <a class="termref" href="#dtimpl-CS">CS</a> (inherited from <a class="termref" href="#dtimpl-BIN">BIN</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Specifies the representation of the binary data that
                  is the content of the binary data value.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>representation</em> is represented by the XML attribute<em>representation</em>
                  whose value must either <em>TXT</em> or <em>B64</em>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-ED.mediaType"></a>2.5.3 
               </h4>
            </td>
            <td class="body_col">
               <h4>Media Type : <a class="termref" href="#dtimpl-CS">CS</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Identifies the type of the encapsulated data and
                  identifies a method to interpret or render the data.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The IANA defined domain of media types is established by
                  the Internet standard RFC 2046
                  [<a href="http://www.ietf.org/rfc/rfc2046.txt">http://www.ietf.org/rfc/rfc2046.txt</a>].
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  To promote interoperability, this specification prefers certain
                  media types to others. This is to define a greatest common
                  denominator on which interoperability is not only possible, but
                  that is powerful enough to support even advanced multimedia
                  communication needs.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><a href="#domain-MediaType">Table
                     			6</a>  below assigns a status to
                  certain MIME media types, where the status means one of the following:
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>required</strong>: Every HL7 application must support
                  at least the required media types if it supports a given kind
                  of media. One required media-type for each kind of media exists.
                  Some media types are required for a specific purpose, which is
                  then indicated as "required for ..."
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>recommended</strong>: Other media types are recommended
                  for a particular purpose. For any given purpose there should be
                  only very few additionally recommended media types and the rationale,
                  conditions and assumptions of such recommendations must be made
                  very clear.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>indifferent</strong>: This status means, HL7 does neither
                  forbid nor endorse the use of this media type. All media types not
                  mentioned here by default belong into the indifferent category. Since
                  there is one required and several recommended media types for most
                  practically relevant use cases, media types of this status should be
                  used very conservatively.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>deprecated</strong>: Deprecated media types should not be
                  used, because these media types are flawed, because there are better
                  alternatives, or because of certain risks. Such risks could be
                  security risks, for example, the risk that such a media type could
                  spread computer viruses. Not every flawed media type is marked as
                  deprecated, though. A media type that is not mentioned, and thus
                  considered other by default, may well be flawed.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="domain-MediaType">&nbsp;</a>
                     			Table
                     			6: Domain MediaType
                  </caption>
                  <thead>
                     <tr>
                        <th>code</th>
                        <th>name</th>
                        <th>status</th>
                        <th>definition</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>text/plain&nbsp;</td>
                        <td>Plain Text&nbsp;</td>
                        <td>required&nbsp;</td>
                        <td>For any plain text.  This is the default and is equivalent to a character string (ST) data type.&nbsp;</td>
                     </tr>
                     <tr>
                        <td>text/html&nbsp;</td>
                        <td>HTML Text&nbsp;</td>
                        <td>recommended&nbsp;</td>
                        <td>For marked-up text according to the Hypertext Mark-up Language.  HTML markup is sufficient for typographically marking-up
                           most written-text documents.  HTML is platform independent and widely deployed.&nbsp;
                        </td>
                     </tr>
                     <tr>
                        <td>text/x-hl7-ft&nbsp;</td>
                        <td>HL7 Text&nbsp;</td>
                        <td>recommended&nbsp;</td>
                        <td>For compatibility, this represents the HL7 v2.x FT data type.  Its use is recommended only for backward compatibility with
                           HL7 v2.x systems.&nbsp;
                        </td>
                     </tr>
                     <tr>
                        <td>text/xml&nbsp;</td>
                        <td>XML Text&nbsp;</td>
                        <td>indifferent&nbsp;</td>
                        <td>For structured character based data.  There is a risk that general SGML/XML is too powerful to allow a sharing of general
                           SGML/XML documents between different applications.&nbsp;
                        </td>
                     </tr>
                     <tr>
                        <td>text/rtf&nbsp;</td>
                        <td>RTF Text&nbsp;</td>
                        <td>indifferent&nbsp;</td>
                        <td>The Rich Text Format is widely used to share word-processor documents.  However, RTF does have compatibility problems, as
                           it is quite dependent on the word processor.  May be useful if word processor edit-able text should be shared.&nbsp;
                        </td>
                     </tr>
                     <tr>
                        <td>text/sgml&nbsp;</td>
                        <td>SGML Text&nbsp;</td>
                        <td>indifferent&nbsp;</td>
                        <td>For structured character based data.  There is a risk that general SGML/XML is too powerful to allow a sharing of general
                           SGML/XML documents between different applications.&nbsp;
                        </td>
                     </tr>
                     <tr>
                        <td>image/png&nbsp;</td>
                        <td>PNG Image&nbsp;</td>
                        <td>required&nbsp;</td>
                        <td>Portable Network Graphics (PNG) [http://www.cdrom.com/pub/png] is a widely supported lossless image compression standard with
                           open source code available.&nbsp;
                        </td>
                     </tr>
                     <tr>
                        <td>image/jpeg&nbsp;</td>
                        <td>JPEG Image&nbsp;</td>
                        <td>required&nbsp;</td>
                        <td>This format is required for high compression of high color photographs.  It is a "lossy" compression, but the difference to
                           lossless compression is almost unnoticeable to the human vision.&nbsp;
                        </td>
                     </tr>
                     <tr>
                        <td>image/g3fax&nbsp;</td>
                        <td>G3Fax Image&nbsp;</td>
                        <td>recommended&nbsp;</td>
                        <td>This is recommended only for fax applications.&nbsp;</td>
                     </tr>
                     <tr>
                        <td>image/gif&nbsp;</td>
                        <td>GIF Image&nbsp;</td>
                        <td>indifferent&nbsp;</td>
                        <td>GIF is a popular format that is universally well supported. However GIF is patent encumbered and should therefore be used
                           with caution.&nbsp;
                        </td>
                     </tr>
                     <tr>
                        <td>image/tiff&nbsp;</td>
                        <td>TIFF Image&nbsp;</td>
                        <td>indifferent&nbsp;</td>
                        <td>Although TIFF (Tag Image File Format) is an international standard it has many interoperability problems in practice.  Too
                           many different versions that are not handled by all software alike.&nbsp;
                        </td>
                     </tr>
                     <tr>
                        <td>audio/basic&nbsp;</td>
                        <td>Basic Audio&nbsp;</td>
                        <td>required&nbsp;</td>
                        <td>This is a format for single channel audio, encoded using 8bit ISDN mu-law [PCM] at a sample rate of 8000 Hz.  This format
                           is standardized by: CCITT, Fascicle III.4 -Recommendation G.711.  Pulse Code Modulation (PCM) of Voice Frequencies.  Geneva,
                           1972.&nbsp;
                        </td>
                     </tr>
                     <tr>
                        <td>audio/mpeg&nbsp;</td>
                        <td>MPEG audio layer 3&nbsp;</td>
                        <td>required&nbsp;</td>
                        <td>MPEG-1 Audio layer-3 is an audio compression algorithm and file format                       defined in ISO 11172-3 and ISO
                           13818-3. MP3 has an adjustable sampling frequency for highly compressed telephone to CD quality audio.&nbsp;
                        </td>
                     </tr>
                     <tr>
                        <td>audio/k32adpcm&nbsp;</td>
                        <td>K32ADPCM Audio&nbsp;</td>
                        <td>indifferent&nbsp;</td>
                        <td>ADPCM allows compressing audio data.  It is defined in the Internet specification RFC 2421 [ftp://ftp.isi.edu/in-notes/rfc2421.txt].
                           Its implementation base is unclear.&nbsp;
                        </td>
                     </tr>
                     <tr>
                        <td>video/mpeg&nbsp;</td>
                        <td>MPEG Video&nbsp;</td>
                        <td>required&nbsp;</td>
                        <td>MPEG is an international standard, widely deployed, highly efficient for high color video; open source code exists; highly
                           interoperable.&nbsp;
                        </td>
                     </tr>
                     <tr>
                        <td>video/x-avi&nbsp;</td>
                        <td>X-AVI Video&nbsp;</td>
                        <td>deprecated&nbsp;</td>
                        <td>The AVI file format is just a wrapper for many different codecs; it is a source of many interoperability problems.&nbsp;</td>
                     </tr>
                     <tr>
                        <td>model/vrml&nbsp;</td>
                        <td>VRML Model&nbsp;</td>
                        <td>recommended&nbsp;</td>
                        <td>This is an openly standardized format for 3D models that can be useful for virtual reality applications such as anatomy or
                           biochemical research (visualization of the steric structure of macromolecules)&nbsp;
                        </td>
                     </tr>
                     <tr>
                        <td>application/pdf&nbsp;</td>
                        <td>PDF&nbsp;</td>
                        <td>recommended&nbsp;</td>
                        <td>The Portable Document Format is recommended for written text that is completely laid out and read-only.  PDF is a platform
                           independent, widely deployed, and open specification with freely available creation and rendering tools.&nbsp;
                        </td>
                     </tr>
                     <tr>
                        <td>application/dicom&nbsp;</td>
                        <td>DICOM&nbsp;</td>
                        <td>recommended&nbsp;</td>
                        <td>Digital Imaging and Communications in Medicine (DICOM) MIME type defined in RFC3240 [http://ietf.org/rfc/rfc3240.txt].&nbsp;</td>
                     </tr>
                     <tr>
                        <td>application/msword&nbsp;</td>
                        <td>MSWORD&nbsp;</td>
                        <td>deprecated&nbsp;</td>
                        <td>This format is very prone to compatibility problems.  If sharing of edit-able text is required, text/plain, text/html or text/rtf
                           should be used instead.&nbsp;
                        </td>
                     </tr>
                     <tr>
                        <td>multipart/x-hl7-cda-level1&nbsp;</td>
                        <td>CDA Level 1 Multipart&nbsp;</td>
                        <td>recommended&nbsp;</td>
                        <td>The HL7 clinical document Architecture, Level 1 MIME package.&nbsp;</td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The set of required media types is very small so that no undue
                  requirements are forced on HL7 applications, especially legacy
                  systems. In general, no HL7 application is forced to support any given
                  kind of media other than written text. For example, many systems just
                  do not want to receive audio data, because those systems can only show
                  written text to their users. It is a matter of application conformance
                  statements to say: "I will not handle audio". Only if a system claims
                  to handle audio media, it must support the required media type for
                  audio.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>mediaType</em> is represented by the XML attribute<em>mediaType</em>
                  whose value, if present, must be a valid mediaType as specified
                  by the Internet standard RFC 2046
                  [<a href="http://www.ietf.org/rfc/rfc2046.txt">http://www.ietf.org/rfc/rfc2046.txt</a>]. The default
                  value is <em>text/plain</em>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-ED.charset"></a>2.5.4 
               </h4>
            </td>
            <td class="body_col">
               <h4>Charset : <a class="termref" href="#dtimpl-CS">CS</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  For character-based encoding types, this property
                  specifies the character set and character encoding
                  used. The charset shall be identified by an Internet
                  Assigned Numbers Authority (IANA) Charset Registration
                  [<a href="http://www.iana.org/assignments/character-sets">http://www.iana.org/assignments/character-sets</a>] 
                  in accordance with RFC 2978
                  [<a href="http://www.ietf.org/rfc/rfc2978.txt">http://www.ietf.org/rfc/rfc2978.txt</a>].
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>charset</em> is not explicitly represented in the XML ITS.
                  Rather, the value of charset is to be inferred from the encoding
                  used in the
                  <a href="http://www.w3.org/TR/REC-xml/#dt-entity" target="xml-rec">XML entity</a>
                  in which the <em>ED</em> value is contained.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-ED.language"></a>2.5.5 
               </h4>
            </td>
            <td class="body_col">
               <h4>Language : <a class="termref" href="#dtimpl-CS">CS</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  For character based information the language property
                  specifies the human language of the text.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The HL7 table for human languages is based on RFC 3066, Tags
                  for the Identification of Languages
                  [<a href="http://www.ietf.org/rfc/rfc3066.txt">http://www.ietf.org/rfc/rfc3066.txt</a>]. It is a
                  set of pre-coordinated pairs of one 2-letter ISO 639 language code
                  and one 2-letter ISO 3166 country code (e.g., en-us [English,
                  United States]).
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Language tags do not modify the meaning of the characters found
                  in the text; they are only an advice on if and how to present
                  or communicate the text. For this reason, any system or site that
                  does not deal with multilingual text or names in the real world
                  can safely ignore the language property.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>language</em> is represented by the XML attribute<em>language</em>
                  whose value, if present, must be a valid language tag as
                  defined by RFC 3066
                  [<a href="http://www.ietf.org/rfc/rfc3066.txt" target="rfcs">http://www.ietf.org/rfc/rfc3066.txt</a>].
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-ED.compression"></a>2.5.6 
               </h4>
            </td>
            <td class="body_col">
               <h4>Compression : <a class="termref" href="#dtimpl-CS">CS</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Indicates whether the raw byte data is compressed,
                  and what compression algorithm was used.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="domain-CompressionAlgorithm">&nbsp;</a>
                     			Table
                     			7: Domain CompressionAlgorithm
                  </caption>
                  <thead>
                     <tr>
                        <th>code</th>
                        <th>name</th>
                        <th>status</th>
                        <th>definition</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>DF&nbsp;</td>
                        <td>deflate&nbsp;</td>
                        <td>required&nbsp;</td>
                        <td>The deflate compressed data format as specified in RFC 1951 [http://www.ietf.org/rfc/rfc1951.txt].&nbsp;</td>
                     </tr>
                     <tr>
                        <td>GZ&nbsp;</td>
                        <td>gzip&nbsp;</td>
                        <td>indifferent&nbsp;</td>
                        <td>A compressed data format that is compatible with the widely used GZIP utility as specified in RFC 1952 [http://www.ietf.org/rfc/rfc1952.txt]
                           (uses the deflate algorithm).&nbsp;
                        </td>
                     </tr>
                     <tr>
                        <td>ZL&nbsp;</td>
                        <td>zlib&nbsp;</td>
                        <td>indifferent&nbsp;</td>
                        <td>A compressed data format that also uses the deflate algorithm.  Specified as RFC 1950 [http://www.ietf.org/rfc/rfc1952.txt]&nbsp;</td>
                     </tr>
                     <tr>
                        <td>Z&nbsp;</td>
                        <td>compress&nbsp;</td>
                        <td>deprecated&nbsp;</td>
                        <td>Original UNIX compress algorithm and file format using the LZC algorithm (a variant of LZW).  Patent encumbered and less efficient
                           than deflate.&nbsp;
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>compression</em> is represented as the XML attribute<em>compression</em>
                  whose value, if present, must be a valid value from the
                  CompressionAlgorithm domain (<a href="#domain-CompressionAlgorithm">Table
                     			7</a>).
                  There is no compression by default.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-ED.reference"></a>2.5.7 
               </h4>
            </td>
            <td class="body_col">
               <h4>Reference : <a class="termref" href="#dtimpl-TEL">TEL</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A telecommunication address (<a class="termref" href="#dtimpl-TEL">TEL</a>), such as a <a class="termref" href="#dtimpl-URL">URL</a>
                  for HTTP or FTP, which will resolve to precisely
                  the same binary data that could as well have been
                  provided as inline data.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The semantic value of an encapsulated data value is the same,
                  regardless whether the data is present inline data or just
                  by-reference. However, an encapsulated data value without
                  inline data behaves differently, since any attempt to examine
                  the data requires the data to be downloaded from the reference.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  An encapsulated data value may have both inline data and a
                  reference. The reference must point to the same data as provided
                  inline.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>reference</em> is represented as the XML element<em>reference</em>
                  which, if present, must be a valid <a class="termref" href="#dtimpl-TEL">TEL</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-ED.integrityCheck"></a>2.5.8 
               </h4>
            </td>
            <td class="body_col">
               <h4>Integrity Check : <a class="termref" href="#dtimpl-BIN">BIN</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The integrity check is a short binary value representing
                  a cryptographically strong checksum that is calculated
                  over the binary data. The purpose of this property, when
                  communicated with a reference is for anyone to validate
                  later whether the reference still resolved to the same
                  data that the reference resolved to when the encapsulated
                  data value with reference was created.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The integrity check is calculated according to the integrity
                  check algorithm. By default, the Secure Hash Algorithm-1
                  (<em>SHA-1</em>) shall be used. The integrity check is
                  binary encoded according to the rules of the integrity check
                  algorithm.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The integrity check is calculated over the raw binary data that
                  is contained in the data component, or that is accessible through
                  the reference. No transformations are made before the integrity
                  check is calculated. If the data is compressed, the Integrity
                  Check is calculated over the compressed data.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>integrityCheck</em> is represented by the XML attribute<em>integrityCheck</em>
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-BIN">BIN</a>.
                  There is no default value.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  When generating instances, applications must base64 encode the
                  integrity check prior to populating the XML attribute<em>integrityCheck</em>.
                  When receiving instances, applications must base64 decode the value
                  of the XML attribute<em>integrityCheck</em> to obtain the integrity check
                  value.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-ED.integrityCheckAlgorithm"></a>2.5.9 
               </h4>
            </td>
            <td class="body_col">
               <h4>Integrity Check Algorithm : <a class="termref" href="#dtimpl-CS">CS</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Specifies the algorithm used to compute the
                  integrityCheck value.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="domain-IntegrityCheckAlgorithm">&nbsp;</a>
                     			Table
                     			8: Domain IntegrityCheckAlgorithm
                  </caption>
                  <thead>
                     <tr>
                        <th>code</th>
                        <th>name</th>
                        <th>definition</th>
                     </tr>
                  </thead>
                  <tr>
                     <td>SHA-1</td>
                     <td>secure hash algorithm - 1</td>
                     <td>This algorithm is defined in FIPS PUB 180-1: Secure Hash Standard.  As of April 17, 1995.</td>
                  </tr>
                  <tr>
                     <td>SHA-256</td>
                     <td>secure hash algorithm - 256</td>
                     <td>This algorithm is defined in FIPS PUB 180-2: Secure Hash Standard.</td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>integrityCheckAlgorithm</em> is represented by the
                  XML attribute<em>integrityCheckAlgorithm</em> whose value must be a
                  valid value from the IntegrityCheckAlgorithm domain
                  (<a href="#domain-IntegrityCheckAlgorithm">Table
                     			8</a>).
                  The default value is <em>SHA-1</em>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-ED.thumbnail"></a>2.5.10 
               </h4>
            </td>
            <td class="body_col">
               <h4>Thumbnail : <a class="termref" href="#dtimpl-ED">ED</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A thumbnail is an abbreviated rendition of the full
                  data. A thumbnail requires significantly fewer
                  resources than the full data, while still maintaining
                  some distinctive similarity with the full data. A
                  thumbnail is typically used with by-reference
                  encapsulated data. It allows a user to select data
                  more efficiently before actually downloading through
                  the reference.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  For example, a large image may be represented by a small image;
                  a high quality audio sequence by a shorter low-quality audio; a
                  movie may be represented by a shorter clip (or just an image);
                  text may be summarized to an abstract.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  A thumbnail may not itself contain a thumbnail.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>thumbnail</em> is represented as the XML element<em>thumbnail</em>
                  which, if present, is a restricted form of
                  <em>ED</em> that does not allow
                  <em>thumbnail</em> children.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 5</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- internal type Thumbnail --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   representation = (B64 | TXT) : TXT
   language = CS
   mediaType = CS
   compression = CS
   integrityCheck = BIN
   integrityCheckAlgorithm = (SHA-1 | SHA-256) : SHA-1
   &gt;
   <em>Content</em>: ( reference, (#PCDATA | any) )
&lt;/x&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="ED-examples"></a>2.5.11 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The first example shows an Adobe Acrobat document that has been
                  compressed using the GZip compression algorithm.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 3</caption>
                  <tr>
                     <td class="example"><pre>
&lt;text mediaType='application/pdf' representation='B64' compression='GZ'&gt;
   omSJUEdmde9j44zmMiromSJUEdmde9j44zmMirdMDSsWdIJdksIJR3373jeu83
   6edjzMMIjdMDSsWdIJdksIJR3373jeu83MNYD83jmMdomSJUEdmde9j44zmMir
   ...
   MNYD83jmMdomSJUEdmde9j44zmMir6edjzMMIjdMDSsWdIJdksIJR3373jeu83
   4zmMir6edjzMMIjdMDSsWdIJdksIJR3373jeu83==
&lt;/text&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The next example contains a reference to an image,
                  stored at particular <a class="termref" href="#dtimpl-URL">URL</a> and available
                  for the next month. An integrity check is provided for the image,
                  as well as in inline thumbnail.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 4</caption>
                  <tr>
                     <td class="example"><pre>
&lt;text mediaType='image/png' representation='B64'
      integrityCheck='aA5mb7c8TXtu392KMsaSa2MKkAwL5LKAo2d99azAs3MdUdw'&gt;
   &lt;reference value='http://example.org/xrays/128s8d9ej229se32s.png'&gt;
      &lt;useablePeriod xsi:type='IVL_TS'&gt;
         &lt;low value='200007200845'/&gt;
         &lt;high value='200008200845'/&gt;
      &lt;/useablePeriod&gt;
   &lt;/reference&gt;
   &lt;thumbnail mediaType='image/jpeg' representation='B64'&gt;
      MNYD83jmMdomSJUEdmde9j44zmMir6edjzMMIjdMDSsWdIJdksIJR3373jeu83
      6edjzMMIjdMDSsWdIJdksIJR3373jeu83MNYD83jmMdomSJUEdmde9j44zmMir
      ...
      omSJUEdmde9j44zmMiromSJUEdmde9j44zmMirdMDSsWdIJdksIJR3373jeu83
      4zmMir6edjzMMIjdMDSsWdIJdksIJR3373jeu83==
   &lt;/thumbnail&gt;
&lt;/text&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-ST"></a>2.6 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="ST"></a>Character String (ST) specializes <a class="termref" href="#dtimpl-ED">ED</a></h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The character string data type stands for text data,
                  primarily intended for machine processing (e.g.,
                  sorting, querying, indexing, etc.) Used for names,
                  symbols, and formal expressions.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-ST-comp-summary">&nbsp;</a>
                     			Table
                     			9: Components of
                     Character String
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>data</td>
                        <td>XML Text Content</td>
                        <td>
                           The data itself represented in the XML instance encoding.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>representation</td>
                        <td>CS</td>
                        <td>
                           Specifies the representation of the binary data that
                           is the content of the binary data value.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>mediaType</td>
                        <td>CS</td>
                        <td>
                           Identifies the type of the encapsulated data and
                           identifies a method to interpret or render the data.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>charset</td>
                        <td>CS</td>
                        <td>
                           For character-based encoding types, this property
                           specifies the character set and character encoding
                           used. The charset shall be identified by an Internet
                           Assigned Numbers Authority (IANA) Charset Registration
                           [<a href="http://www.iana.org/assignments/character-sets">http://www.iana.org/assignments/character-sets</a>] 
                           in accordance with RFC 2978
                           [<a href="http://www.ietf.org/rfc/rfc2978.txt">http://www.ietf.org/rfc/rfc2978.txt</a>].
                           
                        </td>
                     </tr>
                     <tr>
                        <td>language</td>
                        <td>CS</td>
                        <td>
                           For character based information the language property
                           specifies the human language of the text.
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  A character string must at least have one character or else
                  it is NULL. The length of a string is the number of characters,
                  not the number of encoded bytes. 
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>ST</em>
                  interprets the encapsulated data as character data (as opposed
                  to bits), depending on the charset property. In other words,
                  the string S1 "Rose" is equal to the string S2 "Rose" even if
                  S1 is ASCII encoded (hex '526f7365') and S2 is EBCDIC encoded
                  (hex 'd996a285') or UTF-16 encoded (hex '0052006f00730065').
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>ST</em> is represented by both Element and Attribute
                  forms. In the Element form, the name of the XML element is
                  determined by the context in which it is used. The element
                  has attributes as described in the template and sub-sections
                  below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 6</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type ST --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   representation = (TXT) : TXT
   mediaType = (text/plain) : text/plain
   language = CS
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/x&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The Attribute form of <em>ST</em> is used when properties of other
                  data types have type <em>ST</em>.  The name of the attribute is
                  determined by the context in which it is used. The value
                  of the attribute is the content of the string.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-ST.data"></a>2.6.1 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Data : XML Text Content (inherited from <a class="termref" href="#dtimpl-BIN">BIN</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The data itself represented in the XML instance encoding.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>data</em> is represented as the text content of the
                  XML element representing the <em>ST</em> value.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-ST.representation"></a>2.6.2 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Representation : <a class="termref" href="#dtimpl-CS">CS</a> (inherited from <a class="termref" href="#dtimpl-BIN">BIN</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Specifies the representation of the binary data that
                  is the content of the binary data value.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>representation</em> is represented by the XML attribute<em>representation</em>
                  whose value, if present, must be <em>TXT</em>.
                  Since the representation always has a fixed value,
                  it is not normally present in the XML instance.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-ST.mediaType"></a>2.6.3 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Media Type : <a class="termref" href="#dtimpl-CS">CS</a> (inherited from <a class="termref" href="#dtimpl-ED">ED</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Identifies the type of the encapsulated data and
                  identifies a method to interpret or render the data.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>mediaType</em> is represented by the XML attribute<em>mediaType</em>
                  whose value, if present, must be <em>text/plain</em>.
                  Since the media type always has a fixed value, it is
                  not normally present in the XML instance.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-ST.charset"></a>2.6.4 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Charset : <a class="termref" href="#dtimpl-CS">CS</a> (inherited from <a class="termref" href="#dtimpl-ED">ED</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  For character-based encoding types, this property
                  specifies the character set and character encoding
                  used. The charset shall be identified by an Internet
                  Assigned Numbers Authority (IANA) Charset Registration
                  [<a href="http://www.iana.org/assignments/character-sets">http://www.iana.org/assignments/character-sets</a>] 
                  in accordance with RFC 2978
                  [<a href="http://www.ietf.org/rfc/rfc2978.txt">http://www.ietf.org/rfc/rfc2978.txt</a>].
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>charset</em> is not explicitly represented in the XML ITS.
                  Rather, the value of charset is to be inferred from the
                  encoding used in the
                  <a href="http://www.w3.org/TR/REC-xml/#dt-entity" target="xml-rec">XML entity</a>
                  in which the <a class="termref" href="#dtimpl-ST">ST</a> value is contained.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-ST.language"></a>2.6.5 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Language : <a class="termref" href="#dtimpl-CS">CS</a> (inherited from <a class="termref" href="#dtimpl-ED">ED</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  For character based information the language property
                  specifies the human language of the text.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>language</em> is represented by the XML attribute<em>language</em>
                  whose value, if present, must be a valid language tag as
                  defined by RFC 3066
                  [<a href="http://www.ietf.org/rfc/rfc3066.txt" target="rfcs">http://www.ietf.org/rfc/rfc3066.txt</a>].
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-ST.compression"></a>2.6.6 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Compression : <a class="termref" href="#dtimpl-CS">CS</a> (fixed)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Indicates whether the raw byte data is compressed,
                  and what compression algorithm was used.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>compression</em> is inherited from an ancestor data type
                  				but does not appear in the XML representation of this data type.
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-ST.reference"></a>2.6.7 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Reference : <a class="termref" href="#dtimpl-TEL">TEL</a> (fixed)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A telecommunication address (<a class="termref" href="#dtimpl-TEL">TEL</a>), such as a <a class="termref" href="#dtimpl-URL">URL</a>
                  for HTTP or FTP, which will resolve to precisely
                  the same binary data that could as well have been
                  provided as inline data.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>reference</em> is inherited from an ancestor data type
                  				but does not appear in the XML representation of this data type.
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-ST.integrityCheck"></a>2.6.8 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Integrity Check : <a class="termref" href="#dtimpl-BIN">BIN</a> (fixed)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The integrity check is a short binary value representing
                  a cryptographically strong checksum that is calculated
                  over the binary data. The purpose of this property, when
                  communicated with a reference is for anyone to validate
                  later whether the reference still resolved to the same
                  data that the reference resolved to when the encapsulated
                  data value with reference was created.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>integrityCheck</em> is inherited from an ancestor data type
                  				but does not appear in the XML representation of this data type.
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-ST.integrityCheckAlgorithm"></a>2.6.9 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Integrity Check Algorithm : <a class="termref" href="#dtimpl-CS">CS</a> (fixed)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Specifies the algorithm used to compute the
                  integrityCheck value.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>integrityCheckAlgorithm</em> is inherited from an ancestor data type
                  				but does not appear in the XML representation of this data type.
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-ST.thumbnail"></a>2.6.10 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Thumbnail : <a class="termref" href="#dtimpl-ED">ED</a> (fixed)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A thumbnail is an abbreviated rendition of the full
                  data. A thumbnail requires significantly fewer
                  resources than the full data, while still maintaining
                  some distinctive similarity with the full data. A
                  thumbnail is typically used with by-reference
                  encapsulated data. It allows a user to select data
                  more efficiently before actually downloading through
                  the reference.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>thumbnail</em> is inherited from an ancestor data type
                  				but does not appear in the XML representation of this data type.
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="ST-examples"></a>2.6.11 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  This example shows a simple case of a character string
                  for Act.text.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 5</caption>
                  <tr>
                     <td class="example"><pre>
&lt;text language='en'&gt;cellulitis of the left foot&lt;/text&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-CS"></a>2.7 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="CS"></a>Coded Simple Value (CS) specializes <a class="termref" href="#dtimpl-CV">CV</a></h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Coded data in its simplest form, consists of a code.
                  The code system and code system version is fixed by 
                  the context in which the <em>CS</em> value occurs. <em>CS</em> is used
                  for coded attributes that have a single HL7-defined
                  value set.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-CS-comp-summary">&nbsp;</a>
                     			Table
                     			10: Components of
                     Coded Simple Value
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>code</td>
                        <td>ST</td>
                        <td>
                           The plain code symbol defined by the code system.
                           For example, "784.0" is the code symbol of the ICD-9
                           code "784.0" for headache.
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>CS</em> is represented by both Element and
                  Attribute forms. In the Element form, the type is
                  represented by an XML element whose name is determined
                  by the context in which it is used. The code value is
                  represented by an XML attribute<em>code</em>, whose value,
                  if present, must be a valid
                  <a href="http://www.w3.org/TR/xmlschema-2/#token" target="schema-rec">xs:token</a>
                  with no internal whitespace.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 7</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type CS --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   code = ST
   /&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  In the Attribute form, <a class="termref" href="#comp-CS.code">code</a> is represented as
                  an XML attribute whose name is determined by the context in
                  which it is used, and whose value, if present, must be a valid
                  <a href="http://www.w3.org/TR/xmlschema-2/#token" target="schema-rec">xs:token</a>
                  with no internal whitespace.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-CS.code"></a>2.7.1 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Code : <a class="termref" href="#dtimpl-ST">ST</a> (inherited from <a class="termref" href="#dtimpl-CD">CD</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The plain code symbol defined by the code system.
                  For example, "784.0" is the code symbol of the ICD-9
                  code "784.0" for headache.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>code</em> is represented by the XML attribute<em>code</em>
                  whose value, if present, must be a valid
                  <a href="http://www.w3.org/TR/xmlschema-2/#token" target="schema-rec">xs:token</a>
                  with no internal whitespace.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-CS.codeSystem"></a>2.7.2 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Code System : UID (fixed)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Specifies the code system that defines the code.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>codeSystem</em> is inherited from an ancestor data type
                  				but does not appear in the XML representation of this data type.
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The fact that a sending system is prohibited from specifying
                  a code system for an <em>CS</em> data value should not be misconstrued
                  as if such codes would not have any code system. Rather, the
                  code system in <em>CS</em> values is <em>fixed by the context</em>.
                  That context is defined by the model in which <em>CS</em> is used.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-CS.codeSystemName"></a>2.7.3 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Code System Name : <a class="termref" href="#dtimpl-ST">ST</a> (fixed)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A common name of the coding system.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>codeSystemName</em> is inherited from an ancestor data type
                  				but does not appear in the XML representation of this data type.
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-CS.codeSystemVersion"></a>2.7.4 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Code System Version : <a class="termref" href="#dtimpl-ST">ST</a> (fixed)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  If applicable, a version descriptor defined
                  specifically for the given code system.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>codeSystemVersion</em> is inherited from an ancestor data type
                  				but does not appear in the XML representation of this data type.
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-CS.displayName"></a>2.7.5 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Display Name : <a class="termref" href="#dtimpl-ST">ST</a> (fixed)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A name or title for the code, under which the sending
                  system shows the code value to its users.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>displayName</em> is inherited from an ancestor data type
                  				but does not appear in the XML representation of this data type.
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-CS.originalText"></a>2.7.6 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Original Text : <a class="termref" href="#dtimpl-ED">ED</a> (fixed)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The text or phrase used as the basis for the coding.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>originalText</em> is inherited from an ancestor data type
                  				but does not appear in the XML representation of this data type.
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="CS-examples"></a>2.7.7 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  This example shows a US realmCode.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 6</caption>
                  <tr>
                     <td class="example"><pre>
&lt;realmCode code='US'/&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  This example shows a ControlAct with a classCode of <code>CACT</code>
                  and a moodCode of <code>EVN</code>, both of which are <em>CS</em>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 7</caption>
                  <tr>
                     <td class="example"><pre>
&lt;controlActProcess classCode='CACT' moodCode='EVN'&gt;
   ...
&lt;/controlActProcess&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-CV"></a>2.8 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="CV"></a>Coded Value (CV) specializes <a class="termref" href="#dtimpl-CE">CE</a></h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Coded data, consists of a code, display name, code system,
                  and original text. Used when a single code value must be sent.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-CV-comp-summary">&nbsp;</a>
                     			Table
                     			11: Components of
                     Coded Value
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>code</td>
                        <td>ST</td>
                        <td>
                           The plain code symbol defined by the code system.
                           For example, "784.0" is the code symbol of the ICD-9
                           code "784.0" for headache.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>codeSystem</td>
                        <td>UID</td>
                        <td>
                           Specifies the code system that defines the code.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>codeSystemName</td>
                        <td>ST</td>
                        <td>
                           A common name of the coding system.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>codeSystemVersion</td>
                        <td>ST</td>
                        <td>
                           If applicable, a version descriptor defined
                           specifically for the given code system.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>displayName</td>
                        <td>ST</td>
                        <td>
                           A name or title for the code, under which the sending
                           system shows the code value to its users.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>originalText</td>
                        <td>ED</td>
                        <td>
                           The text or phrase used as the basis for the coding.
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>CV</em> is always represented in Element form
                  as described in the template and sub-sections below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 8</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type CV --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   code = ST
   codeSystem = UID
   codeSystemName = ST
   codeSystemVersion = ST
   displayName = ST
   &gt;
   <em>Content</em>: ( originalText )
&lt;/x&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-CV.code"></a>2.8.1 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Code : <a class="termref" href="#dtimpl-ST">ST</a> (inherited from <a class="termref" href="#dtimpl-CD">CD</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The plain code symbol defined by the code system.
                  For example, "784.0" is the code symbol of the ICD-9
                  code "784.0" for headache.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>code</em> is represented by the XML attribute<em>code</em>
                  whose value, if present, must be a valid
                  <a href="http://www.w3.org/TR/xmlschema-2/#token" target="schema-rec">xs:token</a>
                  with no internal whitespace.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-CV.codeSystem"></a>2.8.2 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Code System : UID (inherited from <a class="termref" href="#dtimpl-CD">CD</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Specifies the code system that defines the code.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>codeSystem</em> is represented by the XML attribute<em>codeSystem</em>
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-UID">UID</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-CV.codeSystemName"></a>2.8.3 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Code System Name : <a class="termref" href="#dtimpl-ST">ST</a> (inherited from <a class="termref" href="#dtimpl-CD">CD</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A common name of the coding system.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>codeSystemName</em> is represented by the XML attribute<em>codeSystemName</em>
                  whose value, if present, must be a valid
                  <a class="termref" href="#dtimpl-ST">ST</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-CV.codeSystemVersion"></a>2.8.4 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Code System Version : <a class="termref" href="#dtimpl-ST">ST</a> (inherited from <a class="termref" href="#dtimpl-CD">CD</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  If applicable, a version descriptor defined
                  specifically for the given code system.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>codeSystemVersion</em> is represented by the XML attribute<em>codeSystemVersion</em>
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-ST">ST</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-CV.displayName"></a>2.8.5 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Display Name : <a class="termref" href="#dtimpl-ST">ST</a> (inherited from <a class="termref" href="#dtimpl-CD">CD</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A name or title for the code, under which the sending
                  system shows the code value to its users.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>displayName</em> is represented by the XML attribute<em>displayName</em>
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-ST">ST</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-CV.originalText"></a>2.8.6 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Original Text : <a class="termref" href="#dtimpl-ED">ED</a> (inherited from <a class="termref" href="#dtimpl-CD">CD</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The text or phrase used as the basis for the coding.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>originalText</em> is represented by the XML element<em>originalText</em>
                  which, if present, must be a valid <a class="termref" href="#dtimpl-ED">ED</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-CV.translation"></a>2.8.7 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Translation : SET&lt;CD&gt; (fixed)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A set of other concept descriptors that translate
                  this concept descriptor into other code systems.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>translation</em> is inherited from an ancestor data type
                  				but does not appear in the XML representation of this data type.
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="CV-examples"></a>2.8.8 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The first example shows the LOINC code for <code>"consultation note"</code>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 8</caption>
                  <tr>
                     <td class="example"><pre>
&lt;code code='11488-4' codeSystem='2.16.840.1.113883.19.6.1' codeSystemName='LOINC'
   displayName='Consultation note'/&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The second example shows a SNOMED-CT code with
                  <a class="termref" href="#comp-CD.originalText">CD.originalText</a> for
                  "osteoarthritis of the right knee".
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 9</caption>
                  <tr>
                     <td class="example"><pre>
&lt;code code='396275006' codeSystem='2.16.840.1.113883.19.6.96'
      codeSystemName='SNOMED CT' displayName='Osteoarthritis'&gt;
   &lt;originalText&gt;osteoarthritis of the right knee&lt;/originalText&gt;
&lt;/code&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The final example shows the use of nullFlavor='OTHER' to
                  indicate that a code does not exist in a coding system.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 10</caption>
                  <tr>
                     <td class="example"><pre>
&lt;code codeSystem='2.16.840.1.113883.19.6.96'
      codeSystemName='SNOMED CT' nullFlavor='OTH'&gt;
   &lt;originalText&gt;normal cardiac silhouette&lt;/originalText&gt;
&lt;/code&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-CO"></a>2.9 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="CO"></a>Coded Ordinal (CO) specializes <a class="termref" href="#dtimpl-CV">CV</a></h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Coded data, where the domain from which the codeset comes
                  is ordered. The Coded Ordinal data type adds semantics
                  related to ordering so that models that make use of such
                  domains may introduce model elements that involve statements
                  about the order of the terms in a domain. 
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-CO-comp-summary">&nbsp;</a>
                     			Table
                     			12: Components of
                     Coded Ordinal
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>code</td>
                        <td>ST</td>
                        <td>
                           The plain code symbol defined by the code system.
                           For example, "784.0" is the code symbol of the ICD-9
                           code "784.0" for headache.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>codeSystem</td>
                        <td>UID</td>
                        <td>
                           Specifies the code system that defines the code.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>codeSystemName</td>
                        <td>ST</td>
                        <td>
                           A common name of the coding system.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>codeSystemVersion</td>
                        <td>ST</td>
                        <td>
                           If applicable, a version descriptor defined
                           specifically for the given code system.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>displayName</td>
                        <td>ST</td>
                        <td>
                           A name or title for the code, under which the sending
                           system shows the code value to its users.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>originalText</td>
                        <td>ED</td>
                        <td>
                           The text or phrase used as the basis for the coding.
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>CO</em> is always represented in Element form as
                  described in the template and sub-sections below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 9</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type CO --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   code = ST
   codeSystem = UID
   codeSystemName = ST
   codeSystemVersion = ST
   displayName = ST
   &gt;
   <em>Content</em>: ( originalText )
&lt;/x&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-C0.code"></a>2.9.1 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Code : <a class="termref" href="#dtimpl-ST">ST</a> (inherited from <a class="termref" href="#dtimpl-CD">CD</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The plain code symbol defined by the code system.
                  For example, "784.0" is the code symbol of the ICD-9
                  code "784.0" for headache.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>code</em> is represented by the XML attribute<em>code</em>
                  whose value, if present, must be a valid
                  <a href="http://www.w3.org/TR/xmlschema-2/#token" target="schema-rec">xs:token</a>
                  with no internal whitespace.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-C0.codeSystem"></a>2.9.2 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Code System : UID (inherited from <a class="termref" href="#dtimpl-CD">CD</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Specifies the code system that defines the code.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>codeSystem</em> is represented by the XML attribute<em>codeSystem</em>
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-UID">UID</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-C0.codeSystemName"></a>2.9.3 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Code System Name : <a class="termref" href="#dtimpl-ST">ST</a> (inherited from <a class="termref" href="#dtimpl-CD">CD</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A common name of the coding system.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>codeSystemName</em> is represented by the XML attribute<em>codeSystemName</em>
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-ST">ST</a>.
                  										
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-C0.codeSystemVersion"></a>2.9.4 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Code System Version : <a class="termref" href="#dtimpl-ST">ST</a> (inherited from <a class="termref" href="#dtimpl-CD">CD</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  If applicable, a version descriptor defined
                  specifically for the given code system.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>codeSystemVersion</em> is represented by the XML attribute<em>codeSystemVersion</em>
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-ST">ST</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-C0.displayName"></a>2.9.5 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Display Name : <a class="termref" href="#dtimpl-ST">ST</a> (inherited from <a class="termref" href="#dtimpl-CD">CD</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A name or title for the code, under which the sending
                  system shows the code value to its users.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>displayName</em> is represented by the XML attribute<em>displayName</em>
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-ST">ST</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-C0.originalText"></a>2.9.6 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Original Text : <a class="termref" href="#dtimpl-ED">ED</a> (inherited from <a class="termref" href="#dtimpl-CD">CD</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The text or phrase used as the basis for the coding.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>originalText</em> is represented by the XML element<em>originalText</em>
                  which, if present, must be a valid <a class="termref" href="#dtimpl-ED">ED</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-C0.translation"></a>2.9.7 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Translation : SET&lt;CD&gt; (fixed)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A set of other concept descriptors that translate
                  this concept descriptor into other code systems.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>translation</em> is inherited from an ancestor data type
                  				but does not appear in the XML representation of this data type.
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-CE"></a>2.10 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="CE"></a>Coded with Equivalents (CE) specializes <a class="termref" href="#dtimpl-CD">CD</a></h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Coded data, consists of a coded value (<a class="termref" href="#dtimpl-CV">CV</a>)
                  and, optionally, coded value(s) from other coding systems
                  that identify the same concept. Used when alternative
                  codes may exist.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-CE-comp-summary">&nbsp;</a>
                     			Table
                     			13: Components of
                     Coded with Equivalents
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>code</td>
                        <td>ST</td>
                        <td>
                           The plain code symbol defined by the code system.
                           For example, "784.0" is the code symbol of the ICD-9
                           code "784.0" for headache.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>codeSystem</td>
                        <td>UID</td>
                        <td>
                           Specifies the code system that defines the code.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>codeSystemName</td>
                        <td>ST</td>
                        <td>
                           A common name of the coding system.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>codeSystemVersion</td>
                        <td>ST</td>
                        <td>
                           If applicable, a version descriptor defined
                           specifically for the given code system.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>displayName</td>
                        <td>ST</td>
                        <td>
                           A name or title for the code, under which the sending
                           system shows the code value to its users.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>originalText</td>
                        <td>ED</td>
                        <td>
                           The text or phrase used as the basis for the coding.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>translation</td>
                        <td>SET&lt;CD&gt;</td>
                        <td>
                           A set of other concept descriptors that translate
                           this concept descriptor into other code systems.
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>CE</em> is always represented in Element form as
                  described in the template and sub-sections below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 10</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type CE --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   code = ST
   codeSystem = UID
   codeSystemName = ST
   codeSystemVersion = ST
   displayName = ST
   &gt;
   <em>Content</em>: ( originalText, translation* )
&lt;/x&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-CE.code"></a>2.10.1 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Code : <a class="termref" href="#dtimpl-ST">ST</a> (inherited from <a class="termref" href="#dtimpl-CD">CD</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The plain code symbol defined by the code system.
                  For example, "784.0" is the code symbol of the ICD-9
                  code "784.0" for headache.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>code</em> is represented by the XML attribute<em>code</em> whose value,
                  if present, must be a valid
                  <a href="http://www.w3.org/TR/xmlschema-2/#token" target="schema-rec">xs:token</a>
                  with no internal whitespace.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-CE.codeSystem"></a>2.10.2 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Code System : UID (inherited from <a class="termref" href="#dtimpl-CD">CD</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Specifies the code system that defines the code.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>codeSystem</em> is represented by the XML attribute<em>codeSystem</em>
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-UID">UID</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-CE.codeSystemName"></a>2.10.3 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Code System Name : <a class="termref" href="#dtimpl-ST">ST</a> (inherited from <a class="termref" href="#dtimpl-CD">CD</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A common name of the coding system.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>codeSystemName</em> is represented by the XML attribute<em>codeSystemName</em>
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-ST">ST</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-CE.codeSystemVersion"></a>2.10.4 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Code System Version : <a class="termref" href="#dtimpl-ST">ST</a> (inherited from <a class="termref" href="#dtimpl-CD">CD</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  If applicable, a version descriptor defined
                  specifically for the given code system.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>codeSystemVersion</em> is represented by the XML attribute<em>codeSystemVersion</em>
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-ST">ST</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-CE.displayName"></a>2.10.5 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Display Name : <a class="termref" href="#dtimpl-ST">ST</a> (inherited from <a class="termref" href="#dtimpl-CD">CD</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A name or title for the code, under which the sending
                  system shows the code value to its users.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>displayName</em> is represented by the XML attribute<em>displayName</em>
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-ST">ST</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-CE.qualifier"></a>2.10.6 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Qualifier : LIST&lt;CR&gt; (fixed)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Specifies additional codes that increase the
                  specificity of the primary code.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>qualifier</em> is inherited from an ancestor data type
                  				but does not appear in the XML representation of this data type.
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-CE.originalText"></a>2.10.7 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Original Text : <a class="termref" href="#dtimpl-ED">ED</a> (inherited from <a class="termref" href="#dtimpl-CD">CD</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The text or phrase used as the basis for the coding.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>originalText</em> is represented by the XML element<em>originalText</em>
                  which, if present, must be a valid <a class="termref" href="#dtimpl-ED">ED</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-CE.translation"></a>2.10.8 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Translation : SET&lt;CD&gt; (inherited from <a class="termref" href="#dtimpl-CD">CD</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A set of other concept descriptors that translate
                  this concept descriptor into other code systems.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>translation</em> is represented by 0 or more
                  XML elements<em>translation</em> each of which must be
                  a valid <a class="termref" href="#dtimpl-CD">CD</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="CE-examples"></a>2.10.9 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  This example shows an observation whose
                  value is the SNOMED-CT code for <code>"asthma"</code>
                  as well as a <a class="termref" href="#comp-CE.translation">translation</a>
                  of that code in ICD9CM.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 11</caption>
                  <tr>
                     <td class="example"><pre>
&lt;code code='195967001' codeSystem='2.16.840.1.113883.19.6.96'
      codeSystemName='SNOMED CT' displayName='Asthma'&gt;
   &lt;translation code='49390' codeSystem='2.16.840.1.113883.19.6.2'
      codeSystemName='ICD9CM' displayName='ASTHMA W/O STATUS ASTHMATICUS'/&gt;
&lt;/code&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  					For additional examples see <a href="#CV-examples">Examples
                     			(&sect;
                     			2.8.8 )</a>.
                  				
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-CD"></a>2.11 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="CD"></a>Concept Descriptor (CD)
               </h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A concept descriptor represents any kind of concept usually
                  by giving a code defined in a code system.  A concept
                  descriptor can contain the original text or phrase that
                  served as the basis of the coding and one or more
                  translations into different coding systems. A concept
                  descriptor can also contain qualifiers to describe, e.g.,
                  the concept of a "left foot" as a postcoordinated term built
                  from the primary code "FOOT" and the qualifier "LEFT".
                  In exceptional cases, the concept descriptor need not
                  contain a code but only the original text describing
                  that concept.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-CD-comp-summary">&nbsp;</a>
                     			Table
                     			14: Components of
                     Concept Descriptor
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>code</td>
                        <td>ST</td>
                        <td>
                           The plain code symbol defined by the code system.
                           For example, "784.0" is the code symbol of the ICD-9
                           code "784.0" for headache.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>codeSystem</td>
                        <td>UID</td>
                        <td>
                           Specifies the code system that defines the code.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>codeSystemName</td>
                        <td>ST</td>
                        <td>
                           A common name of the coding system.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>codeSystemVersion</td>
                        <td>ST</td>
                        <td>
                           If applicable, a version descriptor defined
                           specifically for the given code system.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>displayName</td>
                        <td>ST</td>
                        <td>
                           A name or title for the code, under which the sending
                           system shows the code value to its users.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>originalText</td>
                        <td>ED</td>
                        <td>
                           The text or phrase used as the basis for the coding.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>qualifier</td>
                        <td>LIST&lt;CR&gt;</td>
                        <td>
                           Specifies additional codes that increase the
                           specificity of the primary code.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>translation</td>
                        <td>SET&lt;CD&gt;</td>
                        <td>
                           A set of other concept descriptors that translate
                           this concept descriptor into other code systems.
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>CD</em> is always represented in Element form
                  as described in the template and sub-sections below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 11</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type CD --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   code = ST
   codeSystem = UID
   codeSystemName = ST
   codeSystemVersion = ST
   displayName = ST
   &gt;
   <em>Content</em>: ( originalText, qualifier*, translation* )
&lt;/x&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-CD.code"></a>2.11.1 
               </h4>
            </td>
            <td class="body_col">
               <h4>Code : <a class="termref" href="#dtimpl-ST">ST</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The plain code symbol defined by the code system.
                  For example, "784.0" is the code symbol of the ICD-9
                  code "784.0" for headache.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>code</em> is represented by the XML attribute<em>code</em>
                  whose value, if present, must be a valid
                  <a href="http://www.w3.org/TR/xmlschema-2/#token" target="schema-rec">xs:token</a>
                  with no internal whitespace.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-CD.codeSystem"></a>2.11.2 
               </h4>
            </td>
            <td class="body_col">
               <h4>Code System : UID</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Specifies the code system that defines the code.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>codeSystem</em> is represented by the XML attribute<em>codeSystem</em>
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-UID">UID</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-CD.codeSystemName"></a>2.11.3 
               </h4>
            </td>
            <td class="body_col">
               <h4>Code System Name : <a class="termref" href="#dtimpl-ST">ST</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A common name of the coding system.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>codeSystemName</em> is represented by the XML attribute<em>codeSystemName</em>
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-ST">ST</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-CD.codeSystemVersion"></a>2.11.4 
               </h4>
            </td>
            <td class="body_col">
               <h4>Code System Version : <a class="termref" href="#dtimpl-ST">ST</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  If applicable, a version descriptor defined
                  specifically for the given code system.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>codeSystemVersion</em> is represented by the XML attribute<em>codeSystemVersion</em>
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-ST">ST</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-CD.displayName"></a>2.11.5 
               </h4>
            </td>
            <td class="body_col">
               <h4>Display Name : <a class="termref" href="#dtimpl-ST">ST</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A name or title for the code, under which the sending
                  system shows the code value to its users.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>displayName</em> is represented by the XML attribute<em>displayName</em>
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-ST">ST</a>.                                        	
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-CD.originalText"></a>2.11.6 
               </h4>
            </td>
            <td class="body_col">
               <h4>Original Text : <a class="termref" href="#dtimpl-ED">ED</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The text or phrase used as the basis for the coding.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>originalText</em> is represented by the XML element<em>originalText</em>
                  which, if present, must be a valid <a class="termref" href="#dtimpl-ED">ED</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-CD.translation"></a>2.11.7 
               </h4>
            </td>
            <td class="body_col">
               <h4>Translation : SET&lt;CD&gt;</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A set of other concept descriptors that translate
                  this concept descriptor into other code systems.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>translation</em> is represented by a 0 or more
                  XML elements<em>translation</em> each which must be a
                  valid <a class="termref" href="#dtimpl-CD">CD</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-CD.qualifier"></a>2.11.8 
               </h4>
            </td>
            <td class="body_col">
               <h4>Qualifier : LIST&lt;CR&gt;</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Specifies additional codes that increase the
                  specificity of the primary code.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>qualifier</em> is represented by a 0 or more
                  XML elements<em>qualifer</em> each of which must be a
                  valid <a class="termref" href="#dtimpl-CR">CR</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="CD-examples"></a>2.11.9 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The first example shows the SNOMED-CT code with
                  <a class="termref" href="#comp-CD.qualifier">qualifier</a> for
                  "skin of palmer surface of left index finger".
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 12</caption>
                  <tr>
                     <td class="example"><pre>
&lt;targetSiteCode code='48856004' codeSystem='2.16.840.1.113883.19.6.96'
      codeSystemName='SNOMED CT'
      displayName='Skin of palmer surface of index finger'&gt;
   &lt;qualifier&gt;
      &lt;name code='78615007' codeSystem='2.16.840.1.113883.19.6.96'
         codeSystemName='SNOMED CT' displayName='with laterality'/&gt;
      &lt;value code='7771000' codeSystem='2.16.840.1.113883.19.6.96'
         codeSystemName='SNOMED CT' displayName='left'/&gt;
   &lt;/qualifier&gt;
&lt;/targetSiteCode&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The second example shows an observation whose
                  value is the SNOMED-CT code with <a class="termref" href="#comp-CD.qualifier">qualifier</a>
                  and <a class="termref" href="#comp-CD.originalText">originalText</a> for
                  "osteoarthritis of the right knee".
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 13</caption>
                  <tr>
                     <td class="example"><pre>
&lt;code code='396275006' codeSystem='2.16.840.1.113883.19.6.96'
      codeSystemName='SNOMED CT' displayName='Osteoarthritis'&gt;
   &lt;originalText&gt;osteoarthritis of the right knee&lt;/originalText&gt;
   &lt;qualifier&gt;
      &lt;name code='363698007' codeSystem='2.16.840.1.113883.19.6.96'
         codeSystemName='SNOMED CT' displayName='finding site'/&gt;
      &lt;value code='6757004' codeSystem='2.16.840.1.113883.19.6.96'
         codeSystemName='SNOMED CT' displayName='right knee'/&gt;
   &lt;/qualifier&gt;
&lt;/code&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-CR"></a>2.12 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="CR"></a>Concept Role (CR)
               </h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A concept qualifier code with optionally named role.
                  Both qualifier role and value codes must be defined by
                  the coding system.  For example, if SNOMED RT defines a
                  concept "leg", a role relation "has-laterality", and
                  another concept "left", the concept role relation allows
                  to add the qualifier "has-laterality: left" to a primary
                  code "leg" to construct the meaning "left leg".
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-CR-comp-summary">&nbsp;</a>
                     			Table
                     			15: Components of
                     Concept Role
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>name</td>
                        <td>CV</td>
                        <td>
                           Specifies the manner in which the concept role value
                           contributes to the meaning of a code phrase.  For
                           example, if SNOMED RT defines a concept "leg", a role
                           relation "has-laterality", and another concept "left",
                           the concept role relation allows to add the qualifier
                           "has-laterality: left" to a primary code "leg" to
                           construct the meaning "left leg".  In this example
                           "has-laterality" is <em>name</em>.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>value</td>
                        <td>CD</td>
                        <td>
                           The concept that modifies the primary code of a code
                           phrase through the role relation.  For example, if
                           SNOMED RT defines a concept "leg", a role relation
                           "has-laterality", and another concept "left", the
                           concept role relation allows adding the qualifier
                           "has-laterality: left" to a primary code "leg" to
                           construct the meaning "left leg".  In this example
                           "left" is <em>value</em>.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>inverted</td>
                        <td>BN</td>
                        <td>
                           Indicates if the sense of the role name is inverted.
                           This can be used in cases where the underlying code
                           system defines inversion but does not provide reciprocal
                           pairs of role names. By default, inverted is <em>false</em>.
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The use of qualifiers is strictly governed by the code
                  system used. The <a class="termref" href="#dtimpl-CD">CD</a> data type
                  does not permit using qualifiers with code systems that
                  do not provide for qualifiers (e.g. pre-coordinated systems,
                  such as LOINC, ICD-10 PCS.)
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>CR</em> is represented in Element form as described
                  in the template and sub-sections below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 12</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type CR --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   inverted = (true | false) : false
   &gt;
   <em>Content</em>: ( name, value )
&lt;/x&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-CR.name"></a>2.12.1 
               </h4>
            </td>
            <td class="body_col">
               <h4>Name : <a class="termref" href="#dtimpl-CV">CV</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Specifies the manner in which the concept role value
                  contributes to the meaning of a code phrase.  For
                  example, if SNOMED RT defines a concept "leg", a role
                  relation "has-laterality", and another concept "left",
                  the concept role relation allows to add the qualifier
                  "has-laterality: left" to a primary code "leg" to
                  construct the meaning "left leg".  In this example
                  "has-laterality" is <em>name</em>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The name component can be NULL if a coding system allows
                  postcoordination but no role names.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>name</em> is represented by the XML element<em>name</em>
                  which, if present, must be a valid <a class="termref" href="#dtimpl-CV">CV</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-CR.value"></a>2.12.2 
               </h4>
            </td>
            <td class="body_col">
               <h4>Value : <a class="termref" href="#dtimpl-CD">CD</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The concept that modifies the primary code of a code
                  phrase through the role relation.  For example, if
                  SNOMED RT defines a concept "leg", a role relation
                  "has-laterality", and another concept "left", the
                  concept role relation allows adding the qualifier
                  "has-laterality: left" to a primary code "leg" to
                  construct the meaning "left leg".  In this example
                  "left" is <em>value</em>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>value</em> is of type <a class="termref" href="#dtimpl-CD">CD</a> and thus can
                  be in turn have qualifiers.  This allows qualifiers to nest.
                  Qualifiers can only be used as far as the underlying code
                  system defines them.  It is not allowed to use any kind of
                  qualifiers for code systems that do not explicitly allow and
                  regulate such use of qualifiers.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>value</em> is represented by the XML element<em>value</em>
                  which, if present, must be a valid <a class="termref" href="#dtimpl-CD">CD</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-CR.inverted"></a>2.12.3 
               </h4>
            </td>
            <td class="body_col">
               <h4>Inversion Indicator : <a class="termref" href="#dtimpl-BN">BN</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Indicates if the sense of the role name is inverted.
                  This can be used in cases where the underlying code
                  system defines inversion but does not provide reciprocal
                  pairs of role names. By default, inverted is <em>false</em>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  For example, a code system may define the role relation
                  "causes" besides the concepts "Streptococcus pneumoniae"
                  and "Pneumonia".  If that code system allows its roles to
                  be inverted, one can construct the post-coordinated concept
                  "Pneumococcus pneumonia" through "Pneumonia - causes,
                  inverted - Streptococcus pneumoniae."
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Roles may only be inverted if the underlying coding systems
                  allows such inversion.  Notably, if a coding system defines
                  roles in inverse pairs or intentionally does not define
                  certain inversions, the appropriate role code (e.g.
                  "caused-by") must be used rather than inversion. It must be
                  known whether the inverted property is true or false, if it
                  is NULL, the role cannot be interpreted.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>inverted</em> is represented by the XML attribute<em>inverted</em>
                  whose value, if present, must be either <em>true</em>
                  or <em>false</em>.  The default value is <em>false</em>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="CR-examples"></a>2.12.4 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  		See the examples using <a class="termref" href="#comp-CD.qualifier">CD.qualifier</a> in
                  		<a href="#CD-examples">Examples
                     			(&sect;
                     			2.11.9 )</a>.
                  	
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-SC"></a>2.13 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="SC"></a>Character String with Code (SC) specializes <a class="termref" href="#dtimpl-ST">ST</a></h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  An <a class="termref" href="#dtimpl-ST">ST</a> that optionally may have a code attached.
                  The text must always be present if a code is present. The
                  code is often a local code.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-SC-comp-summary">&nbsp;</a>
                     			Table
                     			16: Components of
                     Character String with Code
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>code</td>
                        <td>ST</td>
                        <td>
                           The plain code symbol defined by the code system.
                           For example, "784.0" is the code symbol of the ICD-9
                           code "784.0" for headache.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>codeSystem</td>
                        <td>UID</td>
                        <td>
                           Specifies the code system that defines the code.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>codeSystemName</td>
                        <td>ST</td>
                        <td>
                           A common name of the coding system.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>codeSystemVersion</td>
                        <td>ST</td>
                        <td>
                           If applicable, a version descriptor defined
                           specifically for the given code system.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>displayName</td>
                        <td>ST</td>
                        <td>
                           A name or title for the code, under which the sending
                           system shows the code value to its users.
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>SC</em> is represented in Element form as described in
                  the template and sub-sections below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 13</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type SC --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   code = ST
   codeSystem = UID
   codeSystemName = ST
   codeSystemVersion = ST
   displayName = ST
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/x&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-SC.code"></a>2.13.1 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Code : <a class="termref" href="#dtimpl-ST">ST</a> (inherited from <a class="termref" href="#dtimpl-CD">CD</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The plain code symbol defined by the code system.
                  For example, "784.0" is the code symbol of the ICD-9
                  code "784.0" for headache.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>code</em> is represented by the XML attribute<em>code</em>
                  whose value, if present, must be a valid
                  <a href="http://www.w3.org/TR/xmlschema-2/#token" target="schema-rec">xs:token</a>
                  with no internal whitespace.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-SC.codeSystem"></a>2.13.2 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Code System : UID (inherited from <a class="termref" href="#dtimpl-CD">CD</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Specifies the code system that defines the code.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>codeSystem</em> is represented by the XML attribute<em>codeSystem</em>
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-UID">UID</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-SC.codeSystemName"></a>2.13.3 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Code System Name : <a class="termref" href="#dtimpl-ST">ST</a> (inherited from <a class="termref" href="#dtimpl-CD">CD</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A common name of the coding system.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>codeSystemName</em> is represented by the XML attribute<em>codeSystemName</em>
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-ST">ST</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-SC.codeSystemVersion"></a>2.13.4 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Code System Version : <a class="termref" href="#dtimpl-ST">ST</a> (inherited from <a class="termref" href="#dtimpl-CD">CD</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  If applicable, a version descriptor defined
                  specifically for the given code system.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>codeSystemVersion</em> is represented by the XML attribute<em>codeSystemVersion</em>
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-ST">ST</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-SC.displayName"></a>2.13.5 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Display Name : <a class="termref" href="#dtimpl-ST">ST</a> (inherited from <a class="termref" href="#dtimpl-CD">CD</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A name or title for the code, under which the sending
                  system shows the code value to its users.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>displayName</em> is represented by the XML attribute<em>displayName</em>
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-ST">ST</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-UID"></a>2.14 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="UID"></a>Unique Identifier String (UID)
               </h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A unique identifier string is a character string which
                  identifies an object in a globally unique and timeless
                  manner. The allowable formats and values and procedures
                  of this data type are strictly controlled by HL7. At this
                  time, user-assigned identifiers may be certain character
                  representations of ISO Object Identifiers (<a class="termref" href="#dtimpl-OID">OID</a>)
                  and DCE
                  Universally Unique Identifiers (<a class="termref" href="#dtimpl-UUID">UUID</a>).
                  HL7 also reserves
                  the right to assign other forms of UIDs (<a class="termref" href="#dtimpl-RUID">RUID</a>,
                  such as mnemonic
                  identifiers for code systems.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The sole purpose of the <em>UID</em> is to be a globally and
                  timelessly unique identifier. The form of the UID,
                  whether it is an <a class="termref" href="#dtimpl-OID">OID</a>, an
                  <a class="termref" href="#dtimpl-UUID">UUID</a> or <a class="termref" href="#dtimpl-RUID">RUID</a> is
                  entirely irrelevant. As far as HL7 is concerned, the
                  only thing one can do with an <em>UID</em> is denote to the object
                  for which it stands. Comparison of <em>UID</em>s is literal,
                  i.e. if two UIDs have the same character sequence,
                  they are assumed to denote the same object. If two <em>UID</em>s
                  are not literally identical they <em>may</em>
                  not denote to the same object.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  No difference in semantics is recognized between the different
                  allowed forms of the <em>UID</em>. The different forms are not distinguished
                  by a component within or aside from the identifier string itself.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>UID</em> is only represented in Attribute form, where
                  the value must be a valid <a class="termref" href="#dtimpl-OID">OID</a>,
                  <a class="termref" href="#dtimpl-UUID">UUID</a>, or HL7 reserved identifier
                  as defined in the sections below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="dtimpl-OID"></a>2.14.1 
               </h4>
            </td>
            <td class="body_col">
               <h4>ISO Object Identifier (OID) Scheme</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A globally unique string representing an ISO Object Identifier
                  (OID) in a form that consists only of non-negative numbers with
                  no leading zeros and dots (e.g., "2.16.840.1.113883.19.3.1").
                  According to ISO, OIDs are paths in a tree structure, with the
                  left-most number representing the root and the right-most number
                  representing a leaf.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Each branch under the root corresponds to an assigning
                  authority. Each of these assigning authorities may, in
                  turn, designate its own set of assigning authorities
                  that work under its auspices, and so on down the line.
                  Eventually, one of these authorities assigns a unique
                  (to it as an assigning authority) number that corresponds
                  to a leaf node on the tree. The leaf may represent an
                  assigning authority (in which case the OID identifies
                  the authority), or an instance of an object. An assigning
                  authority owns a namespace, consisting of its sub-tree.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  OIDs are the preferred scheme for unique identifiers.
                  OIDs should always be used except if one of the inclusion
                  criteria for other schemes apply.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="dtimpl-UUID"></a>2.14.2 
               </h4>
            </td>
            <td class="body_col">
               <h4>DCE Universal Unique Identifier (UUID) Scheme</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A DCE Universal Unique Identifier is a globally unique
                  string consisting of 5 groups of upper- or lower-case
                  hexadecimal digits having 8, 4, 4, 4, and 12 places
                  respectively. UUIDs are assigned using Ethernet MAC
                  addresses, the point in time of creation and some random
                  components. This mix is believed to generate sufficiently
                  unique identifiers without any organizational policy for
                  identifier assignment (in fact this piggy-backs on the
                  organization of MAC address assignment.)
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>UUID</em>s are not the preferred identifier scheme for use as
                  <em>UID</em>s. <em>UUID</em>s may be used when identifiers are issued
                  to objects representing individuals (e.g., entity instance
                  identifiers, act event identifiers, etc.) For objects
                  describing classes of things or events (e.g., catalog items),
                  OIDs are the preferred identifier scheme.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="dtimpl-RUID"></a>2.14.3 
               </h4>
            </td>
            <td class="body_col">
               <h4>HL7 Reserved Identifier Scheme</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  HL7 reserved identifiers are strings consisting only of
                  (US-ASCII) letters, digits and hyphens, where the first
                  character must be a letter. HL7 may assign these reserved
                  identifiers as mnemonic identifiers for major concepts of
                  interest to HL7.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="UID-examples"></a>2.14.4 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  		See the examples in
                  		<a href="#II-examples">Examples
                     			(&sect;
                     			2.15.5 )</a>.
                  	
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-II"></a>2.15 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="II"></a>Instance Identifier (II)
               </h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  An identifier that uniquely identifies a thing or object.
                  Examples are object identifier for HL7 RIM objects,
                  medical record number, order id, service catalog item id,
                  Vehicle Identification Number (VIN), etc. Instance
                  identifiers are defined based on ISO object identifiers.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-II-comp-summary">&nbsp;</a>
                     			Table
                     			17: Components of
                     Instance Identifier
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>root</td>
                        <td>UID</td>
                        <td>
                           A unique identifier that guarantees the global uniqueness
                           of the instance identifier. The root alone may be the
                           entire instance identifier.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>extension</td>
                        <td>ST</td>
                        <td>
                           A character string as a unique identifier within the
                           scope of the identifier root.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>assigningAuthorityName</td>
                        <td>ST</td>
                        <td>
                           A human readable name or mnemonic for the assigning
                           authority. This name may be provided solely for the
                           convenience of unaided humans interpreting an <em>II</em> value
                           and can have no computational meaning. Note: no
                           automated processing must depend on the assigning
                           authority name to be present in any form.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>displayable</td>
                        <td>BL</td>
                        <td>
                           Specifies if the identifier is intended for human
                           display and data entry (displayable = true) as
                           opposed to pure machine interoperation (displayable
                           = false).
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Some identifier schemes define certain style options to
                  their code values. For example, the U.S. Social Security
                  Number (SSN) is normally written with dashes that group
                  the digits into a pattern "123-12-1234". However, the
                  dashes are not meaningful and a SSN can just as well be
                  represented as "123121234" without the dashes.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  In the case where identifier schemes provide for multiple
                  representations, HL7 shall make a ruling about which is the
                  preferred form. HL7 shall document that ruling where that
                  respective external identifier scheme is recognized. HL7
                  shall decide upon the preferred form based on criteria of
                  practicality and common use. In absence of clear criteria
                  of practicality and common use, the safest, most extensible,
                  and least stylized (the least decorated) form shall be
                  given preference.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  From practical experience it is recommended that <a class="termref" href="#comp-II.extension">extension</a>
                  be an alphanumeric identifier not containing leading zero digits,
                  for these are often erroneously stripped. "000123" and "123"
                  would be different extension values, but this is prone to be
                  misunderstood, leading to false non-matches and duplicate
                  record entries. However applications should maintain any
                  leading zero digits encountered in <a class="termref" href="#comp-II.extension">extension</a>.
                  Leading
                  zero digits are prohibited in <a class="termref" href="#dtimpl-OID">OID</a>s,
                  but may occur in <a class="termref" href="#dtimpl-UUID">UUID</a>s,
                  where they must be maintained.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  There is no separate check digit property. Check digits are
                  used for human purpose and work best if kept completely
                  transparent. <a class="termref" href="#comp-II.extension">extension</a> MAY contain check digits anywhere,
                  and the particular check digit scheme (if any) would be
                  implied by the <a class="termref" href="#comp-II.root">root</a>. However, a separate check digit
                  property is intentionally not recognized by this specification.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>II</em> is represented in Element form as described
                  in the template and sub-sections below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 14</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type II --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   root = UID
   extension = ST
   assigningAuthorityName = ST
   displayable = BL
   /&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-II.root"></a>2.15.1 
               </h4>
            </td>
            <td class="body_col">
               <h4>Root : UID</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A unique identifier that guarantees the global uniqueness
                  of the instance identifier. The root alone may be the
                  entire instance identifier.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>root</em> is represented by the XML attribute<em>root</em> whose value,
                  if present, must be a valid <a class="termref" href="#dtimpl-UID">UID</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-II.extension"></a>2.15.2 
               </h4>
            </td>
            <td class="body_col">
               <h4>Extension : <a class="termref" href="#dtimpl-ST">ST</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A character string as a unique identifier within the
                  scope of the identifier root.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>extension</em> is represented by the XML attribute<em>extension</em>
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-ST">ST</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-II.assigningAuthorityName"></a>2.15.3 
               </h4>
            </td>
            <td class="body_col">
               <h4>Assigning Authority Name : <a class="termref" href="#dtimpl-ST">ST</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A human readable name or mnemonic for the assigning
                  authority. This name may be provided solely for the
                  convenience of unaided humans interpreting an <em>II</em> value
                  and can have no computational meaning. Note: no
                  automated processing must depend on the assigning
                  authority name to be present in any form.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>assigningAuthorityName</em> is represented by the XML attribute<em>assigningAuthorityName</em>
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-ST">ST</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-II.displayable"></a>2.15.4 
               </h4>
            </td>
            <td class="body_col">
               <h4>Displayable : <a class="termref" href="#dtimpl-BL">BL</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Specifies if the identifier is intended for human
                  display and data entry (displayable = true) as
                  opposed to pure machine interoperation (displayable
                  = false).
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>displayable</em> is represented by the XML attribute<em>displayable</em>
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-BL">BL</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="II-examples"></a>2.15.5 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The first example shows a root that is an <a class="termref" href="#dtimpl-OID">OID</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 14</caption>
                  <tr>
                     <td class="example"><pre>
&lt;id root='2.16.840.1.113883.19' extension='123A45'/&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The next example shows a root that is a <a class="termref" href="#dtimpl-UUID">UUID</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 15</caption>
                  <tr>
                     <td class="example"><pre>
&lt;id root='343EA54F-D0E0-CE95-56C7-23108D6E25B8' extension='N8718349'/&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The final example shows a root that is a <a class="termref" href="#dtimpl-RUID">RUID</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 16</caption>
                  <tr>
                     <td class="example"><pre>
&lt;id root='A208d6E-25b8' extension='827-92837-99812'/&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-URL"></a>2.16 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="URL"></a>Universal Resource Locator (URL)
               </h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A telecommunications address  specified according to
                  Internet standard RFC 1738
                  [<a href="http://www.ietf.org/rfc/rfc1738.txt">http://www.ietf.org/rfc/rfc1738.txt</a>]. The
                  URL specifies the protocol and the contact point defined
                  by that protocol for the resource.  Notable uses of the
                  telecommunication address data type are for telephone and
                  telefax numbers, e-mail addresses, Hypertext references,
                  FTP references, etc.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>URL</em>s have a standard representation as a character string,
                  formatted as "&lt;code&gt;&lt;scheme&gt;:&lt;address&gt;;&lt;/code&gt;"
                  where the most common schemes are listed in
                  <a href="#domain-URLScheme">Table
                     			18</a>. The address portion of
                  the <em>URL</em> is a character string whose format is entirely defined
                  by the <em>URL</em> scheme.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Similar to the <a class="termref" href="#comp-ED.mediaType">ED.mediaType</a>, HL7 makes
                  suggestions about <em></em> values classifying them as
                  <em>required</em>, <em>recommended</em>, <em>other</em>,
                  and <em>deprecated</em>. Any scheme not mentioned has status
                  <em>other</em>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="domain-URLScheme">&nbsp;</a>
                     			Table
                     			18: Domain URLScheme
                  </caption>
                  <thead>
                     <tr>
                        <th>code</th>
                        <th>name</th>
                        <th>status</th>
                        <th>definition</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>tel&nbsp;</td>
                        <td>Telephone&nbsp;</td>
                        <td>required&nbsp;</td>
                        <td>A voice telephone number [http://www.ietf.org/rfc/rfc3966.txt and http://www.ietf.org/rfc/rfc2806.txt].&nbsp;</td>
                     </tr>
                     <tr>
                        <td>fax&nbsp;</td>
                        <td>Fax&nbsp;</td>
                        <td>required&nbsp;</td>
                        <td>A telephone number served by a fax device [http://www.ietf.org/rfc/rfc3966.txt and http://www.ietf.org/rfc/rfc2806.txt].&nbsp;</td>
                     </tr>
                     <tr>
                        <td>mailto&nbsp;</td>
                        <td>Mailto&nbsp;</td>
                        <td>required&nbsp;</td>
                        <td>Electronic mail address [http://www.ietf.org/rfc/rfc2368.txt].&nbsp;</td>
                     </tr>
                     <tr>
                        <td>http&nbsp;</td>
                        <td>HTTP&nbsp;</td>
                        <td>required&nbsp;</td>
                        <td>Hypertext Transfer Protocol [http://www.ietf.org/rfc/rfc2368.txt].&nbsp;</td>
                     </tr>
                     <tr>
                        <td>ftp&nbsp;</td>
                        <td>FTP&nbsp;</td>
                        <td>required&nbsp;</td>
                        <td>The File Transfer Protocol (FTP) [http://www.ietf.org/rfc/rfc1738.txt].&nbsp;</td>
                     </tr>
                     <tr>
                        <td>mllp&nbsp;</td>
                        <td>MLLP&nbsp;</td>
                        <td>required&nbsp;</td>
                        <td>								The traditional HL7 Minimal Lower Layer Protocol.
                           								The URL has the form of a common IP URL e.g.,
                           								mllp://&lt;host&gt;:&lt;port&gt;/ with &lt;host&gt; being the IP address or DNS hostname
                           								and &lt;port&gt; being a port number on which the MLLP protocol is
                           								served.
                           &nbsp;
                        </td>
                     </tr>
                     <tr>
                        <td>file&nbsp;</td>
                        <td>File&nbsp;</td>
                        <td>deprecated&nbsp;</td>
                        <td>Host-specific local file names [RCF 1738].  Note that the file scheme works only for local files.  There is little use for
                           exchanging local file names between systems, since the receiving system likely will not be able to access the file.&nbsp;
                        </td>
                     </tr>
                     <tr>
                        <td>nfs&nbsp;</td>
                        <td>NFS&nbsp;</td>
                        <td>other&nbsp;</td>
                        <td>Network File System protocol [http://www.ietf.org/rfc/rfc2224.txt].  Some sites use NFS servers to share data files.&nbsp;</td>
                     </tr>
                     <tr>
                        <td>telnet&nbsp;</td>
                        <td>Telnet&nbsp;</td>
                        <td>other&nbsp;</td>
                        <td>Reference to interactive sessions [http://www.ietf.org/rfc/rfc1738.txt].  Some sites, (e.g., laboratories) have TTY based
                           remote query sessions that can be accessed through telnet.&nbsp;
                        </td>
                     </tr>
                     <tr>
                        <td>modem&nbsp;</td>
                        <td>Modem&nbsp;</td>
                        <td>other&nbsp;</td>
                        <td>A telephone number served by a modem device  [http://www.ietf.org/rfc/rfc3966.txt and http://www.ietf.org/rfc/rfc2806.txt].&nbsp;</td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>URL</em> is a protected type and is represented
                  only in Attribute form in the value component of <a class="termref" href="#dtimpl-TEL">TEL</a>;
                  the XML attribute<em>value</em> must be a valid
                  <a href="http://www.w3.org/TR/xmlschema-2/#anyURI" target="schema-rec">xs:anyURI</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="tel-fax-uris"></a>2.16.1 
               </h4>
            </td>
            <td class="body_col">
               <h4>Telephone and FAX Numbers</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Telephone and FAX Numbers. There is no special data type
                  for telephone numbers. Telephone numbers are
                  telecommunication addresses and are specified as a <em>URL</em>.
                  Voice telephone URLs begin with "tel:" and fax
                  URLs begin with "fax:".
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The telephone number URL is defined in the Internet RFC
                  2806 [<a href="http://www.ietf.org/rfc/rfc2806.txt">http://www.ietf.org/rfc/rfc2806.txt</a>]
                  URLs for Telephone Calls. For example, "tel:+1(317)630-7960"
                  is a phone number, and "fax:+49(30)8101-724" is a FAX number.
                  The global absolute telephone numbers starting with the
                  "+" and country code are preferred. Separator characters
                  serve as decoration but have no meaning for the telephone
                  number, thus "tel:+13176307960" and "fax:+49308101724"
                  are the same telephone and FAX numbers as the previous
                  respective examples.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="URL-examples"></a>2.16.2 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  		See the examples in
                  		<a href="#TEL-examples">Examples
                     			(&sect;
                     			2.17.3 )</a>.
                  	
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-TEL"></a>2.17 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="TEL"></a>Telecommunication Address (TEL) specializes <a class="termref" href="#dtimpl-URL">URL</a></h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A telephone number (voice or fax), e-mail address, or
                  other locator for a resource (information or service)
                  mediated by telecommunication equipment. The address
                  is specified as a <a class="termref" href="#dtimpl-URL">URL</a>
                  qualified by time specification and use codes that help
                  in deciding which address to use for a given time and
                  purpose.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-TEL-comp-summary">&nbsp;</a>
                     			Table
                     			19: Components of
                     Telecommunication Address
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>useablePeriod</td>
                        <td>GTS</td>
                        <td>
                           Specifies the periods of time during which the
                           telecommunication address can be used.  For a
                           telephone number, this can indicate the time of day
                           in which the party can be reached on that telephone.
                           For a web address, it may specify a time range in
                           which the web content is promised to be available
                           under the given address.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>use</td>
                        <td>SET&lt;CS&gt;</td>
                        <td>
                           One or more codes advising a system or user which
                           telecommunication address in a set of like addresses
                           to select for a given telecommunication need.
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>TEL</em> is represented in Element form as described
                  in the template and sub-sections below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 15</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type TEL --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   value = ST
   use = CS*
   &gt;
   <em>Content</em>: ( useablePeriod* )
&lt;/x&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-TEL.useablePeriod"></a>2.17.1 
               </h4>
            </td>
            <td class="body_col">
               <h4>Useable Period : GTS</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Specifies the periods of time during which the
                  telecommunication address can be used.  For a
                  telephone number, this can indicate the time of day
                  in which the party can be reached on that telephone.
                  For a web address, it may specify a time range in
                  which the web content is promised to be available
                  under the given address.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>useablePeriod</em> is represented by 0 or more
                  XML elements<em>useablePeriod</em> each of which
                  must be a valid <a class="termref" href="#dtimpl-GTS">GTS</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-TEL.use"></a>2.17.2 
               </h4>
            </td>
            <td class="body_col">
               <h4>Use : SET&lt;CS&gt;</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  One or more codes advising a system or user which
                  telecommunication address in a set of like addresses
                  to select for a given telecommunication need.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The telecommunication address use codes are defined by
                  the HL7 domain TelecommunicationAddressUse
                  (<a href="#domain-TelecommunicationAddressUse">Table
                     			20</a>).
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="domain-TelecommunicationAddressUse">&nbsp;</a>
                     			Table
                     			20: Domain TelecommunicationAddressUse
                  </caption>
                  <thead>
                     <tr>
                        <th>code</th>
                        <th>name</th>
                        <th>definition</th>
                     </tr>
                  </thead>
                  <tr>
                     <th colspan="3"></th>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;H</td>
                     <td>home address</td>
                     <td>A communication address at a home, attempted contacts for business purposes might intrude privacy and chances are one will
                        contact family or other household members instead of the person one wishes to call.  Typically used with urgent cases, or
                        if no other contacts are available.
                     </td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;&nbsp;&nbsp;HP</td>
                     <td>primary home</td>
                     <td>The primary home, to reach a person after business hours.</td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;&nbsp;&nbsp;HV</td>
                     <td>vacation home</td>
                     <td>A vacation home, to reach a person while on vacation.</td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;WP</td>
                     <td>work place</td>
                     <td>An office address.  First choice for business related contacts during business hours.</td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;&nbsp;&nbsp;DIR</td>
                     <td>Direct</td>
                     <td>Indicates a work place address or telecommunication address that reaches the individual or organization directly without intermediaries.
                        For phones, often referred to as a 'private line'.
                     </td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;&nbsp;&nbsp;PUB</td>
                     <td>Public</td>
                     <td>Indicates a work place address or telecommunication address that is a 'standard' address which may reach a reception service,
                        mail-room, or other intermediary prior to the target entity.
                     </td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;BAD</td>
                     <td>bad address</td>
                     <td>A flag indicating that the address is bad, in fact, useless.</td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;TMP</td>
                     <td>temporary address</td>
                     <td>A temporary address, may be good for visit or mailing.  Note that an address history can provide more detailed information.</td>
                  </tr>
                  <tr>
                     <td>AS</td>
                     <td>answering service</td>
                     <td>An automated answering machine used for less urgent cases and if the main purpose of contact is to leave a message or access
                        an automated announcement.
                     </td>
                  </tr>
                  <tr>
                     <td>EC</td>
                     <td>emergency contact</td>
                     <td>A contact specifically designated to be used for emergencies.  This is the first choice in emergencies, independent of any
                        other use codes.
                     </td>
                  </tr>
                  <tr>
                     <td>MC</td>
                     <td>mobile contact</td>
                     <td>A telecommunication device that moves and stays with its owner.  May have characteristics of all other use codes, suitable
                        for urgent matters, not the first choice for routine business.
                     </td>
                  </tr>
                  <tr>
                     <td>PG</td>
                     <td>pager</td>
                     <td>A paging device suitable to solicit a callback or to leave a very short message.</td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The telecommunication use code is not a complete
                  classification for equipment types or locations.
                  Its main purpose is to suggest or discourage the
                  use of a particular telecommunication address. The use
                  code should not be considered in isolation. The data
                  element in which the telephone number appears (class
                  and attribute) and the context to other data may
                  express the precise nature and use of the
                  telecommunication address more appropriately than a use code.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>use</em> is represented by the XML attribute<em>use</em>
                  whose value, if present, must be 0 or more valid
                  values from the TelecommunicationAddressUse
                  (<a href="#domain-TelecommunicationAddressUse">Table
                     			20</a>)
                  separated by whitespace.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="TEL-examples"></a>2.17.3 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The first example shows a work email address.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 17</caption>
                  <tr>
                     <td class="example"><pre>
&lt;telecom use='WP' value='mailto://someone@example.com'/&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The second example shows a PNG file that is only
                  accessible between 08:45 and 09:45 on July 20, 2000.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 18</caption>
                  <tr>
                     <td class="example"><pre>
&lt;reference value='http://example.org/xrays/128s8d9ej229se32s.png'&gt;
   &lt;useablePeriod xsi:type='IVL_TS'&gt;
      &lt;low value='200007200845'/&gt;
      &lt;high value='200008200945'/&gt;
   &lt;/useablePeriod&gt;
&lt;/reference&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The final example shows a home phone number of 555-555-5001.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 19</caption>
                  <tr>
                     <td class="example"><pre>
&lt;telecom use='H' value='tel:555-555-5001'/&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-ADXP"></a>2.18 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="ADXP"></a>Address Part (ADXP)
               </h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A character string that may have a type-tag signifying its
                  role in the address. Typical parts that exist in about
                  every address are street, house number, or post box,
                  postal code, city, country but other roles may be defined
                  regionally, nationally, or on an enterprise level (e.g. in
                  military addresses). Addresses are usually broken up into
                  lines, which are indicated by special line-breaking
                  delimiter elements (e.g., DEL).
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-ADXP-comp-summary">&nbsp;</a>
                     			Table
                     			21: Components of
                     Address Part
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>data</td>
                        <td>XML Text Content</td>
                        <td>
                           The data itself represented in the XML instance encoding.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>partType</td>
                        <td>CS</td>
                        <td>
                           Specifies whether an address part names the street,
                           city, country, postal code, post box, etc. If the type
                           is NULL the address part is unclassified and would
                           simply appear on an address label as is.
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>ADXP</em> is represented as an XML element
                  whose name is derived from the address part type code
                  (see table below) and whose content is just like an
                  <a class="termref" href="#dtimpl-ST">ST</a>, except that it also has
                  an XML attribute<em>partType</em> as described above,
                  whose value is fixed to the appropriate address part type.
                  The XML attribute<em>partType</em> is generally not used.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 16</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type ADXP --&gt;
&lt;additionalLocator
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   partType = (ADL) : ADL
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/additionalLocator&gt;

&lt;unitID
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   partType = (UNID) : UNID
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/unitID&gt;

&lt;unitType
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   partType = (UNIT) : UNIT
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/unitType&gt;

&lt;deliveryAddressLine
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   partType = (DAL) : DAL
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/deliveryAddressLine&gt;

&lt;deliveryInstallationType
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   partType = (DINST) : DINST
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/deliveryInstallationType&gt;

&lt;deliveryInstallationArea
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   partType = (DINSTA) : DINSTA
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/deliveryInstallationArea&gt;

&lt;deliveryInstallationQualifier
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   partType = (DINSTQ) : DINSTQ
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/deliveryInstallationQualifier&gt;

&lt;deliveryMode
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   partType = (DMOD) : DMOD
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/deliveryMode&gt;

&lt;deliveryModeIdentifier
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   partType = (DMODID) : DMODID
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/deliveryModeIdentifier&gt;

&lt;streetAddressLine
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   partType = (SAL) : SAL
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/streetAddressLine&gt;

&lt;houseNumber
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   partType = (BNR) : BNR
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/houseNumber&gt;

&lt;buildingNumberSuffix
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   partType = (BNS) : BNS
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/buildingNumberSuffix&gt;

&lt;postBox
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   partType = (POB) : POB
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/postBox&gt;

&lt;houseNumberNumeric
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   partType = (BNN) : BNN
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/houseNumberNumeric&gt;

&lt;streetName
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   partType = (STR) : STR
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/streetName&gt;

&lt;streetNameBase
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   partType = (STB) : STB
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/streetNameBase&gt;

&lt;streetNameType
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   partType = (STTYP) : STTYP
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/streetNameType&gt;

&lt;direction
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   partType = (DIR) : DIR
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/direction&gt;

&lt;careOf
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   partType = (CAR) : CAR
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/careOf&gt;

&lt;censusTract
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   partType = (CEN) : CEN
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/censusTract&gt;

&lt;country
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   partType = (CNT) : CNT
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/country&gt;

&lt;county
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   partType = (CPA) : CPA
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/county&gt;

&lt;city
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   partType = (CTY) : CTY
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/city&gt;

&lt;delimiter
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   partType = (DEL) : DEL
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/delimiter&gt;

&lt;precinct
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   partType = (PRE) : PRE
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/precinct&gt;

&lt;state
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   partType = (STA) : STA
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/state&gt;

&lt;postalCode
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   partType = (ZIP) : ZIP
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/postalCode&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-ADXP.data"></a>2.18.1 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Data : XML Text Content (inherited from <a class="termref" href="#dtimpl-BIN">BIN</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The data itself represented in the XML instance encoding.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em></em> is represented as the text content
                  of the	XML element representing the ADXP value.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-ADXP.partType"></a>2.18.2 
               </h4>
            </td>
            <td class="body_col">
               <h4>Address Part Type : <a class="termref" href="#dtimpl-CS">CS</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Specifies whether an address part names the street,
                  city, country, postal code, post box, etc. If the type
                  is NULL the address part is unclassified and would
                  simply appear on an address label as is.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Address part types are as defined in
                  <a href="#domain-AddressPartType">Table
                     			22</a></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="domain-AddressPartType">&nbsp;</a>
                     			Table
                     			22: Domain AddressPartType
                  </caption>
                  <thead>
                     <tr>
                        <th>code</th>
                        <th>name</th>
                        <th>definition</th>
                     </tr>
                  </thead>
                  <tr>
                     <td>ADL</td>
                     <td>additional locator</td>
                     <td>This can be a unit designator, such as apartment number, suite number, or floor. There may be several unit designators in
                        an address (e.g., "3rd floor, Appt. 342"). This can also be a designator pointing away from the location, rather than specifying
                        a smaller location within some larger one (e.g., Dutch "t.o." means "opposite to" for house boats located across the street
                        facing houses).
                     </td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;UNID</td>
                     <td>unit identifier</td>
                     <td>The number or name of a specific unit contained within a building or complex, as assigned by that building or complex.</td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;UNIT</td>
                     <td>unit designator</td>
                     <td>Indicates the type of specific unit contained within a building or complex.  E.g. Appartment, Floor</td>
                  </tr>
                  <tr>
                     <td>DAL</td>
                     <td>delivery address line</td>
                     <td>A delivery address line is frequently used instead of breaking out delivery mode, delivery installation, etc.  An address
                        generally has only a delivery address line or a street address line, but not both.
                     </td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;DINST</td>
                     <td>delivery installation type</td>
                     <td>Indicates the type of delivery installation (the facility to which the mail will be delivered prior to final shipping via
                        the delivery mode.) Example: post office, letter carrier depot, community mail center, station, etc.
                     </td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;DINSTA</td>
                     <td>delivery installation area</td>
                     <td>The location of the delivery installation, usually a town or city, and is only required if the area is different from the
                        municipality. Area to which mail delivery service is provided from any postal facility or service such as an individual letter
                        carrier, rural route, or postal route.
                     </td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;DINSTQ</td>
                     <td>delivery installation qualifier</td>
                     <td>A number, letter or name identifying a delivery installation.  E.g., for Station A, the delivery installation qualifier would
                        be 'A'.
                     </td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;DMOD</td>
                     <td>delivery mode</td>
                     <td>Indicates the type of service offered, method of delivery.  For example: post office box, rural route, general delivery, etc.</td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;DMODID</td>
                     <td>delivery mode identifier</td>
                     <td>Represents the routing information such as a letter carrier route number.  It is the identifying number of the designator
                        (the box number or rural route number).
                     </td>
                  </tr>
                  <tr>
                     <td>SAL</td>
                     <td>street address line</td>
                     <td></td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;BNR</td>
                     <td>building number</td>
                     <td>The number of a building, house or lot alongside the street.  Also known as "primary street number".  This does not number
                        the street but rather the building.
                     </td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;&nbsp;&nbsp;BNN</td>
                     <td>building number numeric</td>
                     <td>The numeric portion of a building number</td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;&nbsp;&nbsp;BNS</td>
                     <td>building number suffix</td>
                     <td>Any alphabetic character, fraction or other text that may appear after the numeric portion of a building number</td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;STR</td>
                     <td>street name</td>
                     <td></td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;&nbsp;&nbsp;STB</td>
                     <td>street name base</td>
                     <td>The base name of a roadway or artery recognized by a municipality (excluding street type and direction)</td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;&nbsp;&nbsp;STTYP</td>
                     <td>street type</td>
                     <td>The designation given to the street.  (e.g. Street, Avenue, Crescent, etc.)</td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;DIR</td>
                     <td>direction</td>
                     <td>Direction (e.g., N, S, W, E)</td>
                  </tr>
                  <tr>
                     <td>CAR</td>
                     <td>care of</td>
                     <td>The name of the party who will take receipt at the specified address, and will take on responsibility for ensuring delivery
                        to the target recipient
                     </td>
                  </tr>
                  <tr>
                     <td>CEN</td>
                     <td>census tract</td>
                     <td>A geographic sub-unit delineated for demographic purposes.</td>
                  </tr>
                  <tr>
                     <td>CNT</td>
                     <td>country</td>
                     <td>Country</td>
                  </tr>
                  <tr>
                     <td>CPA</td>
                     <td>county or parish</td>
                     <td>A sub-unit of a state or province. (49 of the United States of America use the term "county;" Louisiana uses the term "parish".)</td>
                  </tr>
                  <tr>
                     <td>CTY</td>
                     <td>municipality</td>
                     <td>The name of the city, town, village, or other community or delivery center</td>
                  </tr>
                  <tr>
                     <td>DEL</td>
                     <td>delimiter</td>
                     <td>Delimiters are printed without framing white space.  If no value component is provided, the delimiter appears as a line break.</td>
                  </tr>
                  <tr>
                     <td>POB</td>
                     <td>post box</td>
                     <td>A numbered box located in a post station.</td>
                  </tr>
                  <tr>
                     <td>PRE</td>
                     <td>precinct</td>
                     <td>A subsection of a municipality</td>
                  </tr>
                  <tr>
                     <td>STA</td>
                     <td>state or province</td>
                     <td>A sub-unit of a country with limited sovereignty in a federally organized country.</td>
                  </tr>
                  <tr>
                     <td>ZIP</td>
                     <td>postal code</td>
                     <td>A postal code designating a region defined by the postal service.</td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Addresses are conceptualized as text with added mark-up.
                  The mark-up may break the address into lines and may
                  describe in detail the role of each address part if it
                  is known. Address parts occur in the address in the order
                  in which they would be printed on a mailing label. The
                  model is similar to HTML or XML markup of text.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>partType</em> is represented simultaneously in Element
                  and Attribute forms. In the Element form, the name of
                  the element is determined by the part type, as specified
                  in <a href="#AddressPartType-Element-Names">Table
                     			23</a> below.
                  Additionally, each such element has an XML attribute<em>partType</em>
                  whose value, if present, must be a valid value from the
                  domain AddressPartType (<a href="#domain-AddressPartType">Table
                     			22</a>)
                  corresponding to the part type represented by the element
                  on which it appears. Since the XML attribute<em>partType</em> always
                  has a fixed value, it is not normally present in the
                  XML instance.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="AddressPartType-Element-Names">&nbsp;</a>
                     			Table
                     			23: AddressPartType Element Names
                  </caption>
                  <tr>
                     <td colspan="1">Element Name</td>
                     <td colspan="1">Part Type</td>
                  </tr>
                  <tr>
                     <td colspan="1">additionalLocator</td>
                     <td colspan="1">ADL</td>
                  </tr>
                  <tr>
                     <td colspan="1">unitID</td>
                     <td colspan="1">UNID</td>
                  </tr>
                  <tr>
                     <td colspan="1">unitType</td>
                     <td colspan="1">UNIT</td>
                  </tr>
                  <tr>
                     <td colspan="1">deliveryAddressLine</td>
                     <td colspan="1">DAL</td>
                  </tr>
                  <tr>
                     <td colspan="1">deliveryInstallationType</td>
                     <td colspan="1">DINST</td>
                  </tr>
                  <tr>
                     <td colspan="1">deliveryInstallationArea</td>
                     <td colspan="1">DINSTA</td>
                  </tr>
                  <tr>
                     <td colspan="1">deliveryInstallationQualifier</td>
                     <td colspan="1">DINSTQ</td>
                  </tr>
                  <tr>
                     <td colspan="1">deliveryMode</td>
                     <td colspan="1">DMOD</td>
                  </tr>
                  <tr>
                     <td colspan="1">deliveryModeIdentifier</td>
                     <td colspan="1">DMODID</td>
                  </tr>
                  <tr>
                     <td colspan="1">streetAddressLine</td>
                     <td colspan="1">SAL</td>
                  </tr>
                  <tr>
                     <td colspan="1">houseNumber</td>
                     <td colspan="1">BNR</td>
                  </tr>
                  <tr>
                     <td colspan="1">buildingNumberSuffix</td>
                     <td colspan="1">BNS</td>
                  </tr>
                  <tr>
                     <td colspan="1">postBox</td>
                     <td colspan="1">POB</td>
                  </tr>
                  <tr>
                     <td colspan="1">houseNumberNumeric</td>
                     <td colspan="1">BNN</td>
                  </tr>
                  <tr>
                     <td colspan="1">streetName</td>
                     <td colspan="1">STR</td>
                  </tr>
                  <tr>
                     <td colspan="1">streetNameBase</td>
                     <td colspan="1">STB</td>
                  </tr>
                  <tr>
                     <td colspan="1">streetNameType</td>
                     <td colspan="1">STTYP</td>
                  </tr>
                  <tr>
                     <td colspan="1">direction</td>
                     <td colspan="1">DIR</td>
                  </tr>
                  <tr>
                     <td colspan="1">careOf</td>
                     <td colspan="1">CAR</td>
                  </tr>
                  <tr>
                     <td colspan="1">censusTract</td>
                     <td colspan="1">CEN</td>
                  </tr>
                  <tr>
                     <td colspan="1">country</td>
                     <td colspan="1">CNT</td>
                  </tr>
                  <tr>
                     <td colspan="1">county</td>
                     <td colspan="1">CPA</td>
                  </tr>
                  <tr>
                     <td colspan="1">city</td>
                     <td colspan="1">CTY</td>
                  </tr>
                  <tr>
                     <td colspan="1">delimiter</td>
                     <td colspan="1">DEL</td>
                  </tr>
                  <tr>
                     <td colspan="1">precinct</td>
                     <td colspan="1">PRE</td>
                  </tr>
                  <tr>
                     <td colspan="1">state</td>
                     <td colspan="1">STA</td>
                  </tr>
                  <tr>
                     <td colspan="1">postalCode</td>
                     <td colspan="1">ZIP</td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="ADXP-examples"></a>2.18.3 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  		See the examples in
                  		<a href="#AD-examples">Examples
                     			(&sect;
                     			2.19.4 )</a>.
                  	
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-AD"></a>2.19 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="AD"></a>Postal Address (AD)
               </h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Mailing and home or office addresses. A sequence of
                  address parts, such as street or post office Box, city,
                  postal code, country, etc.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>AD</em> is primarily used to communicate data that will allow
                  printing mail labels, that will allow a person to physically
                  visit that address. The postal address data type is not
                  supposed to be a container for additional information that
                  might be useful for finding geographic locations (e.g., GPS
                  coordinates) or for performing epidemiological studies. Such
                  additional information is captured by other, more appropriate
                  HL7 elements.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Structurally, the postal address data type is a sequence of
                  address part values with an added "use" code and a valid time
                  range for information about if and when the address can be
                  used for a given purpose.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Applications are not required to preserve the ordering of the
                  address parts.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-AD-comp-summary">&nbsp;</a>
                     			Table
                     			24: Components of
                     Postal Address
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>use</td>
                        <td>SET&lt;CS&gt;</td>
                        <td>
                           A set of codes advising a system or user which address
                           in a set of like addresses to select for a given purpose.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>useablePeriod</td>
                        <td>GTS</td>
                        <td>
                           A GTS specifying the
                           periods of time during which the address can be used.
                           This is used to specify different addresses for
                           different times of the year or to refer to historical
                           addresses.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>isNotOrdered</td>
                        <td>BL</td>
                        <td>
                           A boolean value specifying whether the order of the
                           address parts is known or not. While the address parts
                           are always a Sequence, the order in which they are
                           presented may or may not be known. Where this matters,
                           <em>isNotOrdered</em> can be used to convey this
                           information.
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>AD</em> is represented by an XML element whose
                  name is determined by the context in which it is used. The
                  element has attributes and child elements as described in
                  the template and the sub-sections below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 17</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type AD --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   isNotOrdered = BL
   use = CS*
   &gt;
   <em>Content</em>: ( ( delimiter | country | state | county | city | postalCode | streetAddressLine |
                houseNumber | houseNumberNumeric | direction | streetName | streetNameBase |
                streetNameType | additionalLocator | unitID | unitType | careOf | censusTract |
                deliveryAddressLine | deliveryInstallationType | deliveryInstallationArea |
                deliveryInstallationQualifier | deliveryMode | deliveryModeIdentifier |
                buildingNumberSuffix | postBox | precinct | #PCDATA )*, useablePeriod* )
&lt;/x&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Any non whitespace text in the <em>AD</em> content is interpreted as
                  <a class="termref" href="#dtimpl-ADXP">ADXP</a> parts with a null partType. Refer to the the Formatting
                  Address section (2.21.1.5) in Abstract Data Types Specification
                  for full details on interpretation of <em>AD</em> content.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-AD.use"></a>2.19.1 
               </h4>
            </td>
            <td class="body_col">
               <h4>Use : SET&lt;CS&gt;</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A set of codes advising a system or user which address
                  in a set of like addresses to select for a given purpose.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The postal address use codes are defined by the PostalAddressUse
                  domain (<a href="#domain-PostalAddressUse">Table
                     			25</a>).
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="domain-PostalAddressUse">&nbsp;</a>
                     			Table
                     			25: Domain PostalAddressUse
                  </caption>
                  <thead>
                     <tr>
                        <th>code</th>
                        <th>name</th>
                        <th>definition</th>
                     </tr>
                  </thead>
                  <tr>
                     <th colspan="3"></th>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;H</td>
                     <td>home address</td>
                     <td>A communication address at a home, attempted contacts for business purposes might intrude privacy and chances are one will
                        contact family or other household members instead of the person one wishes to call.  Typically used with urgent cases, or
                        if no other contacts are available.
                     </td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;&nbsp;&nbsp;HP</td>
                     <td>primary home</td>
                     <td>The primary home, to reach a person after business hours.</td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;&nbsp;&nbsp;HV</td>
                     <td>vacation home</td>
                     <td>A vacation home, to reach a person while on vacation.</td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;WP</td>
                     <td>work place</td>
                     <td>An office address.  First choice for business related contacts during business hours.</td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;&nbsp;&nbsp;DIR</td>
                     <td>Direct</td>
                     <td>Indicates a work place address or telecommunication address that reaches the individual or organization directly without intermediaries.
                        For phones, often referred to as a 'private line'.
                     </td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;&nbsp;&nbsp;PUB</td>
                     <td>Public</td>
                     <td>Indicates a work place address or telecommunication address that is a 'standard' address which may reach a reception service,
                        mail-room, or other intermediary prior to the target entity.
                     </td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;BAD</td>
                     <td>bad address</td>
                     <td>A flag indicating that the address is bad, in fact, useless.</td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;TMP</td>
                     <td>temporary address</td>
                     <td>A temporary address, may be good for visit or mailing.  Note that an address history can provide more detailed information.</td>
                  </tr>
                  <tr>
                     <th colspan="3">Identifies the different representations of a name.  The representation may affect how the name is used.  (E.g. use of Ideographic
                        for formal communications.)
                     </th>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;ABC</td>
                     <td>Alphabetic</td>
                     <td>Alphabetic transcription of name (Japanese: romaji)</td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;IDE</td>
                     <td>Ideographic</td>
                     <td>Ideographic representation of name (e.g., Japanese kanji, Chinese characters)</td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;SYL</td>
                     <td>Syllabic</td>
                     <td>Syllabic transcription of name (e.g., Japanese kana, Korean hangul)</td>
                  </tr>
                  <tr>
                     <td>PHYS</td>
                     <td>physical visit address</td>
                     <td>Used primarily to visit an address.</td>
                  </tr>
                  <tr>
                     <td>PST</td>
                     <td>postal address</td>
                     <td>Used to send mail.</td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The postal address use code is not a complete classification
                  for locations or activities that take place at these
                  locations.  Its main purpose is to suggest or discourage
                  the use of a particular address. The use code should not
                  be considered in isolation. The data element in which the
                  address appears (class and attribute) and the context to
                  other data may express the precise nature and use of the
                  address more appropriately than a use code.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>use</em> is represented by the XML attribute<em>use</em>
                  whose value, if present, must be 0 or more valid values
                  from the PostalAddressUse domain (<a href="#domain-PostalAddressUse">Table
                     			25</a>)
                  separated by whitespace.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-AD.useablePeriod"></a>2.19.2 
               </h4>
            </td>
            <td class="body_col">
               <h4>Useable Period : GTS</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A <a class="termref" href="#dtimpl-GTS">GTS</a> specifying the
                  periods of time during which the address can be used.
                  This is used to specify different addresses for
                  different times of the year or to refer to historical
                  addresses.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>useablePeriod</em> is represented by 0 or more
                  XML elements<em>useablePeriod</em> each of which
                  must be a valid <a class="termref" href="#dtimpl-GTS">GTS</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-AD.isNotOrdered"></a>2.19.3 
               </h4>
            </td>
            <td class="body_col">
               <h4>Is Not Ordered : <a class="termref" href="#dtimpl-BL">BL</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A boolean value specifying whether the order of the
                  address parts is known or not. While the address parts
                  are always a Sequence, the order in which they are
                  presented may or may not be known. Where this matters,
                  <em>isNotOrdered</em> can be used to convey this
                  information.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>isNotOrdered</em> is represented by the XML attribute<em>isNotOrdered</em>
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-BL">BL</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="AD-examples"></a>2.19.4 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The following are examples of addresses in an XML
                  encoded form, where the XML tag is the address part
                  type and the data content is the address part value.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The address:
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <blockquote>
                  1050 W Wishard Blvd,<br>
                  RG 5th floor,<br>
                  Indianapolis, IN 46240
                  
               </blockquote>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  can be encoded in any of the following forms: 
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The first form would result from a system that only stores
                  addresses as free text or in a list of fields line1, line2,
                  etc.:
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 20</caption>
                  <tr>
                     <td class="example"><pre>
&lt;addr use='WP'&gt;
   1050 W Wishard Blvd,
   RG 5th floor,
   Indianapolis, IN 46240
&lt;/addr&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The second form is more specific about the role of the
                  address parts than the first one and is the typical form
                  seen in the U.S., where
                  street address is sometimes separated, and city, state
                  and ZIP code are always separated.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 21</caption>
                  <tr>
                     <td class="example"><pre>
&lt;addr use='WP'&gt;
   &lt;streetAddressLine&gt;1050 W Wishard Blvd&lt;/streetAddressLine&gt;,
   &lt;streetAddressLine&gt;RG 5th floor&lt;/streetAddressLine&gt;,
   &lt;city&gt;Indianapolis&lt;/city&gt;, &lt;state&gt;IN&lt;/state&gt;
   &lt;postalCode&gt;46240&lt;/postalCode&gt;
&lt;/addr&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The third is even more specific:
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 22</caption>
                  <tr>
                     <td class="example"><pre>
&lt;addr use='WP'&gt;
   &lt;houseNumber&gt;1050&lt;/houseNumber&gt;
   &lt;direction&gt;W&lt;/direction&gt;
   &lt;streetName&gt;Wishard Blvd&lt;/streetName&gt;,
   &lt;additionalLocator&gt;RG 5th floor&lt;/additionalLocator&gt;,
   &lt;city&gt;Indianapolis&lt;/city&gt;, &lt;state&gt;IN&lt;/state&gt;
   &lt;postalCode&gt;46240&lt;/postalCode&gt;
&lt;/addr&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The latter form above is not often used in the USA.
                  However, it is useful in Germany, where many systems
                  keep house number as a distinct field. For example,
                  the German address:
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <blockquote>
                  Windsteiner Weg 54a,<br>
                  D-14165 Berlin
                  
               </blockquote>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  would most likely be encoded as follows: 
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 23</caption>
                  <tr>
                     <td class="example"><pre>
&lt;addr use='HP'&gt;
   &lt;streetName&gt;Windsteiner Weg&lt;/streetName&gt;
   &lt;houseNumber&gt;54a&lt;/houseNumber&gt;,&lt;delimiter/&gt;
   &lt;country&gt;D&lt;/country&gt;-&lt;postalCode&gt;14165&lt;/postalCode&gt;
   &lt;city&gt;Berlin&lt;/city&gt;
&lt;/addr&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-ENXP"></a>2.20 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="ENXP"></a>Entity Name Part (ENXP)
               </h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A character string token representing a part of a name.
                  May have a type code signifying the role of the part in
                  the whole entity name, and a qualifier code for more detail
                  about the name part type. Typical name parts for person
                  names are given names, and family names, titles, etc.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-ENXP-comp-summary">&nbsp;</a>
                     			Table
                     			26: Components of
                     Entity Name Part
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>data</td>
                        <td>XML Text Content</td>
                        <td>
                           The data itself represented in the XML instance encoding.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>partType</td>
                        <td>CS</td>
                        <td>
                           Indicates whether the name part is a given name, family
                           name, prefix, suffix, etc.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>qualifier</td>
                        <td>SET&lt;CS&gt;</td>
                        <td><em>qualifier</em> is a set of codes each of which specifies
                           a certain subcategory of the name part in addition to
                           the main name part type. For example, a given name may
                           be flagged as a nickname, a family name may be a
                           pseudonym or a name of public records.
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>ENXP</em> is represented as an XML element
                  whose name is derived from the entity name part type
                  code (see table below) and whose content is just like
                  an <a class="termref" href="#dtimpl-ST">ST</a>, except that it also
                  has XML attribute<em>partType</em> and XML attribute<em>qualifier</em> as described
                  above. The value of the XML attribute<em>partType</em> is fixed to the
                  appropriate name part type. The XML attribute<em>partType</em> is
                  generally not used.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 18</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type ENXP --&gt;
&lt;family
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   partType = (FAM): FAM
   qualifier = CS*
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/family&gt;

&lt;given
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   partType = (GIV) : GIV
   qualifier = CS*
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/given&gt;

&lt;prefix
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   partType = (PFX) : PFX
   qualifier = CS*
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/prefix&gt;

&lt;suffix
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   partType = (SFX) : SFX
   qualifier = CS*
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/suffix&gt;

&lt;delimiter
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   language = CS
   partType = (DEL) : DEL
   qualifier = CS*
   &gt;
   <em>Content</em>: ( #PCDATA )
&lt;/delimiter&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-ENXP.data"></a>2.20.1 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Data : XML Text Content (inherited from <a class="termref" href="#dtimpl-BIN">BIN</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The data itself represented in the XML instance encoding.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em></em> is represented as the text content of the
                  XML element representing the <em>ENXP</em> value.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-ENXP.partType"></a>2.20.2 
               </h4>
            </td>
            <td class="body_col">
               <h4>Name Part Type : <a class="termref" href="#dtimpl-CS">CS</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Indicates whether the name part is a given name, family
                  name, prefix, suffix, etc.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Entity name part types are as defined in
                  <a href="#domain-EntityNamePartType">Table
                     			27</a></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="domain-EntityNamePartType">&nbsp;</a>
                     			Table
                     			27: Domain EntityNamePartType
                  </caption>
                  <thead>
                     <tr>
                        <th>code</th>
                        <th>name</th>
                        <th>definition</th>
                     </tr>
                  </thead>
                  <tr>
                     <td>FAM</td>
                     <td>family</td>
                     <td>Family name, this is the name that links to the genealogy. In some cultures (e.g. Eritrea) the family name of a son is the
                        first name of his father.
                     </td>
                  </tr>
                  <tr>
                     <td>GIV</td>
                     <td>given</td>
                     <td>Given name (don't call it "first name" since this given names do not always come first)</td>
                  </tr>
                  <tr>
                     <td>PFX</td>
                     <td>prefix</td>
                     <td>A prefix has a strong association to the immediately following name part. A prefix has no implicit trailing white space (it
                        has implicit leading white space though). Note that prefixes can be inverted.
                     </td>
                  </tr>
                  <tr>
                     <td>SFX</td>
                     <td>suffix</td>
                     <td>A suffix has a strong association to the immediately preceding name part. A prefix has no implicit leading white space (it
                        has implicit trailing white space though). Suffices can not be inverted.
                     </td>
                  </tr>
                  <tr>
                     <td>DEL</td>
                     <td>delimiter</td>
                     <td>A delimiter has no meaning other than being literally printed in this name representation.  A delimiter has no implicit leading
                        and trailing white space.
                     </td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Not every name part must have a type code, if the type
                  code is unknown, not applicable, or simply undefined
                  this is expressed by a null value (type.isNull). For
                  example, a name may be  "Rogan Sulma" and it may not be
                  clear which one is a given name or which is a last
                  name, or whether Rogan may be a title.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Entity names are conceptualized as text with added
                  mark-up. The mark-up may describe in detail the role
                  of each name part if it is known. Name parts occur in
                  the order in which they would be printed on a mailing
                  label. The model is similar to HTML or XML markup of text.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>partType</em> is represented simultaneously in Element
                  and Attribute forms. In the Element form, the name of
                  the element is determined by the part type, as specified
                  in <a href="#EntityNamePartType-Element-Names">Table
                     			28</a> below.
                  Additionally, each such element has an XML attribute<em>partType</em>
                  whose value, if present, must be a valid value from the
                  domain EntityNamePartType
                  (<a href="#domain-EntityNamePartType">Table
                     			27</a>) corresponding
                  to the part type represented by the element on which it
                  appears. Since the XML attribute<em>partType</em> always has
                  a fixed value, it is not normally present in the XML
                  instance.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="EntityNamePartType-Element-Names">&nbsp;</a>
                     			Table
                     			28: EntityNamePartType Element Names
                  </caption>
                  <tr>
                     <td colspan="1">Element Name</td>
                     <td colspan="1">Part Type</td>
                  </tr>
                  <tr>
                     <td colspan="1">delimiter</td>
                     <td colspan="1">DEL</td>
                  </tr>
                  <tr>
                     <td colspan="1">family</td>
                     <td colspan="1">FAM</td>
                  </tr>
                  <tr>
                     <td colspan="1">given</td>
                     <td colspan="1">GIV</td>
                  </tr>
                  <tr>
                     <td colspan="1">prefix</td>
                     <td colspan="1">PFX</td>
                  </tr>
                  <tr>
                     <td colspan="1">suffix</td>
                     <td colspan="1">SFX</td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-ENXP.qualifier"></a>2.20.3 
               </h4>
            </td>
            <td class="body_col">
               <h4>Qualifier : SET&lt;CS&gt;</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong><em>qualifier</em> is a set of codes each of which specifies
                  a certain subcategory of the name part in addition to
                  the main name part type. For example, a given name may
                  be flagged as a nickname, a family name may be a
                  pseudonym or a name of public records.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Entity name part qualifiers are as defined in
                  <a href="#domain-EntityNamePartQualifier">Table
                     			29</a></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="domain-EntityNamePartQualifier">&nbsp;</a>
                     			Table
                     			29: Domain EntityNamePartQualifier
                  </caption>
                  <thead>
                     <tr>
                        <th>code</th>
                        <th>name</th>
                        <th>definition</th>
                     </tr>
                  </thead>
                  <tr>
                     <th colspan="3"></th>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;LS</td>
                     <td>Legal status</td>
                     <td>For organizations a suffix indicating the legal status, e.g., "Inc.", "Co.", "AG", "GmbH", "B.V." "S.A.",  "Ltd." etc.</td>
                  </tr>
                  <tr>
                     <th colspan="3"></th>
                  </tr>
                  <tr>
                     <th colspan="3">&nbsp;&nbsp;</th>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;&nbsp;&nbsp;AC</td>
                     <td>academic</td>
                     <td>Indicates that a prefix like "Dr." or a suffix like "M.D." or "Ph.D." is an academic title.</td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;&nbsp;&nbsp;NB</td>
                     <td>nobility</td>
                     <td>In Europe and Asia, there are still people with nobility titles (aristocrats).  German "von" is generally a nobility title,
                        not a mere voorvoegsel.  Others are "Earl of" or "His Majesty King of..." etc.  Rarely used nowadays, but some systems do
                        keep track of this.
                     </td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;&nbsp;&nbsp;PR</td>
                     <td>professional</td>
                     <td>Primarily in the British Imperial culture people tend to have an abbreviation of their professional organization as part of
                        their credential suffices.
                     </td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;&nbsp;&nbsp;VV</td>
                     <td>voorvoegsel</td>
                     <td>A Dutch "voorvoegsel" is something like "van" or "de" that might have indicated nobility in the past but no longer so. Similar
                        prefixes exist in other languages such as Spanish, French or Portugese.
                     </td>
                  </tr>
                  <tr>
                     <th colspan="3">&nbsp;&nbsp;</th>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;&nbsp;&nbsp;AD</td>
                     <td>adopted</td>
                     <td>The name the person was given at the time of adoption.</td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;&nbsp;&nbsp;BR</td>
                     <td>birth</td>
                     <td>A name that a person had shortly after being born. Usually for family names but may be used to mark given names at birth that
                        may have changed later.
                     </td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;&nbsp;&nbsp;SP</td>
                     <td>spouse</td>
                     <td>The name assumed from the partner in a marital relationship (hence the "M"). Usually the spouse's family name. Note that no
                        inference about gender can be made from the existence of spouse names.
                     </td>
                  </tr>
                  <tr>
                     <th colspan="3">&nbsp;&nbsp;</th>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;&nbsp;&nbsp;CL</td>
                     <td>callme</td>
                     <td>A callme name is (usually a given name) that is preferred when a person is directly addressed.</td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;IN</td>
                     <td>initial</td>
                     <td>Indicates that a name part is just an initial. Initials do not imply a trailing period since this would not work with non-Latin
                        scripts.  Initials may consist of more than one letter, e.g., "Ph." could stand for "Philippe" or "Th." for "Thomas".
                     </td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;TITLE</td>
                     <td>title</td>
                     <td>Indicates that a prefix or a suffix is a title that applies to the whole name, not just the adjacent name part.</td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>qualifier</em> is represented as the XML attribute<em>qualifier</em>
                  whose value, if present, must be 0 or more values from the
                  EntityNamePartQualifier domain
                  (<a href="#domain-EntityNamePartQualifier">Table
                     			29</a>)
                  separated by whitespace.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="ENXP-examples"></a>2.20.4 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  		See the examples in
                  		<a href="#PN-examples">Examples
                     			(&sect;
                     			2.22.3 )</a>, <a href="#ON-examples">Examples
                     			(&sect;
                     			2.23.3 )</a>
                  		and <a href="#TN-examples">Examples
                     			(&sect;
                     			2.24.3 )</a>.
                  	
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-EN"></a>2.21 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="EN"></a>Entity Name (EN)
               </h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A name for a person, organization, place or thing. A
                  sequence of name parts, such as given name or family
                  name, prefix, suffix, etc. Examples for entity name
                  values are "Jim Bob Walton, Jr.", "Health Level Seven,
                  Inc.", "Lake Tahoe", etc. An entity name may be as simple
                  as a character string or may consist of several entity name
                  parts, such as, "Jim", "Bob", "Walton", and "Jr.", "Health
                  Level Seven" and "Inc.", "Lake" and "Tahoe".
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Structurally, the entity name data type is a sequence
                  of entity name part values with an added "use" code and
                  a valid time range for information about if and when the
                  name can be used for a given purpose.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-EN-comp-summary">&nbsp;</a>
                     			Table
                     			30: Components of
                     Entity Name
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>use</td>
                        <td>SET&lt;CS&gt;</td>
                        <td>
                           A set of codes advising a system or user which name
                           in a set of like names to select for a given purpose.
                           A name without specific use code might be a default
                           name useful for any purpose, but a name with a specific
                           use code would be preferred for that respective purpose.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>validTime</td>
                        <td>IVL&lt;TS&gt;</td>
                        <td>
                           An interval of time specifying the time during which
                           the name is or was used for the entity. This
                           accomodates the fact that people change names for
                           people, places and things.
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>EN</em> is represented by an XML element
                  whose name is determined by the context in which it is
                  used. The element has attributes and child elements as
                  described in the template and the sub-sections below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 19</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type EN --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   use = CS*
   &gt;
   <em>Content</em>: ( (delimiter | family | given | prefix | suffix | #PCDATA)*, validTime )
&lt;/x&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Any non whitespace text in the <em>EN</em> content is interpreted
                  as <a class="termref" href="#dtimpl-ENXP">ENXP</a> parts with a null partType. Refer to the the
                  Formatting Name section (2.23.1.4) in Abstract Data
                  Types Specification for full details on interpretation
                  of <em>EN</em> content.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-EN.use"></a>2.21.1 
               </h4>
            </td>
            <td class="body_col">
               <h4>Use : SET&lt;CS&gt;</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A set of codes advising a system or user which name
                  in a set of like names to select for a given purpose.
                  A name without specific use code might be a default
                  name useful for any purpose, but a name with a specific
                  use code would be preferred for that respective purpose.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The entity names use codes are defined by the EntityNameUse
                  domain (<a href="#domain-EntityNameUse">Table
                     			31</a>).
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="domain-EntityNameUse">&nbsp;</a>
                     			Table
                     			31: Domain EntityNameUse
                  </caption>
                  <thead>
                     <tr>
                        <th>code</th>
                        <th>name</th>
                        <th>definition</th>
                     </tr>
                  </thead>
                  <tr>
                     <td>C</td>
                     <td>License</td>
                     <td>As recorded on a license, record, certificate, etc. (only if different from legal name)</td>
                  </tr>
                  <tr>
                     <td>I</td>
                     <td>Indigenous/Tribal</td>
                     <td>e.g. Chief Red Cloud</td>
                  </tr>
                  <tr>
                     <td>L</td>
                     <td>Legal</td>
                     <td>Known as/conventional/the one you use</td>
                  </tr>
                  <tr>
                     <td>P</td>
                     <td>pseudonym</td>
                     <td>A self asserted name that the person is using or has used.</td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;A</td>
                     <td>Artist/Stage</td>
                     <td>Includes writer's pseudonym, stage name, etc</td>
                  </tr>
                  <tr>
                     <td>R</td>
                     <td>Religious</td>
                     <td>e.g. Sister Mary Francis, Brother John</td>
                  </tr>
                  <tr>
                     <td>SRCH</td>
                     <td>search</td>
                     <td>A name intended for use in searching or matching.</td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;PHON</td>
                     <td>phonetic</td>
                     <td>A name spelled phonetically.</td>
                  </tr>
                  <tr>
                     <td>&nbsp;&nbsp;SNDX</td>
                     <td>Soundex</td>
                     <td>A name spelled according to the SoundEx algorithm.</td>
                  </tr>
                  <tr>
                     <td>ABC</td>
                     <td>Alphabetic</td>
                     <td>Alphabetic transcription of name (Japanese: romaji)</td>
                  </tr>
                  <tr>
                     <td>SYL</td>
                     <td>Syllabic</td>
                     <td>Syllabic transcription of name (e.g., Japanese kana, Korean hangul)</td>
                  </tr>
                  <tr>
                     <td>IDE</td>
                     <td>Ideographic</td>
                     <td>Ideographic representation of name (e.g., Japanese kanji, Chinese characters)</td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>use</em> is represented by the XML attribute<em>use</em>
                  whose value, if present, must be 0 or more valid values
                  from the EntityNameUse domain
                  (<a href="#domain-EntityNameUse">Table
                     			31</a>)  separated by
                  whitespace.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-EN.validTime"></a>2.21.2 
               </h4>
            </td>
            <td class="body_col">
               <h4>Valid Time : IVL&lt;TS&gt;</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  An interval of time specifying the time during which
                  the name is or was used for the entity. This
                  accomodates the fact that people change names for
                  people, places and things.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>validTime</em> is represented by 0 or more
                  XML elements<em>validTime</em> each of which
                  must be a valid
                  <a class="termref" href="#dtimpl-IVL">IVL</a>&lt;<a class="termref" href="#dtimpl-TS">TS</a>&gt;.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="EN-examples"></a>2.21.3 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  		See the examples in
                  		<a href="#PN-examples">Examples
                     			(&sect;
                     			2.22.3 )</a>, <a href="#ON-examples">Examples
                     			(&sect;
                     			2.23.3 )</a>
                  		and <a href="#TN-examples">Examples
                     			(&sect;
                     			2.24.3 )</a>.
                  	
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-PN"></a>2.22 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="PN"></a>Person Name (PN) specializes <a class="termref" href="#dtimpl-EN">EN</a></h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A name for a person. A sequence of name parts, such as
                  given name or family name, prefix, suffix, etc. PN differs
                  from EN because the qualifier type cannot include LS
                  (Legal Status).
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-PN-comp-summary">&nbsp;</a>
                     			Table
                     			32: Components of
                     Person Name
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>use</td>
                        <td>SET&lt;CS&gt;</td>
                        <td>
                           A set of codes advising a system or user which name
                           in a set of like names to select for a given purpose.
                           A name without specific use code might be a default
                           name useful for any purpose, but a name with a specific
                           use code would be preferred for that respective purpose.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>validTime</td>
                        <td>IVL&lt;TS&gt;</td>
                        <td>
                           An interval of time specifying the time during which
                           the name is or was used for the entity. This
                           accomodates the fact that people change names for
                           people, places and things.
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>PN</em> is represented by an XML element
                  whose name is determined by the context in which it is
                  used. The element has attributes and child elements as
                  described in the template and the sub-sections below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 20</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type PN --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   use = CS*
   &gt;
   <em>Content</em>: ( (delimiter | family | given | prefix | suffix | #PCDATA)*, validTime )
&lt;/x&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Any non whitespace text in the <em>PN</em> content is interpreted
                  as <a class="termref" href="#dtimpl-ENXP">ENXP</a> parts with a null partType. Refer to the the
                  Formatting Name section (2.23.1.4) in Abstract Data
                  Types Specification for full details on interpretation
                  of <em>PN</em> content.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-PN.use"></a>2.22.1 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Use : SET&lt;CS&gt; (inherited from <a class="termref" href="#dtimpl-EN">EN</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A set of codes advising a system or user which name
                  in a set of like names to select for a given purpose.
                  A name without specific use code might be a default
                  name useful for any purpose, but a name with a specific
                  use code would be preferred for that respective purpose.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>use</em> is represented by the XML attribute<em>use</em>
                  whose value, if present, must be 0 or more valid values
                  from the EntityNameUse domain (<a href="#domain-EntityNameUse">Table
                     			31</a>)
                  separated by whitespace.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-PN.validTime"></a>2.22.2 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Valid Time : IVL&lt;TS&gt; (inherited from <a class="termref" href="#dtimpl-EN">EN</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  An interval of time specifying the time during which
                  the name is or was used for the entity. This
                  accomodates the fact that people change names for
                  people, places and things.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>validTime</em> is represented by 0 or more
                  XML elements<em>validTime</em>	each of which must
                  be a valid
                  <a class="termref" href="#dtimpl-IVL">IVL</a>&lt;<a class="termref" href="#dtimpl-TS">TS</a>&gt;.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="PN-examples"></a>2.22.3 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  						A very simple encoding of  "Adam A. Everyman" would be:
                  					
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 24</caption>
                  <tr>
                     <td class="example"><pre>
&lt;name&gt;
   &lt;given&gt;Adam&lt;/given&gt;
   &lt;given&gt;A.&lt;/given&gt;
   &lt;family&gt;Everyman&lt;/family&gt;
&lt;/name&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  						None of the special qualifiers need to be mentioned if they are
                  						unknown or irrelevant. The next example shows extensive use of
                  						multiple given names, prefixes, suffixes, for academic degrees,
                  						nobility titles, <em>vorvoegsels</em> ("van"), and professional
                  						designations.
                  					
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 25</caption>
                  <tr>
                     <td class="example"><pre>
&lt;name&gt;
   &lt;prefix qualifier='AC'&gt;Dr. phil. &lt;/prefix&gt;
   &lt;given&gt;Regina&lt;/given&gt;
   &lt;given&gt;Johanna&lt;/given&gt;
   &lt;given&gt;Maria&lt;/given&gt;
   &lt;prefix qualifier='NB'&gt;Gr&amp;auml;fin &lt;/prefix&gt;
   &lt;family qualifier='BR'&gt;Hochheim&lt;/family&gt;-&lt;family qualifier='SP'&gt;Weilenfels&lt;/family&gt;
   &lt;suffix qualifier='PR'&gt;NCFSA&lt;/suffix&gt;
&lt;/name&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  						The following example shows a Japanese name in the three forms:
                  						ideographic (Kanji), syllabic (Hiragana), and alphabetic (Romaji).
                  					
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 26</caption>
                  <tr>
                     <td class="example"><pre>
&lt;name use='IDE'&gt;
   &lt;family&gt;&#26408;&#26449;&lt;/family&gt;
   &lt;given&gt;&#36947;&#30007;&lt;/given&gt;
&lt;/name&gt;
&lt;name use="SYL"&gt;
   &lt;family&gt;&#12365;&#12416;&#12425;&lt;/family&gt;
   &lt;given&gt;&#12415;&#12385;&#12362;&lt;/given&gt;
&lt;/name&gt;
&lt;name use="ABC"&gt;
   &lt;family&gt;KIMURA&lt;/family&gt;
   &lt;given&gt;MICHIO&lt;/given&gt;
&lt;/name&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-ON"></a>2.23 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="ON"></a>Organization Name (ON) specializes <a class="termref" href="#dtimpl-EN">EN</a></h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A name for an organization. A sequence of name parts.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-ON-comp-summary">&nbsp;</a>
                     			Table
                     			33: Components of
                     Organization Name
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>use</td>
                        <td>SET&lt;CS&gt;</td>
                        <td>
                           A set of codes advising a system or user which name
                           in a set of like names to select for a given purpose.
                           A name without specific use code might be a default
                           name useful for any purpose, but a name with a specific
                           use code would be preferred for that respective purpose.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>validTime</td>
                        <td>IVL&lt;TS&gt;</td>
                        <td>
                           An interval of time specifying the time during which
                           the name is or was used for the entity. This
                           accomodates the fact that people change names for
                           people, places and things.
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>ON</em> is represented by an XML element
                  whose name is determined by the context in which it
                  is used. The element has attributes and child elements
                  as described in the template and the sub-sections below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 21</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type ON --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   use = CS*
   &gt;
   <em>Content</em>: ( (delimiter | prefix | suffix | #PCDATA)*, validTime )
&lt;/x&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Any non whitespace text in the <em>ON</em> content is interpreted
                  as <a class="termref" href="#dtimpl-ENXP">ENXP</a> parts with a null partType. Refer to the the Formatting
                  Name section (2.23.1.4) in Abstract Data Types Specification for
                  full details on interpretation of <em>ON</em> content.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-ON.use"></a>2.23.1 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Use : SET&lt;CS&gt; (inherited from <a class="termref" href="#dtimpl-EN">EN</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A set of codes advising a system or user which name
                  in a set of like names to select for a given purpose.
                  A name without specific use code might be a default
                  name useful for any purpose, but a name with a specific
                  use code would be preferred for that respective purpose.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>use</em> is represented by the XML attribute<em>use</em>
                  whose value, if present, must be 0 or more valid
                  values from the EntityNameUse domain
                  (<a href="#domain-EntityNameUse">Table
                     			31</a>)
                  separated by whitespace.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-ON.validTime"></a>2.23.2 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Valid Time : IVL&lt;TS&gt; (inherited from <a class="termref" href="#dtimpl-EN">EN</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  An interval of time specifying the time during which
                  the name is or was used for the entity. This
                  accomodates the fact that people change names for
                  people, places and things.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>validTime</em> is represented by 0 or more
                  XML elements<em>validTime</em> each of which must
                  be a valid
                  <a class="termref" href="#dtimpl-IVL">IVL</a>&lt;<a class="termref" href="#dtimpl-TS">TS</a>&gt;.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="ON-examples"></a>2.23.3 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The following is the name of HL7 with the legal status <code>"Inc."</code>
                  as a distinguished name part:
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 27</caption>
                  <tr>
                     <td class="example"><pre>
&lt;name&gt;Health Level Seven, &lt;suffix qualifier='LS'&gt;Inc.&lt;/suffix&gt;&lt;/name&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-TN"></a>2.24 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="TN"></a>Trivial Name (TN) specializes <a class="termref" href="#dtimpl-EN">EN</a></h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A restriction of entity name that is effectively a simple string used
                  for a simple name for things and places.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-TN-comp-summary">&nbsp;</a>
                     			Table
                     			34: Components of
                     Trivial Name
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>use</td>
                        <td>SET&lt;CS&gt;</td>
                        <td>
                           A set of codes advising a system or user which name
                           in a set of like names to select for a given purpose.
                           A name without specific use code might be a default
                           name useful for any purpose, but a name with a specific
                           use code would be preferred for that respective purpose.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>validTime</td>
                        <td>IVL&lt;TS&gt;</td>
                        <td>
                           An interval of time specifying the time during which
                           the name is or was used for the entity. This
                           accomodates the fact that people change names for
                           people, places and things.
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>TN</em> is represented by an XML element
                  whose name is determined by the context in which it is
                  used. The element has attributes and child elements as
                  described in the template and the sub-sections below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 22</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type TN --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   use = CS*
   &gt;
   <em>Content</em>: ( #PCDATA, validTime )
&lt;/x&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-TN.use"></a>2.24.1 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Use : SET&lt;CS&gt; (inherited from <a class="termref" href="#dtimpl-EN">EN</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A set of codes advising a system or user which name
                  in a set of like names to select for a given purpose.
                  A name without specific use code might be a default
                  name useful for any purpose, but a name with a specific
                  use code would be preferred for that respective purpose.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>use</em> is represented by the XML attribute<em>use</em>
                  whose value, if present, must be 0 or more valid values
                  from the EntityNameUse domain
                  (<a href="#domain-EntityNameUse">Table
                     			31</a>)
                  separated by whitespace.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-TN.validTime"></a>2.24.2 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Valid Time : IVL&lt;TS&gt; (inherited from <a class="termref" href="#dtimpl-EN">EN</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  An interval of time specifying the time during which
                  the name is or was used for the entity. This
                  accomodates the fact that people change names for
                  people, places and things.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>validTime</em> is represented by 0 or more
                  XML elements<em>validTime</em>	each of which
                  must be a valid
                  <a class="termref" href="#dtimpl-IVL">IVL</a>&lt;<a class="termref" href="#dtimpl-TS">TS</a>&gt;.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="TN-examples"></a>2.24.3 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The following is the organization name, "Health Level Seven,
                  Inc." in a simple string form:
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 28</caption>
                  <tr>
                     <td class="example"><pre>
&lt;name&gt;Health Level Seven, Inc.&lt;/name&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-QTY"></a>2.25 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="QTY"></a>Quantity (QTY)
               </h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong><em>QTY</em> is an abstract generalization
                  for all data types (1) whose value set has an order
                  relation (less-or-equal) and (2) where difference is
                  defined in all of the data type's totally ordered value
                  subsets.  The quantity type abstraction is needed in
                  defining certain other types, such as the interval and
                  the probability distribution.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The Data Types Abstract Specification defines a
                  <em>diff</em> property of a data <strong>type</strong>
                  (not data value) that is the data type of the difference
                  value between two data values of the quantity type. By
                  default the <em>diff</em> property equals the same
                  data type, but it may be overridden by a specialization
                  of QTY.  For instance, the difference between two
                  <a class="termref" href="#dtimpl-TS">TS</a> values has the data type
                  <a class="termref" href="#dtimpl-PQ">PQ</a> (in the dimension of elapsed
                  time.)
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>QTY</em> is an abstract data type and cannot
                  be used directly in the XML instance, so it has no XML
                  representation. Instead, a specific descendent type
                  must be used.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-INT"></a>2.26 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="INT"></a>Integer Number (INT) specializes <a class="termref" href="#dtimpl-QTY">QTY</a></h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Integer numbers (-1,0,1,2, 100, 3398129, etc.) are precise
                  numbers that are results of counting and enumerating.
                  Integer numbers are discrete, the set of integers is
                  infinite but countable.  No arbitrary limit is imposed on
                  the range of integer numbers. Two NULL flavors are
                  defined for the positive and negative infinity.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>INT</em> is represented by both Element and
                  Attribute forms. In the Element form, the name of the
                  element is determined by the context in which it
                  is used. The element has attributes as described in the
                  template and the sub-sections below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 23</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type INT --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   value = xs:integer
   /&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  XML instances may carry either a nullFlavor or a value,
                  but not both.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The Attribute form of <em>INT</em> is used when properties of
                  other data types have type <em>INT</em>.  The name of the attribute
                  is determined by the context in which it is used.
                  The attribute value is the integer value.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-REAL"></a>2.27 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="REAL"></a>Real Number (REAL) specializes <a class="termref" href="#dtimpl-QTY">QTY</a></h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Fractional numbers. Typically used whenever quantities
                  are measured, estimated, or computed from other real
                  numbers.  The typical representation is decimal, where
                  the number of significant decimal digits is known as the
                  precision. Real numbers are needed beyond integers
                  whenever quantities of the real world are measured,
                  estimated, or computed from other real numbers. The term
                  "Real number" in this specification is used to mean
                  that fractional values are covered without necessarily
                  implying the full set of the mathematical real numbers.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>REAL</em> is represented by both Element and
                  Attribute forms. In the Element form, the name of the
                  element is determined by the context in which it is used.
                  The element has attributes as described in the template
                  and the sub-sections below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 24</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type REAL --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   value = Union of (xs:decimal xs:double)
   /&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  XML instances may carry either a nullFlavor or a value,
                  but not both.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The Attribute form of <em>REAL</em> is used when properties of
                  other data types have type <em>REAL</em>.  The name of the attribute
                  is determined by the context in which it is used. The
                  attribute value is the real value.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  For both the element and Attribute form, the value of the
                  <em>REAL</em> as represented must conform to either of the XML Schema
                  data types decimal or double.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-PQ"></a>2.28 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="PQ"></a>Physical Quantity (PQ) specializes <a class="termref" href="#dtimpl-QTY">QTY</a></h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A dimensioned quantity expressing the result of a
                  measurement act.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-PQ-comp-summary">&nbsp;</a>
                     			Table
                     			35: Components of
                     Physical Quantity
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>value</td>
                        <td>REAL</td>
                        <td>
                           The magnitude of the quantity measured in terms of
                           the unit.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>unit</td>
                        <td>CS</td>
                        <td>
                           The unit of measure specified in the Unified Code for
                           Units of Measure (UCUM)
                           [<a href="http://aurora.rg.iupui.edu/UCUM">http://aurora.rg.iupui.edu/UCUM</a>].
                           
                        </td>
                     </tr>
                     <tr>
                        <td>translation</td>
                        <td>PQR</td>
                        <td>
                           An alternative representation of the same physical
                           quantity expressed in a different unit, of a different
                           unit code system and possibly with a different value.
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>PQ</em> is represented by an XML element whose
                  name is determined by the context in which it is used. The
                  element has attributes and child elements as described in
                  the template and the sub-sections below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 25</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type PQ --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   value = REAL
   unit = CS
   &gt;
   <em>Content</em>: ( translation* )
&lt;/x&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  XML instances may carry either a nullFlavor or a value, but
                  not both. The unit attribute must be populated if the value
                  attribute is present, and cannot be present when the value
                  attribute is not present.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-PQ.value"></a>2.28.1 
               </h4>
            </td>
            <td class="body_col">
               <h4>Value : <a class="termref" href="#dtimpl-REAL">REAL</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The magnitude of the quantity measured in terms of
                  the unit.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>value</em> is represented by the XML attribute<em>value</em>
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-REAL">REAL</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-PQ.unit"></a>2.28.2 
               </h4>
            </td>
            <td class="body_col">
               <h4>Unit of Measure : <a class="termref" href="#dtimpl-CS">CS</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The unit of measure specified in the Unified Code for
                  Units of Measure (UCUM)
                  [<a href="http://aurora.rg.iupui.edu/UCUM">http://aurora.rg.iupui.edu/UCUM</a>].
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  More detail on the Unified Code for Units of Measure,
                  and example tables of units commonly seen in practice
                  with HL7 are provided in an appendix of the Data Types
                  Abstract Specification.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The default unit of measure is <em>1</em>
                  (the "unity").
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>unit</em> is represented by the XML attribute<em>unit</em>
                  whose value, if present, must be a valid unit of
                  measure as defined in UCUM
                  [<a href="http://aurora.rg.iupui.edu/UCUM">http://aurora.rg.iupui.edu/UCUM</a>].
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-PQ.translation"></a>2.28.3 
               </h4>
            </td>
            <td class="body_col">
               <h4>Translation : <a class="termref" href="#dtimpl-PQR">PQR</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  An alternative representation of the same physical
                  quantity expressed in a different unit, of a different
                  unit code system and possibly with a different value.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>translation</em> is represented by 0 or more
                  XML elements<em>translation</em>
                  each of which must be a valid
                  <a class="termref" href="#dtimpl-PQR">PQR</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="PQ-examples"></a>2.28.4 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  This example shows a value of 22.35 millimoles per milliliter.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 29</caption>
                  <tr>
                     <td class="example"><pre>
&lt;value value='22.35' unit='mmol/mL'/&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The final example shows a value of 1.77 meters as well as
                  a <a class="termref" href="#comp-PQ.translation">translation</a> into inches.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 30</caption>
                  <tr>
                     <td class="example"><pre>
&lt;value value='1.77' unit='m'&gt;
   &lt;translation value='69.7' code='[in_I]'
      codeSystem='2.16.840.1.113883.19.6.8' codeSystemName='UCUM'/&gt;
&lt;/value&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-PQR"></a>2.29 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="PQR"></a>Physical Quantity Representation (PQR) specializes <a class="termref" href="#dtimpl-CV">CV</a></h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A representation of a physical quantity in a unit from
                  any code system. Used to show alternative representation
                  for a physical quantity.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-PQR-comp-summary">&nbsp;</a>
                     			Table
                     			36: Components of
                     Physical Quantity Representation
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>value</td>
                        <td>REAL</td>
                        <td>
                           The magnitude of the measurement value in terms of
                           the unit specified in the code.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>code</td>
                        <td>ST</td>
                        <td>
                           The plain code symbol defined by the code system.
                           For example, "784.0" is the code symbol of the ICD-9
                           code "784.0" for headache.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>codeSystem</td>
                        <td>UID</td>
                        <td>
                           Specifies the code system that defines the code.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>codeSystemName</td>
                        <td>ST</td>
                        <td>
                           A common name of the coding system.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>codeSystemVersion</td>
                        <td>ST</td>
                        <td>
                           If applicable, a version descriptor defined
                           specifically for the given code system.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>displayName</td>
                        <td>ST</td>
                        <td>
                           A name or title for the code, under which the sending
                           system shows the code value to its users.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>originalText</td>
                        <td>ED</td>
                        <td>
                           The text or phrase used as the basis for the coding.
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  This is an extension of the coded value data type.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>PQR</em> is represented by an XML element
                  whose name is determined by the context in which it is
                  used. The element has attributes and child elements as
                  described in the template and the sub-sections below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 26</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type PQR --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   code = ST
   codeSystem = UID
   codeSystemName = ST
   codeSystemVersion = ST
   displayName = ST
   value = REAL
   &gt;
   <em>Content</em>: ( originalText )
&lt;/x&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-PQR.value"></a>2.29.1 
               </h4>
            </td>
            <td class="body_col">
               <h4>Value : <a class="termref" href="#dtimpl-REAL">REAL</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The magnitude of the measurement value in terms of
                  the unit specified in the code.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>value</em> is represented by the XML attribute<em>value</em>
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-REAL">REAL</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-PQR.code"></a>2.29.2 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Code : <a class="termref" href="#dtimpl-ST">ST</a> (inherited from <a class="termref" href="#dtimpl-CD">CD</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The plain code symbol defined by the code system.
                  For example, "784.0" is the code symbol of the ICD-9
                  code "784.0" for headache.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>code</em> is represented by the XML attribute<em>code</em>
                  whose value, if present, must be a valid
                  <a href="http://www.w3.org/TR/xmlschema-2/#token" target="schema-rec">xs:token</a>
                  with no internal whitespace.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-PQR.codeSystem"></a>2.29.3 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Code System : UID (inherited from <a class="termref" href="#dtimpl-CD">CD</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Specifies the code system that defines the code.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>codeSystem</em> is represented by the XML attribute<em>codeSystem</em>
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-UID">UID</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-PQR.codeSystemName"></a>2.29.4 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Code System Name : <a class="termref" href="#dtimpl-ST">ST</a> (inherited from <a class="termref" href="#dtimpl-CD">CD</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A common name of the coding system.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>codeSystemName</em> is represented by the XML attribute<em>codeSystem</em>
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-ST">ST</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-PQR.codeSystemVersion"></a>2.29.5 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Code System Version : <a class="termref" href="#dtimpl-ST">ST</a> (inherited from <a class="termref" href="#dtimpl-CD">CD</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  If applicable, a version descriptor defined
                  specifically for the given code system.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>codeSystemVersion</em> is represented by the XML attribute<em>codeSystemVersion</em>
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-ST">ST</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-PQR.displayName"></a>2.29.6 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Display Name : <a class="termref" href="#dtimpl-ST">ST</a> (inherited from <a class="termref" href="#dtimpl-CD">CD</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A name or title for the code, under which the sending
                  system shows the code value to its users.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>displayName</em> is represented by the XML attribute<em>displayName</em>
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-ST">ST</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-PQR.originalText"></a>2.29.7 
               </h4>
            </td>
            <td class="body_col">
               <h4><a name=""></a>Original Text : <a class="termref" href="#dtimpl-ED">ED</a> (inherited from <a class="termref" href="#dtimpl-CD">CD</a>)
               </h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The text or phrase used as the basis for the coding.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>originalText</em> is represented by the XML element<em>originalText</em>
                  which, if present, must be a valid <a class="termref" href="#dtimpl-ED">ED</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="PQR-examples"></a>2.29.8 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  		See the example using <a class="termref" href="#comp-PQ.translation">PQ.translation</a> in
                  		<a href="#PQ-examples">Examples
                     			(&sect;
                     			2.28.4 )</a>.
                  	
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-MO"></a>2.30 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="MO"></a>Monetary Amount (MO) specializes <a class="termref" href="#dtimpl-QTY">QTY</a></h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A monetary amount is a quantity expressing the amount of
                  money in some currency. Currencies are the units in which
                  monetary amounts are denominated in different economic
                  regions. While the monetary amount is a single kind of
                  quantity (money) the exchange rates between the different
                  units are variable.  This is the principle difference
                  between physical quantity and monetary amounts, and the
                  reason why currency units are not physical units.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-MO-comp-summary">&nbsp;</a>
                     			Table
                     			37: Components of
                     Monetary Amount
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>value</td>
                        <td>REAL</td>
                        <td>
                           The magnitude of the monetary amount in terms of the
                           currency unit.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>currency</td>
                        <td>CS</td>
                        <td>
                           The currency unit as defined in ISO 4217.
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>MO</em> is represented by an XML element whose
                  name is determined by the context in which it is used.
                  The element has attributes as described in the template
                  and the sub-sections below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 27</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type MO --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   value = REAL
   currency = CS
   /&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-MO.value"></a>2.30.1 
               </h4>
            </td>
            <td class="body_col">
               <h4>Value : <a class="termref" href="#dtimpl-REAL">REAL</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The magnitude of the monetary amount in terms of the
                  currency unit.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>value</em> is represented by the XML attribute<em>value</em>
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-REAL">REAL</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-MO.currency"></a>2.30.2 
               </h4>
            </td>
            <td class="body_col">
               <h4>Currency : <a class="termref" href="#dtimpl-CS">CS</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The currency unit as defined in ISO 4217.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="domain-Currency">&nbsp;</a>
                     			Table
                     			38: Domain Currency
                  </caption>
                  <thead>
                     <tr>
                        <th>code</th>
                        <th>name</th>
                        <th>definition</th>
                     </tr>
                  </thead>
                  <tr>
                     <td>ARS</td>
                     <td>Argentine Peso</td>
                     <td>Argentine Peso, monetary currency of Argentina</td>
                  </tr>
                  <tr>
                     <td>AUD</td>
                     <td>Australian Dollar</td>
                     <td>Australian Dollar, monetary currency of Australia</td>
                  </tr>
                  <tr>
                     <td>BRL</td>
                     <td>Brazilian Real</td>
                     <td>Brazilian Real, monetary currency of Brazil</td>
                  </tr>
                  <tr>
                     <td>CAD</td>
                     <td>Canadian Dollar</td>
                     <td>Canadian Dollar, monetary currency of Canada</td>
                  </tr>
                  <tr>
                     <td>CHF</td>
                     <td>Swiss Franc</td>
                     <td>Swiss Franc, monetary currency of Switzerland</td>
                  </tr>
                  <tr>
                     <td>CLF</td>
                     <td>Unidades de Formento</td>
                     <td>Unidades de Formento, monetary currency of Chile</td>
                  </tr>
                  <tr>
                     <td>CNY</td>
                     <td>Yuan Renminbi</td>
                     <td>Yuan Renminbi, monetary currency of China</td>
                  </tr>
                  <tr>
                     <td>DEM</td>
                     <td>Deutsche Mark</td>
                     <td>Deutsche Mark, monetary currency of Germany</td>
                  </tr>
                  <tr>
                     <td>ESP</td>
                     <td>Spanish Peseta</td>
                     <td>Spanish Peseta, monetary currency of Spain</td>
                  </tr>
                  <tr>
                     <td>EUR</td>
                     <td>Euro</td>
                     <td>Euro, monetary currency of European Union</td>
                  </tr>
                  <tr>
                     <td>FIM</td>
                     <td>Markka</td>
                     <td>Markka, monetary currency of Finland</td>
                  </tr>
                  <tr>
                     <td>FRF</td>
                     <td>French Franc</td>
                     <td>French Franc, monetary currency of France</td>
                  </tr>
                  <tr>
                     <td>GBP</td>
                     <td>Pound Sterling</td>
                     <td>Pound Sterling, monetary currency of United Kingdom</td>
                  </tr>
                  <tr>
                     <td>ILS</td>
                     <td>Shekel</td>
                     <td>Shekel, monetary currency of Israel</td>
                  </tr>
                  <tr>
                     <td>INR</td>
                     <td>Indian Rupee</td>
                     <td>Indian Rupee, monetary currency of India</td>
                  </tr>
                  <tr>
                     <td>JPY</td>
                     <td>Yen</td>
                     <td>Yen, monetary currency of Japan</td>
                  </tr>
                  <tr>
                     <td>KRW</td>
                     <td>Won</td>
                     <td>Won, monetary currency of Korea (South)</td>
                  </tr>
                  <tr>
                     <td>MXN</td>
                     <td>Mexican Nuevo Peso</td>
                     <td>Mexican Nuevo Peso, monetary currency of Mexico</td>
                  </tr>
                  <tr>
                     <td>NLG</td>
                     <td>Netherlands Guilder</td>
                     <td>Netherlands Guilder, monetary currency of Netherlands</td>
                  </tr>
                  <tr>
                     <td>NZD</td>
                     <td>New Zealand Dollar</td>
                     <td>New Zealand Dollar, monetary currency of New Zealand</td>
                  </tr>
                  <tr>
                     <td>PHP</td>
                     <td>Philippine Peso</td>
                     <td>Philippine Peso, monetary currency of Philippines</td>
                  </tr>
                  <tr>
                     <td>RUR</td>
                     <td>Russian Ruble</td>
                     <td>Russian Ruble, monetary currency of Russian Federation</td>
                  </tr>
                  <tr>
                     <td>THB</td>
                     <td>Baht</td>
                     <td>Baht, monetary currency of Thailand</td>
                  </tr>
                  <tr>
                     <td>TRL</td>
                     <td>Lira</td>
                     <td>Lira, monetary currency of Turkey</td>
                  </tr>
                  <tr>
                     <td>TWD</td>
                     <td>Taiwan Dollar</td>
                     <td>Taiwan Dollar, monetary currency of Taiwan</td>
                  </tr>
                  <tr>
                     <td>USD</td>
                     <td>US Dollar</td>
                     <td>US Dollar, monetary currency of United States</td>
                  </tr>
                  <tr>
                     <td>ZAR</td>
                     <td>Rand</td>
                     <td>Rand, monetary currency of South Africa</td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  This table only shows a representative subset of the
                  codes defined by ISO 4217. All codes from ISO 4127 are 
                  valid for this attribute.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>currency</em> is represented by the XML attribute<em>value</em>
                  whose value, if present, must be a valid currency code
                  as defined by ISO 4217.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="MO-examples"></a>2.30.3 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  This example shows an amount of 10 Euros.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 31</caption>
                  <tr>
                     <td class="example"><pre>
&lt;amt value='10' currency='EUR'/&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-RTO"></a>2.31 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="RTO"></a>Ratio (RTO) specializes <a class="termref" href="#dtimpl-QTY">QTY</a></h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A quantity constructed as the quotient of a numerator
                  quantity divided by a denominator quantity. Common
                  factors in the numerator and denominator are not
                  automatically cancelled out.  <em>RTO</em> supports titers
                  (e.g., "1:128") and other quantities produced by
                  laboratories that truly represent ratios. Ratios are
                  not simply "structured numerics", particularly blood
                  pressure measurements (e.g. "120/60") are not ratios.
                  In many cases <a class="termref" href="#dtimpl-REAL">REAL</a> should be used instead
                  of <em>RTO</em>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <blockquote><b>NOTE: </b> 
                  This data type is not defined to generally represent
                  rational numbers. It is used only if common factors in
                  numerator and denominator are not supposed to cancel out.
                  This is only rarely the case. For observation values,
                  ratios occur almost exclusively with titers.
                  
               </blockquote>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-RTO-comp-summary">&nbsp;</a>
                     			Table
                     			39: Components of
                     Ratio
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>numerator</td>
                        <td>QTY</td>
                        <td>
                           The quantity that is being divided in the ratio.  The
                           default is the integer number <em>1</em> (one).
                           
                        </td>
                     </tr>
                     <tr>
                        <td>denominator</td>
                        <td>QTY</td>
                        <td>
                           The quantity that devides the numerator in the ratio.
                           The default is the integer number <em>1</em> (one).
                           The denominator must not be zero.
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The default value for both numerator and denominator is
                  the integer number <em>1</em> (one.) The denominator
                  may not be zero.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <blockquote><b>NOTE: </b>
                  This data type is defined as a generic data type but
                  discussed in the context of the other quantity-related
                  data types. The reason for defining <em>RTO</em> as a generic
                  data type is so that it can be constrained precisely
                  as to what the numerator and denominator types should be.
                  
               </blockquote>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>RTO</em> is represented by an XML element whose
                  name is determined by the context in which it is used.
                  The element has attributes as described in the template
                  and the sub-sections below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 28</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type RTO --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   &gt;
   <em>Content</em>: ( numerator, denominator )
&lt;/x&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Both numerator and denominator are required for a ratio
                  or else it has a NULL value. (Note that both numerator
                  and denominator have <em>1</em> (one) as their
                  default.)
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  XML instances must use the
                  <a href="http://www.w3.org/TR/xmlschema-1/#xsi_type" target="schema-rec">xsi:type schema type assertion</a>
                  mechanism to specify the particular restriction of <a class="termref" href="#dtimpl-QTY">QTY</a>
                  being used for numerator and denominator respectively.
                  The types may be asserted on the numerator or denominator
                  directly (as in <a href="#rto1">Example&nbsp;32</a> and <a href="#rto3">Example&nbsp;34</a>),
                  or the combined type may be asserted on the element
                  representing the <em>RTO</em> value (as in <a href="#rto2">Example&nbsp;33</a>).
                  In the later case, the type name to be asserted follows
                  the rules described in
                  <a href="#Use-of-attributes-from-XML-specifications">Use of attributes from XML specifications
                     			(&sect;
                     			1.4 )</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-RTO.numerator"></a>2.31.1 
               </h4>
            </td>
            <td class="body_col">
               <h4>Numerator : <a class="termref" href="#dtimpl-QTY">QTY</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The quantity that is being divided in the ratio.  The
                  default is the integer number <em>1</em> (one).
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>numerator</em> is represented by the
                  XML element<em>numerator</em> which, if present, must
                  be valid instance of a descendant of
                  <a class="termref" href="#dtimpl-QTY">QTY</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-RTO.denominator"></a>2.31.2 
               </h4>
            </td>
            <td class="body_col">
               <h4>Denominator : <a class="termref" href="#dtimpl-QTY">QTY</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The quantity that devides the numerator in the ratio.
                  The default is the integer number <em>1</em> (one).
                  The denominator must not be zero.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>denominator</em> is represented by the
                  XML element<em>denominator</em> which, if present,
                  must be valid instance of a descendant
                  of <a class="termref" href="#dtimpl-QTY">QTY</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="RTO-examples"></a>2.31.3 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The first example shows a ratio of <a class="termref" href="#dtimpl-INT">INT</a>s, where the
                  types of the <a class="termref" href="#comp-RTO.numerator">numerator</a> and
                  <a class="termref" href="#comp-RTO.demoninator">demoninator</a> are asserted
                  individually.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" id="rto1">
                  <caption>Example 32</caption>
                  <tr>
                     <td class="example"><pre>
&lt;unitQuanity&gt;
   &lt;numerator value='1' xsi:type='INT'/&gt;
   &lt;denominator value='64' xsi:type='INT'/&gt;
&lt;/unitQuanity&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The second example shows a ratio of <a class="termref" href="#dtimpl-MO">MO</a>
                  and <a class="termref" href="#dtimpl-PQ">PQ</a> where the
                  types of the <a class="termref" href="#comp-RTO.numerator">numerator</a> and
                  <a class="termref" href="#comp-RTO.demoninator">demoninator</a> are asserted on
                  the element representing the <em>RTO</em> value.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" id="rto2">
                  <caption>Example 33</caption>
                  <tr>
                     <td class="example"><pre>
&lt;unitPriceAmount xsi:type='RTO_MO_PQ'&gt;
   &lt;numerator value='1.15' currency='USD'/&gt;
   &lt;denominator value='1' unit='[gal_us]'/&gt;
&lt;/unitPriceAmount&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The final example shows a ratio of <a class="termref" href="#dtimpl-PQ">PQ</a>s, where the
                  types of the <a class="termref" href="#comp-RTO.numerator">numerator</a> and
                  <a class="termref" href="#comp-RTO.demoninator">demoninator</a> are asserted
                  individually.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" id="rto3">
                  <caption>Example 34</caption>
                  <tr>
                     <td class="example"><pre>
&lt;maxDoseQuantity&gt;
   &lt;numerator xsi:type='PQ' value='25' unit='mg'/&gt;
   &lt;denominator xsi:type='PQ' value='5' unit='mL'/&gt;
&lt;/maxDoseQuantity&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-TS"></a>2.32 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="TS"></a>Point in Time (TS) specializes <a class="termref" href="#dtimpl-QTY">QTY</a></h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A quantity specifying a point on the axis of natural time.
                  A point in time is most often represented as a calendar
                  expression.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>TS</em> is represented by an XML element
                  whose name is determined by the context in which it
                  is used. The element has attributes as described in
                  the template below. The format of the value attribute
                  is described below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 29</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type TS --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   value = ST
   /&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  XML instances may carry either a nullFlavor or a value,
                  but not both.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The value of a point in time is represented using the
                  ISO 8601 compliant form traditionally in use with HL7.
                  This is the form that has no decorating dashes, colons
                  and no "T" between the date and time. In short, the
                  syntax is "YYYYMMDDHHMMSS.UUUU[+|-ZZzz]" where digits
                  can be omitted from the right side to express less precision.
                  Common forms are "YYYYMMDD" and "YYYYMMDDHHMM", but the
                  ability to truncate on the right side is not limited to
                  these two variants. See the Data Types Abstract
                  Specification for detail.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <blockquote><b>NOTE: </b>
                  This is not the W3C Schema form for dateTime. The
                  W3C Schema time data types do not lend themselves
                  as well to representing the varying precision as
                  well as the simpler ISO 8601 variant that is
                  well established in HL7.
                  
               </blockquote>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="TS-examples"></a>2.32.1 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  This example shows April 7, 2000.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 35</caption>
                  <tr>
                     <td class="example"><pre>
&lt;effectiveTime value="20000407"/&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The next example shows 12:42 pm (in the time zone that is 8 hours
                  before UTC) on September 21, 2005.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 36</caption>
                  <tr>
                     <td class="example"><pre>
&lt;effectiveTime value="200509211242-08"/&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <!--divN/head-->
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h2><a name="generics"></a>3 
               </h2>
            </td>
            <td class="body_col">
               <h2>Generic Data Types</h2>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The Data Types Abstract Specification defines generic
                  types, also called "parameterized types" (UML), "generics"
                  (ADA) or "templates" (C++). Generic types are incomplete
                  types with parameters such that they define actual types
                  (sometimes called "instantiated" types) when their parameters
                  are specified. For example, a <a class="termref" href="#dtimpl-LIST">LIST</a> is a generic
                  sequence of any values of a parameter type T. Given this
                  generic type we can specify specific types such as
                  <a class="termref" href="#dtimpl-LIST">LIST</a>&lt;<a class="termref" href="#dtimpl-CE">CE</a>&gt; as sequences of codes or
                  <a class="termref" href="#dtimpl-LIST">LIST</a>&lt;<a class="termref" href="#dtimpl-PQ">PQ</a>&gt; for a
                  sequences of physical quantities.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The Data Types Abstract Specification specifies two different
                  kinds of generic types, "generic collections" and "generic
                  type extensions". Generic collections specify sets, sequences
                  or other groups of data values. Generic type extensions provide
                  extensions to normal types that are of general use, such as a
                  valid-time for a "history item" or a probability for an
                  "uncertain value".
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  In this XML specification, however, we will present these two
                  kinds of types together. The reason is that enumerated
                  collection types do not exist in the common use of XML. Instead
                  it is common practice in XML to represent enumerated collections
                  as a sequence of XML elements with the same name (repeated
                  element). Therefore we define all such enumerated collection
                  types as generic type extensions of their element type. For
                  example, instead of having an XML element that stands for a
                  whole <a class="termref" href="#dtimpl-BAG">BAG</a>, we have generic type
                  extension for bag-item (<a class="termref" href="#dtimpl-BXIT">BXIT</a>) so that
                  the XML-element of type <a class="termref" href="#dtimpl-BAG">BAG</a> is defined
                  in the schema as a bag-item that can repeat.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-SET"></a>3.1 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="SET"></a>Set (SET)
               </h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A value that contains other distinct values in no particular order.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Exceptional values (NULL-values) can not be elements
                  of a set.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The empty set is a set without any elements. The empty set
                  is a proper set value, not an exceptional value (NULL-value).
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>SET</em> is represented by both Element
                  and Attribute forms. In the Element form, <em>SET</em> is
                  represented by a sequence of XML elements, each of whose
                  name is determined by the context in which it is used.
                  The elements are of type T or <a class="termref" href="#dtimpl-SXCM">SXCM</a>,
                  and have attributes and child elements as described for the
                  data type T and also the attributes described below for
                  <a class="termref" href="#dtimpl-SXCM">SXCM</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The Attribute form of <em>SET</em> is used when properties
                  of other data types have type <em>SET</em> and T also has
                  an Attribute form with no whitespace content. The name
                  of the attribute is determined by the context in which it
                  is used. The attribute value is a series of values of type
                  T separated by whitespace.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="SET-examples"></a>3.1.1 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The first example shows an Act with a set of id's.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 37</caption>
                  <tr>
                     <td class="example"><pre>
&lt;act&gt;
   &lt;id root='2.16.840.1.113883.19' extension='123A45'/&gt;
   &lt;id root='343EA54F-D0E0-CE95-56C7-23108D6E25B8' extension='N8718349'/&gt;
   ...
&lt;/act&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The next example shows an Act with a set of reasonCode's.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 38</caption>
                  <tr>
                     <td class="example"><pre>
&lt;act&gt;
   ...
   &lt;reasonCode code='PHY' codeSystem='2.16.840.1.113883.19.5.8'
      codeSystemName='ActReason' displayName='Physician request'/&gt;
   &lt;reasonCode code='MEDNEC' codeSystem='2.16.840.1.113883.19.5.8'
      codeSystemName='ActReason' displayName='Medical Necessity'/&gt;
   ...
&lt;/act&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The final example shows an Act with an effectiveTime that uses
                  the <em>intersect</em>&nbsp;<a class="termref" href="#comp-SXCM.operator">SXCM.operator</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 39</caption>
                  <tr>
                     <td class="example"><pre>
&lt;act&gt;
   ...
   &lt;effectiveTime xsi:type='IVL_TS'&gt;
      &lt;low value='20040204'/&gt;
   &lt;/effectiveTime&gt;
   &lt;effectiveTime xsi:type='PIVL_TS' operator='A'&gt;
      &lt;phase&gt;
         &lt;center value='200402041200'/&gt;
      &lt;/phase&gt;
      &lt;period value='1' unit='d'/&gt;
   &lt;/effectiveTime&gt;
   ...
&lt;/act&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-SXCM"></a>3.2 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="SXCM"></a>Set Component (SXCM)
               </h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  An ITS-defined generic type extension for the base data
                  type of a set, representing a component of a general set
                  over a discrete or continuous value domain. Its use is
                  mainly for continuous value domains. Discrete (enumerable)
                  set components are the individual elements of the base
                  data type.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-SXCM-comp-summary">&nbsp;</a>
                     			Table
                     			40: Components of
                     Set Component
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>operator</td>
                        <td>CS</td>
                        <td>
                           A code specifying whether the set component is included
                           (union) or excluded (set-difference) from the set, or
                           other set operations with the current set component and
                           the set as constructed from the representation stream
                           up to the current point.
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>SXCM</em> is represented by an XML element
                  whose name is determined by the context in
                  which it is used. <em>SXCM</em> has all the
                  attributes and child elements described for the Element
                  form of T and adds an XML attribute<em>operator</em>
                  as described in the template and sub-sections below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 30</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type SXCM --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   <em>{any attributes from T}</em>
   operator = (I | E | A | H | P) : I
   &gt;
   <em>Content</em>: ( <em>{any elements from T}</em> )
&lt;/x&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-SXCM.operator"></a>3.2.1 
               </h4>
            </td>
            <td class="body_col">
               <h4>Operator : <a class="termref" href="#dtimpl-CS">CS</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A code specifying whether the set component is included
                  (union) or excluded (set-difference) from the set, or
                  other set operations with the current set component and
                  the set as constructed from the representation stream
                  up to the current point.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="domain-SetOperator">&nbsp;</a>
                     			Table
                     			41: Domain SetOperator
                  </caption>
                  <thead>
                     <tr>
                        <th>code</th>
                        <th>name</th>
                        <th>definition</th>
                     </tr>
                  </thead>
                  <tr>
                     <td>A</td>
                     <td>intersect</td>
                     <td>Form the intersection with the value.</td>
                  </tr>
                  <tr>
                     <td>E</td>
                     <td>exclude</td>
                     <td>Form the set-difference with this value, i.e., exclude this element or set from the resulting set.</td>
                  </tr>
                  <tr>
                     <td>H</td>
                     <td>convex hull</td>
                     <td>Form the convex hull with the value. The convex hull is defined over ordered domains and is the smallest contiguous superset
                        (interval) that of all the operand sets.
                     </td>
                  </tr>
                  <tr>
                     <td>I</td>
                     <td>include</td>
                     <td>Form the union with this value, i.e., include this element or set in the resulting set.</td>
                  </tr>
                  <tr>
                     <td>P</td>
                     <td>periodic hull</td>
                     <td>Form the periodic hull with the value. The periodic hull is defined over ordered domains and is the periodic set that contains
                        all contiguous supersets of pairs of intervals generated by the operand periodic intervals.
                     </td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>operator</em> is represented as the
                  XML attribute<em>operator</em>, whose value, if present,
                  must be a valid code from the SetOperator domain
                  (<a href="#domain-SetOperator">Table
                     			41</a>). The default
                  value is <em>I</em>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="SXCM-examples"></a>3.2.2 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  		See the examples using <a class="termref" href="#comp-SXCM.operator">operator</a> in
                  		<a href="#SET-examples">Examples
                     			(&sect;
                     			3.1.1 )</a>.
                  	
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-LIST"></a>3.3 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="LIST"></a>Sequence (LIST)
               </h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A value that contains other discrete values in a
                  defined sequence.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>LIST</em> is represented by both Element
                  and Attribute forms. In the Element form, the list is
                  represented by a sequence of XML elements, each of whose
                  name is determined by the context in which it is used.
                  The elements have attributes and element children as
                  described for the data type T.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The Attribute form of <em>LIST</em> is used when properties
                  of other data types have type <em>LIST</em> and T also has
                  an Attribute form which does not allow whitespace. The
                  name of the attribute is determined by the context in
                  which it is used. The attribute value is a series of
                  values of type T separated by whitespace.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="LIST-examples"></a>3.3.1 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  		The first example shows a list of templateId's.
                  	
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 40</caption>
                  <tr>
                     <td class="example"><pre>
&lt;act&gt;
   ...
   &lt;templateId root='2.16.840.1.113883.19' extension='Acme Template 1'/&gt;
   &lt;templateId root='2.16.840.1.113883.19' extension='Acme Template 2'/&gt;
   ...
&lt;/act&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  		The second example shows a regionOfInterest whose
                  		value is a list of <a class="termref" href="#dtimpl-INT">INT</a> (that
                  		specifies the coordinates of the endpoints of the
                  		major and minor axes.
                  	
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 41</caption>
                  <tr>
                     <td class="example"><pre>
&lt;regionOfInterest classCode='ROIOVL'&gt;
   &lt;code code='ELLIPSE'/&gt;
   &lt;value value='3'/&gt;
   &lt;value value='1'/&gt;
   &lt;value value='3'/&gt;
   &lt;value value='7'/&gt;
   &lt;value value='2'/&gt;
   &lt;value value='4'/&gt;
   &lt;value value='4'/&gt;
   &lt;value value='4'/&gt;
&lt;/regionOfInterest&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-GLIST"></a>3.4 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="GLIST"></a>Generated Sequence (GLIST)
               </h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A periodic or monotone sequence of values generated
                  from a few parameters, rather than being enumerated.
                  Used to specify regular sampling points for biosignals.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-GLIST-comp-summary">&nbsp;</a>
                     			Table
                     			42: Components of
                     Generated Sequence
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>head</td>
                        <td>T</td>
                        <td>
                           This is the start-value of the generated list. 
                           
                        </td>
                     </tr>
                     <tr>
                        <td>increment</td>
                        <td>T.diff</td>
                        <td>
                           The difference between one value and its previous
                           different value. For example, to generate the sequence
                           (1; 4; 7; 10; 13; ...) the increment is 3; likewise to
                           generate the sequence (1; 1; 4; 4; 7; 7; 10; 10; 13;
                           13; ...) the increment is also 3.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>period</td>
                        <td>INT</td>
                        <td>
                           If non-NULL, specifies that the sequence alternates,
                           i.e., after this many increments, the sequence item
                           values roll over to start from the initial sequence
                           item value. For example, the sequence (1; 2; 3; 1; 2;
                           3; 1; 2; 3; ...) has period 3; also the sequence
                           (1; 1; 2; 2; 3; 3; 1; 1; 2; 2; 3; 3; ...) has period
                           3 too.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>denominator</td>
                        <td>INT</td>
                        <td>
                           The integer by which the index for the sequence is
                           divided, effectively the number of times the sequence
                           generates the same sequence item value before
                           incrementing to the next sequence item value. For
                           example, to generate the sequence (1; 1; 1; 2; 2; 2; 3; 3;
                           3; ...)  the denominator is 3.
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The item at a certain index in the list is calculated
                  by performing an integer division on the index (<em>i</em>)
                  with the <a class="termref" href="#comp-GLIST.denominator">denominator</a>
                  (<em>d</em>) and then take that value's remainder with
                  the <a class="termref" href="#comp-GLIST.period">period</a> (<em>p</em>).
                  Multiply this value with the <a class="termref" href="#comp-GLIST.increment">increment</a>
                  (<em>&#916;x</em>) and add to the <a class="termref" href="#comp-GLIST.head">head</a>
                  (<em>x</em><sub>0</sub>.)
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>GLIST</em> is represented in Element form
                  as described in the template and sub-sections below. The
                  name of the element is determined by the context in which
                  it is used.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 31</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type GLIST --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   period = INT
   denominator = INT
   &gt;
   <em>Content</em>: ( head, increment )
&lt;/x&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-GLIST.head"></a>3.4.1 
               </h4>
            </td>
            <td class="body_col">
               <h4>Head : T</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  This is the start-value of the generated list. 
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>head</em> is represented as XML element<em>head</em>
                  which, if present, must be a valid T.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-GLIST.increment"></a>3.4.2 
               </h4>
            </td>
            <td class="body_col">
               <h4>Increment : T.diff</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The difference between one value and its previous
                  different value. For example, to generate the sequence
                  (1; 4; 7; 10; 13; ...) the increment is 3; likewise to
                  generate the sequence (1; 1; 4; 4; 7; 7; 10; 10; 13;
                  13; ...) the increment is also 3.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>increment</em> is represented as the
                  XML element<em>increment</em> which, if present, must
                  be a valid T.diff.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-GLIST.period"></a>3.4.3 
               </h4>
            </td>
            <td class="body_col">
               <h4>Period Step Count : <a class="termref" href="#dtimpl-INT">INT</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  If non-NULL, specifies that the sequence alternates,
                  i.e., after this many increments, the sequence item
                  values roll over to start from the initial sequence
                  item value. For example, the sequence (1; 2; 3; 1; 2;
                  3; 1; 2; 3; ...) has period 3; also the sequence
                  (1; 1; 2; 2; 3; 3; 1; 1; 2; 2; 3; 3; ...) has period
                  3 too.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>period</em> is represented as the XML attribute<em>period</em>,
                  whose value, if present, must be a valid
                  <a class="termref" href="#dtimpl-INT">INT</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-GLIST.denominator"></a>3.4.4 
               </h4>
            </td>
            <td class="body_col">
               <h4>Denominator : <a class="termref" href="#dtimpl-INT">INT</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The integer by which the index for the sequence is
                  divided, effectively the number of times the sequence
                  generates the same sequence item value before
                  incrementing to the next sequence item value. For
                  example, to generate the sequence (1; 1; 1; 2; 2; 2; 3; 3;
                  3; ...)  the denominator is 3.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>denominator</em> is represented as the XML attribute<em>denominator</em>,
                  whose value, if present, must be a valid
                  <a class="termref" href="#dtimpl-INT">INT</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="GLIST-examples"></a>3.4.5 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The first example shows the time base for an EKG strip written
                  at October 29, 2002 at 16:51:13 at a per 2 ms sampling rate.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 42</caption>
                  <tr>
                     <td class="example"><pre>
&lt;value xsi:type='GLIST_TS'&gt;
   &lt;head value='20021029165113'/&gt;
   &lt;increment value='2' unit='ms'/&gt;
&lt;/value&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The second example shows a RADAR scan that increments in 2
                  degrees and has a period of 360 degrees, i.e., of 180 increments.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 43</caption>
                  <tr>
                     <td class="example"><pre>
&lt;value xsi:type='GLIST_PQ' period='180'&gt;
   &lt;head value='0'/&gt;
   &lt;increment value='2' unit='deg'/&gt;
&lt;/value&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-SLIST"></a>3.5 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="SLIST"></a>Sampled Sequence (SLIST)
               </h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A sequence of sampled values scaled and translated from a
                  list of integer values.  Used to specify sampled biosignals.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-SLIST-comp-summary">&nbsp;</a>
                     			Table
                     			43: Components of
                     Sampled Sequence
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>origin</td>
                        <td>T</td>
                        <td>
                           The origin of the list item value scale, i.e., the
                           physical quantity that a zero-digit in the sequence
                           would represent.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>scale</td>
                        <td>T.diff</td>
                        <td>
                           A ratio-scale quantity that is factored out of the
                           digit sequence.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>digits</td>
                        <td>LIST&lt;INT&gt;</td>
                        <td>
                           A sequence of raw digits for the sample values. This is
                           typically the raw output of an A/D converter.
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The item at a certain index (<em>i</em>) in the list
                  is calculated by multiplying the item at the same index
                  in the <a class="termref" href="#comp-SLIST.digits">digits</a> sequence
                  (<em>d</em><sub><em>i</em></sub>) with the
                  <a class="termref" href="#comp-SLIST.scale">scale</a> (<em>s</em>)
                  and then add that value to the <a class="termref" href="#comp-SLIST.origin">origin</a>
                  (<em>x</em><sub><em>o</em></sub>).
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>SLIST</em> is represented in Element
                  form as described in the template and sub-sections
                  below. The name of the element is determined by the
                  context in which it is used.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 32</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type SLIST --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   &gt;
   <em>Content</em>: ( origin, scale, digits )
&lt;/x&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-SLIST.origin"></a>3.5.1 
               </h4>
            </td>
            <td class="body_col">
               <h4>Origin : T</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The origin of the list item value scale, i.e., the
                  physical quantity that a zero-digit in the sequence
                  would represent.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>origin</em> is represented as the XML element<em>origin</em>
                  which, if present, must be a valid T.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-SLIST.scale"></a>3.5.2 
               </h4>
            </td>
            <td class="body_col">
               <h4>Scale Factor : T.diff</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A ratio-scale quantity that is factored out of the
                  digit sequence.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>scale</em> is represented as the XML element<em>scale</em>
                  which, if present, must be a valid T.diff.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-SLIST.digits"></a>3.5.3 
               </h4>
            </td>
            <td class="body_col">
               <h4>Sampled Digits : LIST&lt;INT&gt;</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A sequence of raw digits for the sample values. This is
                  typically the raw output of an A/D converter.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>digits</em> is represented as the XML element<em>digits</em>
                  which, if present, is a whitespace separated list of
                  the Attribute form of <a class="termref" href="#dtimpl-INT">INT</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <blockquote><b>NOTE: </b>
                  The representation of this property does not match
                  any of the allowed representations for
                  <a class="termref" href="#dtimpl-LIST">LIST</a>&lt;<a class="termref" href="#dtimpl-INT">INT</a>&gt;.
                  
               </blockquote>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="SLIST-examples"></a>3.5.4 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  This example shows Lead II of an EKG tracing, with origin calibrated at
                  0 &#956;V and with a scale factor of 2.5 &#956;V.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 44</caption>
                  <tr>
                     <td class="example"><pre>
&lt;value xsi:type='SLIST_PQ'&gt;
   &lt;origin value='0' unit='uV'/&gt;
   &lt;scale value='2.5' unit='uV'/&gt;
   &lt;digits&gt;-4 -13 -18 -18 -18 -17 -16 -16 -16 -16 -16 -17 -18 -18 -18
      -17 -16 -16 -16 -15 -13 -11 -10 -10 -9 -6 -4 -5 -5 -3 -2 -2 -1 1 2 3 5
      7 8 9 10 11 12 13 15 17 19 21 23 25 27 29 30 30 31 34 37 40 43 45 46
      46 46 46 46 47 49 51 53 55 57 59 60 59 58 58 58 57 56 56 56 57 57 55
      53 50 47 45 74 51 38 33 31 28 25 21 16 14 15 13 9 7 4 1 -1 -3 -4 -6
      -10 -12 -13 -12 -12 -17 -18 -18 -18 -19 -20 -21 -20 -20 -20 -20 -20
      ...
      2 1 0 0 0 1 2 2 1 1 1 0 -1 0 1 1 1 1 2 1&lt;/digits&gt;
&lt;/value&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-BAG"></a>3.6 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="BAG"></a>Bag (BAG)
               </h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  An unordered collection of values, where each value can
                  be contained more than once in the bag.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>BAG</em> is represented by both Element
                  and Attribute forms. In the Element form, the bag is
                  represented by a sequence of XML elements, each of whose
                  name is determined by the context in which it is used.
                  The elements are of type T or <a class="termref" href="#dtimpl-BXIT">BXIT</a>,
                  and have attributes and child elements as described for
                  the data type T and may also the attributes described
                  below for <a class="termref" href="#dtimpl-BXIT">BXIT</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The Attribute form of <em>BAG</em> is used when properties
                  of other data types have type <em>BAG</em> and T also has
                  an Attribute form with no whitespace content. The name
                  of the attribute is determined by the context in which it
                  is used. The attribute value is a series of values of
                  type T separated by whitespace.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="BAG-examples"></a>3.6.1 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  		This example shows an Organization with multiple addresses.
                  	
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 45</caption>
                  <tr>
                     <td class="example"><pre>
&lt;organization&gt;
   ...
   &lt;addr use='DIR'&gt;123 Main St., Anytown, CA, US&lt;/addr&gt;
   &lt;addr use='PUB'&gt;456 Boradway St., Anytown, CA, US&lt;/addr&gt;
   ...
&lt;/organization&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-BXIT"></a>3.7 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="BXIT"></a>Bag Item (BXIT)
               </h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  An ITS-defined generic data type extension that
                  represents a collection of a certain number of identical
                  items in a bag.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-BXIT-comp-summary">&nbsp;</a>
                     			Table
                     			44: Components of
                     Bag Item
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>qty</td>
                        <td>INT</td>
                        <td>
                           The quantity in which the bag item occurs in its containing bag.
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>BXIT</em> allows a "compressed" representation of <a class="termref" href="#dtimpl-BAG">BAG</a>,
                  where the same bag items need not be represented repeatedly,
                  but can be quantified by a number. This representation of a
                  bag is useful if relatively few different items occur in
                  relatively large numbers, as it is the case in statistical
                  data collections.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>BXIT</em>, although it is fully consistent with the
                  Data Types Abstract Specification, is only defined in the ITS,
                  because it only specifies a certain form in which a bag of
                  values can be represented more efficiently without adding
                  any special semantics that was not already given in the
                  definition of the bag data type.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>BXIT</em> is represented by an XML element
                  whose name is determined by the context in which it is used.
                  <em>BXIT</em> type has all the attributes and child
                  elements described for the Element form of T and adds the
                  XML attribute<em>qty</em> as described in the template and
                  sub-sections below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 33</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type BXIT --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   <em>{any attributes from T}</em>
   qty = INT : 1
   &gt;
   <em>Content</em>: <em>{any elements from T}</em>
&lt;/x&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-BXIT.qty"></a>3.7.1 
               </h4>
            </td>
            <td class="body_col">
               <h4>Quantity : <a class="termref" href="#dtimpl-INT">INT</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The quantity in which the bag item occurs in its containing bag.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>qty</em> is represented as the XML attribute<em>qty</em>,
                  whose value, if present, must be a valid
                  <a class="termref" href="#dtimpl-INT">INT</a>.	The default value
                  is <em>1</em>, i.e., the qty attribute need not
                  be specified if items are not quantified but simply
                  repeated.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="BXIT-examples"></a>3.7.2 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  		See the examples in
                  		<a href="#BAG-examples">Examples
                     			(&sect;
                     			3.6.1 )</a>.
                  	
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-IVL"></a>3.8 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="IVL"></a>Interval (IVL) specializes <a class="termref" href="#dtimpl-SXCM">SXCM</a></h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A set of consecutive values of an ordered base data type.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Note that the interval boundaries must be of comparable
                  types. It makes no sense to specify the interval between
                  2 meters and 4 seconds.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-IVL-comp-summary">&nbsp;</a>
                     			Table
                     			45: Components of
                     Interval
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>low</td>
                        <td>IVXB</td>
                        <td>
                           The low limit of the interval.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>high</td>
                        <td>IVXB</td>
                        <td>
                           The high limit of the interval.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>center</td>
                        <td>T</td>
                        <td>
                           The arithmetic mean of the interval (low plus high
                           divided by 2). The purpose of distinguishing the center
                           as a semantic property is for conversions of intervals
                           from and to point values.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>width</td>
                        <td>T.diff</td>
                        <td>
                           The difference between high and low boundary. The
                           purpose of distinguishing a width property is to
                           handle all cases of incomplete information
                           symmetrically. In any interval representation only
                           two of the three properties high, low, and width need
                           to be stated and the third can be derived.
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  In any interval representation only two of the four
                  properties high, low, width and center need to be stated
                  and the other two can be derived. Incomplete intervals exist,
                  where only one property is valued, particularly, when no
                  boundary or center is known, the width may still be known.
                  For example, one knows that an activity takes about 30
                  minutes, but one may not yet know when that activity is
                  started.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>IVL</em> is represented by an XML element
                  whose name is determined by the context in which it is
                  used. <em>IVL</em> type has all the attributes and
                  child elements as described in the template and
                  sub-sections below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 34</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type IVL --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   operator = (I | E | A | H | P) : I
   &gt;
   <em>Content</em>: ( low, high, center, width )
&lt;/x&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  You can have any of these combinations of children:
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <ul style="margin-left:20px;">
                  <li>low</li>
                  <li>width</li>
                  <li>high</li>
                  <li>low, width</li>
                  <li>width, high</li>
                  <li>low, high</li>
                  <li>center</li>
                  <li>center, width</li>
               </ul>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-IVL.low"></a>3.8.1 
               </h4>
            </td>
            <td class="body_col">
               <h4>Low Boundary : <a class="termref" href="#dtimpl-IVXB">IVXB</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The low limit of the interval.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>low</em> is represented as the XML element<em>low</em>
                  which, if present, must be a valid
                  <a class="termref" href="#dtimpl-IVXB">IVXB</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-IVL.high"></a>3.8.2 
               </h4>
            </td>
            <td class="body_col">
               <h4>High Boundary : <a class="termref" href="#dtimpl-IVXB">IVXB</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The high limit of the interval.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>high</em> is represented as the XML element<em>high</em>
                  which, if present, must be a valid <a class="termref" href="#dtimpl-IVXB">IVXB</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-IVL.center"></a>3.8.3 
               </h4>
            </td>
            <td class="body_col">
               <h4>Center : T</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The arithmetic mean of the interval (low plus high
                  divided by 2). The purpose of distinguishing the center
                  as a semantic property is for conversions of intervals
                  from and to point values.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Note that a center doesn't always exist for every
                  interval. Notably intervals that are infinite on one
                  side do not have a center. Also intervals of discrete
                  base types with an even number of elements do not have
                  a center. If an interval is unknown on one (or both)
                  boundaries, the center can still be asserted. In fact,
                  the main use case for the center is to be asserted when
                  no boundary is known.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>center</em> is represented as the XML element<em>center</em>
                  which, if present, must be a valid T.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-IVL.width"></a>3.8.4 
               </h4>
            </td>
            <td class="body_col">
               <h4>Width : T.diff</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The difference between high and low boundary. The
                  purpose of distinguishing a width property is to
                  handle all cases of incomplete information
                  symmetrically. In any interval representation only
                  two of the three properties high, low, and width need
                  to be stated and the third can be derived.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  When both boundaries are known, width can be derived as
                  high minus low. When one boundary and the width is known,
                  the other boundary is also known. When no boundary is
                  known, the width may still be known. For example, one
                  knows that an activity takes about 30 minutes, but one
                  may not yet know when that activity is started.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Note that the data type of the width is not always the
                  same as for the boundaries. For ratio scale quantities
                  (<a class="termref" href="#dtimpl-REAL">REAL</a>, <a class="termref" href="#dtimpl-PQ">PQ</a>,
                  <a class="termref" href="#dtimpl-MO">MO</a>) it is the same. For difference scale
                  quantities (e.g., <a class="termref" href="#dtimpl-TS">TS</a>) is the data type of the difference
                  (e.g., <a class="termref" href="#dtimpl-PQ">PQ</a> in the dimension of time for
                  <a class="termref" href="#dtimpl-TS">TS</a>).
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>width</em> is represented as the XML element<em>width</em>
                  which, if present, must be a valid T.diff.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="IVL-examples"></a>3.8.5 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The first example shows a simple interval of <a class="termref" href="#dtimpl-INT">INT</a>
                  between 2 and 4.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 46</caption>
                  <tr>
                     <td class="example"><pre>
&lt;value xsi:type='IVL_INT'&gt;
   &lt;low value='2'/&gt;
   &lt;high value='4'/&gt;
&lt;/value&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The second example shows an interval of <a class="termref" href="#dtimpl-PQ">PQ</a>
                  between 2.8 meters, inclusive, and 4.6 meters, exclusive.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 47</caption>
                  <tr>
                     <td class="example"><pre>
&lt;offset&gt;
   &lt;low value='2.8' unit='m' inclusive='true'/&gt;
   &lt;high value='4.6' unit='m' inclusive='false'/&gt;
&lt;/offset&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Finally, the last example shows an interval of <a class="termref" href="#dtimpl-TS">TS</a>
                  on December 4, 2000, between 10:00 am and 10:30 am.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 48</caption>
                  <tr>
                     <td class="example"><pre>
&lt;effectiveTime&gt;
   &lt;low value='200012041000'/&gt;
   &lt;high value='200012041030'/&gt;
&lt;/effectiveTime&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-IVXB"></a>3.9 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="IVXB"></a>Interval Boundary (IVXB)
               </h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  An ITS-defined generic type extension representing the
                  boundary value for an interval.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-IVXB-comp-summary">&nbsp;</a>
                     			Table
                     			46: Components of
                     Interval Boundary
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>inclusive</td>
                        <td>BL</td>
                        <td>
                           Specifies whether the limit is included in the
                           interval (interval is closed) or excluded from the
                           interval (interval is open).
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  In any interval representation the low and high boundaries
                  may be either inclusive or exclusive. This generic extension
                  type adds the component <em>inclusive</em> to the
                  <a class="termref" href="#dtimpl-QTY">QTY</a> type T.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>IVXB</em> is represented by an XML element
                  whose name is determined by the context in
                  which it is used. <em>IVXB</em> has all the
                  attributes and child elements described for the Element
                  form of T and adds the <em>inclusive</em> attribute as
                  described in the template and sub-sections below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 35</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type IVXB - used internally within IVL --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   <em>{any attributes from T}</em>
   inclusive = (true | false) : true
   &gt;
   <em>Content</em>: ( <em>{any elements from T}</em> )
&lt;/x&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-IVXB.inclusive"></a>3.9.1 
               </h4>
            </td>
            <td class="body_col">
               <h4>Inclusive : <a class="termref" href="#dtimpl-BL">BL</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Specifies whether the limit is included in the
                  interval (interval is closed) or excluded from the
                  interval (interval is open).
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>inclusive</em> is represented as the XML attribute<em>inclusive</em>,
                  whose value, if present, must be either <em>true</em>
                  or <em>false</em>.	The default value is <em>true</em>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-HIST"></a>3.10 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="HIST"></a>History (HIST)
               </h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A set of data values that conform to the history item
                  (<a class="termref" href="#dtimpl-HXIT">HXIT</a>) type, (i.e., that have a valid-time
                  property). The history information is not limited to the
                  past; expected future values can also appear.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>HIST</em> is represented by a sequence of XML elements
                  whose name is determined by the context in which
                  it is used.   Each element is of type
                  <a class="termref" href="#dtimpl-HXIT">HXIT</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-HXIT"></a>3.11 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="HXIT"></a>History Item (HXIT)
               </h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A generic data type extension that tags a time range to
                  any data value of any data type.  The time range is the
                  time in which the information represented by the value
                  is (was) valid.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-HXIT-comp-summary">&nbsp;</a>
                     			Table
                     			47: Components of
                     History Item
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>validTime</td>
                        <td>IVL&lt;TS&gt;</td>
                        <td>
                           The time interval during which the given information
                           was, is, or is expected to be valid. The interval can
                           be open or closed, as well as infinite or undefined on
                           either side.
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  For example, a value of type <em>HXIT</em>&lt;<a class="termref" href="#dtimpl-CS">CS</a>&gt;
                  extended from <a class="termref" href="#dtimpl-CS">CS</a>
                  has all of the properties of the original
                  <a class="termref" href="#dtimpl-CS">CS</a> value, plus a time range
                  indicating when that code is or was valid.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Data types that already have a valid time range property
                  (i.e., <a class="termref" href="#dtimpl-EN">EN</a> and specializations)
                  obviously do not need these extensions. Their valid time
                  range property can be mapped to the valid time property
                  of the <em>HXIT</em>, in fact, those data types are considered
                  history items by themselves. For example, <a class="termref" href="#dtimpl-EN">EN</a>
                  is the same data type as <em>HXIT</em>&lt;<a class="termref" href="#dtimpl-EN">EN</a>&gt;.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>HXIT</em> is represented by an XML element
                  whose name is determined by the context in which
                  it is used. <em>HXIT</em> has all the attributes
                  and child elements described for the Element form of T
                  and adds the XML element<em>validTime</em> as described in the
                  template and sub-sections below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 36</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type HXIT --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   <em>{any attributes from T}</em>
   &gt;
   <em>Content</em>: ( <em>{any elements from T}</em>, validTime )
&lt;/x&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-HXIT.validTime"></a>3.11.1 
               </h4>
            </td>
            <td class="body_col">
               <h4>Valid Time : IVL&lt;TS&gt;</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The time interval during which the given information
                  was, is, or is expected to be valid. The interval can
                  be open or closed, as well as infinite or undefined on
                  either side.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>validTime</em> is represented as the XML element<em>validTime</em>
                  which, if present, must be a valid
                  <a class="termref" href="#dtimpl-IVL">IVL</a>&lt;<a class="termref" href="#dtimpl-TS">TS</a>&gt;.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-UVP"></a>3.12 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="UVP"></a>Uncertain Value - Probabilistic (UVP)
               </h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A generic data type extension used to specify a
                  probability expressing the information producer's belief
                  that the given value holds.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-UVP-comp-summary">&nbsp;</a>
                     			Table
                     			48: Components of
                     Uncertain Value - Probabilistic
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>probability</td>
                        <td>REAL</td>
                        <td>
                           The probability assigned to the value, a decimal number
                           between 0 (very uncertain) and 1 (certain).
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Probabilities are subjective and (as any data value)
                  must be interpreted in their individual context, for
                  example, when new information is found the probability
                  might change. Thus, for any message (document, or other
                  information representation) the information - and
                  particularly the probabilities - reflect what the
                  information producer believed was appropriate for the
                  purpose and at the time the message (document) was created.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  For example, at the beginning of the 2000 baseball season
                  (May), the Las Vegas odds makers may have given the New
                  York Yankees a probability of 1 in 10 (0.100) of winning
                  the World Series. At the time of this writing, the Yankees
                  and Mets have won their respective pennants, but the World
                  Series has yet to begin. The probability of the Yankees
                  winning the World Series is obviously significantly greater
                  at this point in time, perhaps 6 in 10 (0.600). The context,
                  and in particular the time of year, made all the difference
                  in the world.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Since probabilities are subjective measures of belief, they
                  can be stated without being "correct" or "incorrect" per se,
                  let alone "precise" or "imprecise". Notably, one does not
                  have to conduct experiments to measure a frequency of some
                  outcome in order to specify a probability. In fact, whenever
                  statements about individual people or events are made, it
                  is not possible to confirm such probabilities with
                  "frequentists" experiments.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Returning to our example, the Las Vegas odds makers can
                  not insist on the Yankees and Mets playing 1000 trial games
                  prior to the Series; even if they could, they would not
                  have the fervor of the real Series and therefore not be
                  accurate. Instead, the odds makers must derive the probability
                  from past history, player statistics, injuries, etc.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>UVP</em> is represented by an XML element
                  whose name is determined by the context in which it is
                  used. <em>UVP</em> has all the attributes and
                  child elements described for the Element form of T and
                  adds the XML attribute<em>probability</em> as described in
                  the template and sub-sections below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 37</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type UVP --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   <em>{any attributes from T}</em>
   probability = REAL
   &gt;
   <em>Content</em>: ( <em>{any elements from T}</em> )
&lt;/x&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-UVP.probability"></a>3.12.1 
               </h4>
            </td>
            <td class="body_col">
               <h4>Probability : <a class="termref" href="#dtimpl-REAL">REAL</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  The probability assigned to the value, a decimal number
                  between 0 (very uncertain) and 1 (certain).
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>probability</em> is represented as the XML attribute<em>probability</em>,
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-REAL">REAL</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-NPPD"></a>3.13 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="NPPD"></a>Non-Parametric Probability Distribution (NPPD)
               </h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A set of uncertain values with probabilities (also known
                  as a histogram).
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The easiest way to visualize this is a bar chart as
                  shown below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col"><br><img class="graphic" border="0" src="graphics/DT-NPPD-ex1.gif" alt="Example of a Histogram"><br>Example of a Histogram<br></td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  This example illustrates the probability of selected
                  major league baseball teams winning the World Series
                  (prior to the season start). Each team is mutually
                  exclusive, and were we to include all of the teams, the
                  sum of the probabilities would equal 1 (i.e., it is
                  certain that one of the teams will win).
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Semantically, a non-parametric probability distribution
                  contains <em>all</em> possible values and assigns
                  probabilities to each of them. Our example has left out
                  quite a few teams. The rules for this data type tell us
                  that the other teams would share the "leftover" probability
                  equally. The 8 teams in the example have a collective
                  probability of winning the World Series of 0.47. If there
                  were a total of 24 teams in the league, then 16 are not
                  shown. Each of these teams would be assigned a probability
                  of (1.00 - 0.47) / 16 = 0.033125.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>NPPD</em> is represented by a sequence of
                  XML elements, each of whose name is determined by the
                  context in which it is used. Each element is of type
                  <a class="termref" href="#dtimpl-UVP">UVP</a>.
                  
               </p>
            </td>
         </tr>
         <!--divN/head-->
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h2><a name="dtimpltiming"></a>4 
               </h2>
            </td>
            <td class="body_col">
               <h2>Timing Specification</h2>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The timing specification suite of data types is used to
                  specify the complex timing of events and actions such as those
                  that occur in order management and scheduling systems. It also
                  supports the cyclical validity patterns that may exist for
                  certain kinds of information, such as phone numbers (evening,
                  daytime), addresses (so called "snowbirds," residing closer
                  to the equator during winter and farther from the equator
                  during summer) and office hours.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The timing specification data types include point in time
                  (<a class="termref" href="#dtimpl-TS">TS</a>) and the interval of time
                  (<a class="termref" href="#dtimpl-IVL">IVL</a>&lt;<a class="termref" href="#dtimpl-T">T</a>&gt;)
                  and add types that are specifically suited to repeated schedules.
                  These additional types include periodic interval, event-related
                  periodic interval, and finally the general timing specification
                  types itself. All these timing types describe the time
                  distribution of repeating states or events.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-PIVL"></a>4.1 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="PIVL"></a>Periodic Interval of Time (PIVL) specializes <a class="termref" href="#dtimpl-SXCM">SXCM</a></h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  An interval of time that recurs periodically. Periodic
                  intervals have two properties, phase and period. The
                  phase specifies the "interval prototype" that is repeated
                  every period.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-PIVL-comp-summary">&nbsp;</a>
                     			Table
                     			49: Components of
                     Periodic Interval of Time
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>phase</td>
                        <td>IVL</td>
                        <td>
                           A prototype of the repeating interval specifying the
                           duration of each occurrence and anchors the periodic
                           interval sequence at a certain point in time.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>period</td>
                        <td>T.diff</td>
                        <td>
                           A time duration specifying a reciprocal measure of
                           the frequency at which the periodic interval repeats.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>alignment</td>
                        <td>CS</td>
                        <td>
                           Specifies if and how the repetitions are aligned to
                           the cycles of the underlying calendar (e.g., to
                           distinguish every 30 days from "the 5th of every
                           month".) A non-aligned periodic interval recurs
                           independently from the calendar. An aligned periodic
                           interval is synchronized with the calendar.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>institutionSpecified</td>
                        <td>BL</td>
                        <td>
                           Indicates whether the exact timing is up to the party
                           executing the schedule (e.g., to distinguish "every 8
                           hours" from "3 times a day".)
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  For example, "every eight hours for two minutes" is a
                  periodic interval where the interval's width equals two
                  minutes and the period at which the interval recurs
                  equals eight hours.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The phase also marks the anchor point in time for the
                  entire series of periodically recurring intervals. The
                  recurrence of a periodic interval has no beginning or
                  ending, but is infinite in both future and past.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>PIVL</em> is represented by an XML element
                  whose name is determined by the context in
                  which it is used. <em>PIVL</em> has all the
                  attributes and child elements as described in the
                  template and sub-sections below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 38</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type PIVL --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   operator = (I | E | A | H | P)
   alignment = CS
   institutionSpecified = (true | false} : false
   &gt;
   <em>Content</em>: ( phase, period )
&lt;/x&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-PIVL.phase"></a>4.1.1 
               </h4>
            </td>
            <td class="body_col">
               <h4>Phase : <a class="termref" href="#dtimpl-IVL">IVL</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A prototype of the repeating interval specifying the
                  duration of each occurrence and anchors the periodic
                  interval sequence at a certain point in time.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>phase</em> also marks the anchor point in time for the entire series of
                  periodically recurring intervals. The recurrence of a periodic
                  interval has no begin or end but is infinite in both future and
                  past. A phase must be specified for every non-NULL periodic
                  interval. The width of the phase must be less or equal the period.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>phase</em> is represented as the XML element<em>phase</em>
                  which, if present, must be a valid <a class="termref" href="#dtimpl-IVL">IVL</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-PIVL.period"></a>4.1.2 
               </h4>
            </td>
            <td class="body_col">
               <h4>Period : T.diff</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A time duration specifying a reciprocal measure of
                  the frequency at which the periodic interval repeats.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>period</em> is a <a class="termref" href="#dt-QTY">QTY</a> in the dimension of time
                  					(T.diff).
                  					For an uncertain <em>PIVL</em><em></em> is a probability
                  					distribution over elapsed time.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>period</em> is represented as the XML element<em>period</em>
                  which, if present, must be a valid T.diff.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-PIVL.alignment"></a>4.1.3 
               </h4>
            </td>
            <td class="body_col">
               <h4>Alignment to the Calendar : <a class="termref" href="#dtimpl-CS">CS</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Specifies if and how the repetitions are aligned to
                  the cycles of the underlying calendar (e.g., to
                  distinguish every 30 days from "the 5th of every
                  month".) A non-aligned periodic interval recurs
                  independently from the calendar. An aligned periodic
                  interval is synchronized with the calendar.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>alignment</em> specifies a calendar cycle to which the
                  periodic interval is aligned. The even flow of time will then be
                  partitioned by the calendar cycle. The partitioning is called the
                  calendar "grid" generated by the aligned-to calendar cycle. The
                  boundaries of each occurrence interval will then have equal distance
                  from the earliest point in each partition. In other words, the
                  distance from the next lower grid-line to the beginning of the
                  interval is constant.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="domain-CalendarCycle">&nbsp;</a>
                     			Table
                     			50: Domain CalendarCycle
                  </caption>
                  <thead>
                     <tr>
                        <th>name</th>
                        <th>code</th>
                        <th>counter</th>
                        <th>digits</th>
                        <th>start</th>
                        <th>condition</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>year&nbsp;</td>
                        <td>CY&nbsp;</td>
                        <td>1&nbsp;</td>
                        <td>4&nbsp;</td>
                        <td>0&nbsp;</td>
                        <td>&nbsp;</td>
                     </tr>
                     <tr>
                        <td>month of the year&nbsp;</td>
                        <td>MY&nbsp;</td>
                        <td>2&nbsp;</td>
                        <td>2&nbsp;</td>
                        <td>1&nbsp;</td>
                        <td>&nbsp;</td>
                     </tr>
                     <tr>
                        <td>month (continuous)&nbsp;</td>
                        <td>CM&nbsp;</td>
                        <td>&nbsp;</td>
                        <td>&nbsp;</td>
                        <td>0&nbsp;</td>
                        <td>&nbsp;</td>
                     </tr>
                     <tr>
                        <td>week (continuous)&nbsp;</td>
                        <td>CW&nbsp;</td>
                        <td>&nbsp;</td>
                        <td>&nbsp;</td>
                        <td>0&nbsp;</td>
                        <td>&nbsp;</td>
                     </tr>
                     <tr>
                        <td>week of the year&nbsp;</td>
                        <td>WY&nbsp;</td>
                        <td>&nbsp;</td>
                        <td>2&nbsp;</td>
                        <td>1&nbsp;</td>
                        <td>&nbsp;</td>
                     </tr>
                     <tr>
                        <td>day of the month&nbsp;</td>
                        <td>DM&nbsp;</td>
                        <td>3&nbsp;</td>
                        <td>2&nbsp;</td>
                        <td>1&nbsp;</td>
                        <td>&nbsp;</td>
                     </tr>
                     <tr>
                        <td>day (continuous)&nbsp;</td>
                        <td>CD&nbsp;</td>
                        <td>&nbsp;</td>
                        <td>&nbsp;</td>
                        <td>0&nbsp;</td>
                        <td>&nbsp;</td>
                     </tr>
                     <tr>
                        <td>day of the year&nbsp;</td>
                        <td>DY&nbsp;</td>
                        <td>&nbsp;</td>
                        <td>3&nbsp;</td>
                        <td>1&nbsp;</td>
                        <td>&nbsp;</td>
                     </tr>
                     <tr>
                        <td>day of the week (begins with Monday)&nbsp;</td>
                        <td>DW&nbsp;</td>
                        <td>&nbsp;</td>
                        <td>1&nbsp;</td>
                        <td>1&nbsp;</td>
                        <td>&nbsp;</td>
                     </tr>
                     <tr>
                        <td>hour of the day&nbsp;</td>
                        <td>HD&nbsp;</td>
                        <td>4&nbsp;</td>
                        <td>2&nbsp;</td>
                        <td>0&nbsp;</td>
                        <td>&nbsp;</td>
                     </tr>
                     <tr>
                        <td>hour (continuous)&nbsp;</td>
                        <td>CH&nbsp;</td>
                        <td>&nbsp;</td>
                        <td>&nbsp;</td>
                        <td>0&nbsp;</td>
                        <td>&nbsp;</td>
                     </tr>
                     <tr>
                        <td>minute of the hour&nbsp;</td>
                        <td>NH&nbsp;</td>
                        <td>5&nbsp;</td>
                        <td>2&nbsp;</td>
                        <td>0&nbsp;</td>
                        <td>&nbsp;</td>
                     </tr>
                     <tr>
                        <td>minute (continuous)&nbsp;</td>
                        <td>CN&nbsp;</td>
                        <td>&nbsp;</td>
                        <td>&nbsp;</td>
                        <td>0&nbsp;</td>
                        <td>&nbsp;</td>
                     </tr>
                     <tr>
                        <td>second of the minute&nbsp;</td>
                        <td>SN&nbsp;</td>
                        <td>6&nbsp;</td>
                        <td>2&nbsp;</td>
                        <td>0&nbsp;</td>
                        <td>&nbsp;</td>
                     </tr>
                     <tr>
                        <td>second (continuous)&nbsp;</td>
                        <td>CS&nbsp;</td>
                        <td>&nbsp;</td>
                        <td>&nbsp;</td>
                        <td>0&nbsp;</td>
                        <td>&nbsp;</td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  For example, with <em>every 5th of the month</em>
                  the alignment calendar cycle would be month of the year
                  (MY.)  The even flow of time is partitioned in months
                  of the year. The distance between the beginning of each
                  month and the beginning of its occurrence interval is 4
                  days (4 days because day of month (DM) starts counting
                  with 1.)  Thus, as months differ in their number of days,
                  the distances between the recurring intervals will vary
                  slightly, so that the interval occurs always on the 5th.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>alignment</em> is represented as the XML attribute<em>alignment</em>,
                  whose value, if present, must be a valid code from the
                  domain CalenderCycle (<a href="#domain-CalendarCycle">Table
                     			50</a>).
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-PIVL.institutionSpecified"></a>4.1.4 
               </h4>
            </td>
            <td class="body_col">
               <h4>Institution Specified Timing : <a class="termref" href="#dtimpl-BL">BL</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Indicates whether the exact timing is up to the party
                  executing the schedule (e.g., to distinguish "every 8
                  hours" from "3 times a day".)
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  For example, with a schedule "three times a day" the average
                  time between repetitions is 8 hours, however, with institution
                  specified time indicator <em>true</em>, the timing could
                  follow some rule made by the executing person or organization
                  ("institution"), that, e.g., three times a day schedules are
                  executed at 7 am, noon, and 7 pm.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>institutionSpecified</em> is represented as the XML attribute<em>institutionSpecified</em>,
                  whose value, if present, must be a valid <a class="termref" href="#dtimpl-BL">BL</a>.
                  The default	value is <em>false</em>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="PIVL-examples"></a>4.1.5 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The first example shows twice a day (BID), i.e.,
                  every 2 hours, at institution specified times.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 49</caption>
                  <tr>
                     <td class="example"><pre>
&lt;effectiveTime xsi:type='PIVL_TS' institutionSpecified='true'&gt;
   &lt;period value='12' unit='h'/&gt;
&lt;/effectiveTime&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The next examples shows twice a day for ten minutes.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 50</caption>
                  <tr>
                     <td class="example"><pre>
&lt;effectiveTime xsi:type='PIVL_TS'&gt;
   &lt;phase&gt;
      &lt;width value='10' unit='min'/&gt;
   &lt;/phase&gt;
   &lt;period value='12' unit='h'/&gt;
&lt;/effectiveTime&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The next example is slightly more complex and shows
                  the month of September that recurs every year (note that in the
                  year 1987 in this form is irrelevant since the
                  periodic interval recurs every year past and future.)
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 51</caption>
                  <tr>
                     <td class="example"><pre>
&lt;effectiveTime xsi:type='PIVL_TS' alignment='MY'&gt;
   &lt;phase&gt;
      &lt;low value='198709' inclusive='true'/&gt;
      &lt;high value='198710' inclusive='false'/&gt;
   &lt;/phase&gt;
   &lt;period value='1' unit='a'/&gt;
&lt;/effectiveTime&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The next example shows every other Saturday.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 52</caption>
                  <tr>
                     <td class="example"><pre>
&lt;effectiveTime xsi:type='PIVL_TS' alignment='DW'&gt;
   &lt;phase&gt;
      &lt;low value='20001202' inclusive='true'/&gt;
      &lt;high value='20001203' inclusive='false'/&gt;
   &lt;/phase&gt;
   &lt;period value='2' unit='wk'/&gt;
&lt;/effectiveTime&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The last example shows every four to six hours.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 53</caption>
                  <tr>
                     <td class="example"><pre>
&lt;effectiveTime xsi:type='PIVL_PPD_TS'&gt;
   &lt;period value='5' unit='h' distributionType='U'&gt;
      &lt;standardDeviation value='0.57735' unit='h'/&gt;
   &lt;/period&gt;
&lt;/effectiveTime&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-EIVL"></a>4.2 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="EIVL"></a>Event-Related Interval of Time (EIVL) specializes <a class="termref" href="#dtimpl-SXCM">SXCM</a></h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  Specifies a periodic interval of time where the
                  recurrence is based on activities of daily living
                  or other important events that are time-related but
                  not fully determined by time.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  For example, "one hour after breakfast" specifies the
                  beginning of the interval at one hour after breakfast is
                  finished. Breakfast is assumed to occur before lunch but
                  is not determined to occur at any specific time.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="dtimpl-EIVL-comp-summary">&nbsp;</a>
                     			Table
                     			51: Components of
                     Event-Related Interval of Time
                  </caption>
                  <thead>
                     <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Description</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>event</td>
                        <td>CS</td>
                        <td>
                           A code for a common (periodical) activity of daily
                           living based on which the event related periodic
                           interval is specified.
                           
                        </td>
                     </tr>
                     <tr>
                        <td>offset</td>
                        <td>IVL&lt;T.diff&gt;</td>
                        <td>
                           An interval of elapsed time (duration, not absolute
                           point in time) that marks the offsets for the
                           beginning, width and end of the event-related periodic
                           interval measured from the time each such event
                           actually occurred.
                           
                        </td>
                     </tr>
                  </tbody>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>EIVL</em> is represented by an XML element
                  whose name is determined by the context in which it is
                  used. <em>EIVL</em> has all the attributes and child
                  elements as described in the template and sub-sections
                  below.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 39</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type EIVL --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   operator = (I | E | A | H | P)
   &gt;
   <em>Content</em>: ( event, offset )
&lt;/x&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-EIVL.event"></a>4.2.1 
               </h4>
            </td>
            <td class="body_col">
               <h4>Event : <a class="termref" href="#dtimpl-CS">CS</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A code for a common (periodical) activity of daily
                  living based on which the event related periodic
                  interval is specified.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  Such events qualify for being adopted in the domain of this
                  attribute for which all of the following is true:
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <ul style="margin-left:20px;">
                  <li>the event commonly occurs on a regular basis,</li>
                  <li>the event is being used for timing activities, and</li>
                  <li>the event is not entirely determined by time.</li>
               </ul>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                  <caption><a name="domain-TimingEvent">&nbsp;</a>
                     			Table
                     			52: Domain TimingEvent
                  </caption>
                  <thead>
                     <tr>
                        <th>code</th>
                        <th>name</th>
                        <th>definition</th>
                     </tr>
                  </thead>
                  <tr>
                     <td>AC</td>
                     <td>AC</td>
                     <td>before meal (from lat. ante cibus)</td>
                  </tr>
                  <tr>
                     <td>ACD</td>
                     <td>ACT</td>
                     <td>before lunch (from lat. ante cibus diurnus)</td>
                  </tr>
                  <tr>
                     <td>ACM</td>
                     <td>ACM</td>
                     <td>before breakfast (from lat. ante cibus matutinus)</td>
                  </tr>
                  <tr>
                     <td>ACV</td>
                     <td>ACV</td>
                     <td>before dinner (from lat. ante cibus vespertinus)</td>
                  </tr>
                  <tr>
                     <td>HS</td>
                     <td>HS</td>
                     <td>the hour of sleep</td>
                  </tr>
                  <tr>
                     <td>IC</td>
                     <td>IC</td>
                     <td>between meals (from lat. inter cibus)</td>
                  </tr>
                  <tr>
                     <td>ICD</td>
                     <td>ICD</td>
                     <td>between lunch and dinner</td>
                  </tr>
                  <tr>
                     <td>ICM</td>
                     <td>ICM</td>
                     <td>between breakfast and lunch</td>
                  </tr>
                  <tr>
                     <td>ICV</td>
                     <td>ICV</td>
                     <td>between dinner and the hour of sleep</td>
                  </tr>
                  <tr>
                     <td>PC</td>
                     <td>PC</td>
                     <td>after meal (from lat. post cibus)</td>
                  </tr>
                  <tr>
                     <td>PCD</td>
                     <td>PCD</td>
                     <td>after lunch (from lat. post cibus diurnus)</td>
                  </tr>
                  <tr>
                     <td>PCM</td>
                     <td>PCM</td>
                     <td>after breakfast (from lat. post cibus matutinus)</td>
                  </tr>
                  <tr>
                     <td>PCV</td>
                     <td>PCV</td>
                     <td>after dinner (from lat. post cibus vespertinus)</td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>event</em> is represented as the XML element<em>event</em>
                  which, if present, must be a valid <a class="termref" href="#dtimpl-CE">CE</a>,
                  whose <a class="termref" href="#comp-CE.code">CE.code</a> must be a valid value from
                  the TimingEvent domain (<a href="#domain-TimingEvent">Table
                     			52</a>).
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-EIVL.offset"></a>4.2.2 
               </h4>
            </td>
            <td class="body_col">
               <h4>Offset : IVL&lt;T.diff&gt;</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  An interval of elapsed time (duration, not absolute
                  point in time) that marks the offsets for the
                  beginning, width and end of the event-related periodic
                  interval measured from the time each such event
                  actually occurred.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  For example: if the specification is "one hour before
                  breakfast for 10 minutes" the offset's low boundary is
                  1 h and the offset's width is 10 min (consequently the
                  offset's high boundary is 50 min).
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>offset</em> is represented as the XML element<em>offset</em>
                  which, if present, must be a valid <a class="termref" href="#dtimpl-IVL">IVL</a>&lt;T.diff&gt;.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="EIVL-examples"></a>4.2.3 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  The first example shows one hour before
                  breakfast for 10 minutes.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 54</caption>
                  <tr>
                     <td class="example"><pre>
&lt;effectiveTime xsi:type='EIVL_TS'&gt;
   &lt;event code='ACM' codeSystem='2.16.840.1.113883.5.139'/&gt;
   &lt;offset&gt;
      &lt;low value='1' unit ='h'/&gt;
      &lt;width value='10' unit='min'/&gt;
   &lt;/offset&gt;
&lt;/effectiveTime&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  					The next example shows 30 minutes after dinner.
                  				
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 55</caption>
                  <tr>
                     <td class="example"><pre>
&lt;effectiveTime xsi:type='EIVL_TS'&gt;
   &lt;event code='PCV' codeSystem='2.16.840.1.113883.5.139'/&gt;
   &lt;offset&gt;
      &lt;center value='30' unit ='min'/&gt;
   &lt;/offset&gt;
&lt;/effectiveTime&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h3><a name="dtimpl-SXPR"></a>4.3 
               </h3>
            </td>
            <td class="body_col">
               <h3><a name="SXPR"></a>Parenthetic Set Expression (SXPR) specializes <a class="termref" href="#dtimpl-SXCM">SXCM</a></h3>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A set-component that is itself made up of set-components
                  that are evaluated as one value.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>SXPR</em> is represented by an XML element
                  whose name is determined by the context in
                  which it is used. <em>SXPR</em> has all the
                  attributes and child elements as described in the
                  template and sub-sections below. <em>SXPR</em>
                  can be used in place of any
                  <a class="termref" href="#dtimpl-SXCM">SXCM</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Type Template 40</caption>
                  <tr>
                     <td class="template"><pre>
&lt;!-- type SXPR --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   operator = (I | E | A | H | P)
   &gt;
   <em>Content</em>: ( comp, comp+ )
&lt;/x&gt;
</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  There must be at least 2 comp elements.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="comp-SXPR.expr"></a>4.3.1 
               </h4>
            </td>
            <td class="body_col">
               <h4>Sub-Expression : <a class="termref" href="#dtimpl-SXCM">SXCM</a></h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                  A component of a parenthetic set expression.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p><em>comp</em> is represented by the
                  XML element<em>comp</em> which, if present, must be a
                  valid <a class="termref" href="#dtimpl-SXCM">SXCM</a>.
                  
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>
               <h4><a name="SXPR-examples"></a>4.3.2 
               </h4>
            </td>
            <td class="body_col">
               <h4>Examples</h4>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  					The first example shows daily at noon, starting on February 4 2004.
                  				
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 56</caption>
                  <tr>
                     <td class="example"><pre>
&lt;effectiveTime xsi:type='SXPR_TS'&gt;
   &lt;comp xsi:type='IVL_TS'&gt;
      &lt;low value='20040204'/&gt;
   &lt;/comp&gt;
   &lt;comp xsi:type='PIVL_TS' operator='A'&gt;
      &lt;phase&gt;
         &lt;center value='200402041200'/&gt;
      &lt;/phase&gt;
      &lt;period value='1' unit='d' /&gt;
   &lt;/comp&gt;
&lt;/effectiveTime&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap>&nbsp;</td>
            <td class="number_col" nowrap>&nbsp;</td>
            <td class="body_col">
               <p>
                  					The first example shows four times a day (at insitution specified times)
                  					starting on June 3, 2005.
                  				
               </p>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <table width="90%">
                  <caption>Example 57</caption>
                  <tr>
                     <td class="example"><pre>
&lt;effectiveTime xsi:type='SXPR_TS'&gt;
   &lt;comp xsi:type='IVL_TS'&gt;
      &lt;low value='20050603' /&gt;
   &lt;/comp&gt;
   &lt;comp xsi:type='PIVL_TS' operator='A' institutionSpecified='true'&gt;
      &lt;period value='6' unit='h' /&gt;
   &lt;/comp&gt;
&lt;/effectiveTime&gt;</pre></td>
                  </tr>
               </table>
            </td>
         </tr>
         <tr>
            <td class="graphic_col" nowrap> &nbsp; </td>
            <td class="number_col" nowrap>&nbsp; </td>
            <td class="body_col">
               <hr title="Separator from footer">
               <!--divN/head-->
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>
                     <h2><a name="informative"></a>A 
                     </h2>
                  </td>
                  <td class="body_col">
                     <h2>Informative Types</h2>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>&nbsp;</td>
                  <td class="body_col">
                     <p>
                        These types are currently marked as informative while known
                        issues relating to their design are being resolved.
                        
                     </p>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>
                     <h3><a name="dtimpl-PPD"></a>A.1 
                     </h3>
                  </td>
                  <td class="body_col">
                     <h3><a name="PPD"></a>Parametric Probability Distribution (PPD)
                     </h3>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>&nbsp;</td>
                  <td class="body_col">
                     <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                        A generic data type extension specifying uncertainty of
                        quantitative data using a distribution function and its
                        parameters. Aside from the specific parameters of the
                        distribution, a mean (expected value) and standard
                        deviation is always given to help maintain a minimum layer
                        of interoperability if receiving applications cannot deal
                        with a certain probability distribution.
                        
                     </p>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>&nbsp;</td>
                  <td class="body_col">
                     <p>
                        For example, the most common college entrance exam in the
                        United States is the SAT, which is comprised of two parts:
                        verbal and math. Each part has a minimum score of 400 (no
                        questions answered correctly) and a perfect score of 800.
                        In 1998, according to the College Board, 1,172,779
                        college-bound seniors took the test. The mean score for the
                        math portion of the test was 512, and the standard deviation
                        112. These parameter values (512, 112), tagged as the normal
                        distribution parameters, paint a pretty good picture of test
                        score distribution. In most cases, there is no need to
                        specify all 1-million+ points of data when just 2 parameters
                        will do!
                        
                     </p>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap> &nbsp; </td>
                  <td class="number_col" nowrap>&nbsp; </td>
                  <td class="body_col"><br><img class="graphic" border="0" src="graphics/DT-PPD-ex1.gif" alt="Parametric Probability Distribution"><br>Parametric Probability Distribution<br></td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>&nbsp;</td>
                  <td class="body_col">
                     <p>
                        Note that the normal distribution is only one of several
                        distributions defined for HL7.
                        
                     </p>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap> &nbsp; </td>
                  <td class="number_col" nowrap>&nbsp; </td>
                  <td class="body_col">
                     <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                        <caption><a name="dtimpl-PPD-comp-summary">&nbsp;</a>
                           			Table
                           			53: Components of
                           Parametric Probability Distribution
                        </caption>
                        <thead>
                           <tr>
                              <th>Name</th>
                              <th>Type</th>
                              <th>Description</th>
                           </tr>
                        </thead>
                        <tbody>
                           <tr>
                              <td>standardDeviation</td>
                              <td>T.diff</td>
                              <td>
                                 The primary measure of variance/uncertainty of the
                                 value (the square root of the sum of the squares of
                                 the differences between all data points and the mean).
                                 The standard deviation is used to normalize the data
                                 for computing the distribution function. Applications
                                 that cannot deal with probability distributions can
                                 still get an idea about the confidence level by looking
                                 at the standard deviation.
                                 
                              </td>
                           </tr>
                           <tr>
                              <td>distributionType</td>
                              <td>CS</td>
                              <td>
                                 A code specifying the type of probability distribution.
                                 Possible values are as shown in the attached table.
                                 The NULL value (unknown) for the type code indicates
                                 that the probability distribution type is unknown. In
                                 that case, the standard deviation has the meaning of an
                                 informal guess.
                                 
                              </td>
                           </tr>
                        </tbody>
                     </table>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>&nbsp;</td>
                  <td class="body_col">
                     <p>
                        Since <em>PPD</em> extends its parameter type T, a simple T value
                        is the mean (expected value or first moment) of the
                        probability distribution. Applications that cannot deal with
                        distributions will take the simple T value neglecting the
                        uncertainty. That simple value of type T is also used to
                        standardize the data for computing the distribution.
                        
                     </p>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>&nbsp;</td>
                  <td class="body_col">
                     <p>
                        Probability distributions are defined over integer or
                        real numbers and normalized to a certain reference point
                        (typically zero) and reference unit (e.g., standard
                        deviation = 1). When other quantities defined in this
                        specification are used as base types, the mean and the
                        standard deviation are used to scale the probability
                        distribution. For example, if a PPD&lt;<a class="termref" href="#dtimpl-PQ">PQ</a>&gt; for a length is given with mean 20 ft
                        and a standard deviation of 2 in, the normalized
                        distribution function <em>f</em>(<em>x</em>) that
                        maps a real number <em>x</em> to a probability density
                        would be translated to
                        <em>f</em>&#8242;(<em>x</em>&#8242;) that maps
                        a length <em>x</em>&#8242; to a probability density as
                        <em>f</em>&#8242;(<em>x</em>&#8242;) =
                        <em>f</em>((<em>x</em>&#8242; - &#956;) / &#963;).
                        
                     </p>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>&nbsp;</td>
                  <td class="body_col">
                     <p>
                        Where applicable, <em>PPD</em> conforms to the
                        ISO <em>Guide to the Expression of Uncertainty in
                           Measurement</em> (GUM) as reflected by NIST publication
                        1297 <em>Guidelines for Evaluating and Expressing the
                           Uncertainty of NIST Measurement Results</em>.
                        <em>PPD</em> does not describe how uncertainty
                        is to be evaluated but only how it is expressed. The
                        concept of "standard uncertainty" as set forth by the
                        ISO GUM corresponds to <a class="termref" href="#comp-PPD.standardDeviation">standardDeviation</a>.
                        
                     </p>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>&nbsp;</td>
                  <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>&nbsp;</td>
                  <td class="body_col">
                     <p><em>PPD</em> is represented by an XML element
                        whose name is determined by the context in which it is
                        used. <em>PPD</em> has all the attributes and
                        child elements defined for the type T and adds the
                        attributes and elements defined in the type template
                        and subsections below.
                        
                     </p>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap> &nbsp; </td>
                  <td class="number_col" nowrap>&nbsp; </td>
                  <td class="body_col">
                     <table width="90%">
                        <caption>Type Template 41</caption>
                        <tr>
                           <td class="template"><pre>
&lt;!-- type PPD --&gt;
&lt;x
   nullFlavor = (NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | NP)
   <em>{any attributes from T}</em>
   distributionType  = CS
   &gt;
   <em>Content</em>: ( <em>{any elements from T}</em>, standardDeviation )
&lt;/x&gt;
</pre></td>
                        </tr>
                     </table>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>
                     <h4><a name="comp-PPD.standardDeviation"></a>A.1.1 
                     </h4>
                  </td>
                  <td class="body_col">
                     <h4>Standard Deviation : T.diff</h4>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>&nbsp;</td>
                  <td class="body_col">
                     <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                        The primary measure of variance/uncertainty of the
                        value (the square root of the sum of the squares of
                        the differences between all data points and the mean).
                        The standard deviation is used to normalize the data
                        for computing the distribution function. Applications
                        that cannot deal with probability distributions can
                        still get an idea about the confidence level by looking
                        at the standard deviation.
                        
                     </p>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>&nbsp;</td>
                  <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>&nbsp;</td>
                  <td class="body_col">
                     <p><em>standardDeviation</em> is represented by the
                        XML element<em>standardDeviation</em> which, if present,
                        must be a valid T.diff.
                        
                     </p>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>
                     <h4><a name="comp-PPD.distributionType"></a>A.1.2 
                     </h4>
                  </td>
                  <td class="body_col">
                     <h4>Probability Distribution Type : <a class="termref" href="#dtimpl-CS">CS</a></h4>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>&nbsp;</td>
                  <td class="body_col">
                     <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                        A code specifying the type of probability distribution.
                        Possible values are as shown in the attached table.
                        The NULL value (unknown) for the type code indicates
                        that the probability distribution type is unknown. In
                        that case, the standard deviation has the meaning of an
                        informal guess.
                        
                     </p>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>&nbsp;</td>
                  <td class="body_col">
                     <p><a href="#domain-ProbabilityDistributionType">Table
                           			54</a> lists the defined
                        probability distributions. Many distribution types are defined in
                        terms of special parameters (e.g., the parameters &#945; and &#946;
                        for the &#947;-distribution, number of degrees of freedom for the
                        <em>t</em>-distribution, etc.)  For all distribution types,
                        however, the mean and standard deviation are defined. <em>PPD</em>
                        is specified with the parameters mean and standard distribution
                        only. The definition column contains the relationship between the
                        special parameters and the mean &#956; and standard deviation &#963;.
                        
                     </p>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap> &nbsp; </td>
                  <td class="number_col" nowrap>&nbsp; </td>
                  <td class="body_col">
                     <table width="90%" cellspacing="0" cellpadding="5" border="1" bordercolor="blue">
                        <caption><a name="domain-ProbabilityDistributionType">&nbsp;</a>
                           			Table
                           			54: Domain ProbabilityDistributionType
                        </caption>
                        <thead>
                           <tr>
                              <th>code</th>
                              <th>name</th>
                              <th>definition</th>
                           </tr>
                        </thead>
                        <tr>
                           <td>(NULL)</td>
                           <td>unknown</td>
                           <td>
                              Used to indicate that the mean is estimated without
                              any closer consideration of its probability distribution.
                              In this case, the meaning of the standard deviation is not
                              crisply defined. However, interpretation should be along
                              the lines of the normal distribution, e.g., the interval
                              covered by the mean &plusmn;1 standard deviation
                              should be at the level of about two thirds confidence.
                              
                           </td>
                        </tr>
                        <tr>
                           <td>U</td>
                           <td>uniform</td>
                           <td>
                              The uniform distribution assigns a constant probability
                              over the entire interval of possible outcomes, while
                              all outcomes outside this interval are assumed to have
                              zero probability. The width of this interval is 2 &#963;
                              &#8730;3. Thus, the uniform distribution assigns the
                              probability densities <em>f</em>(x) = (2 &#963; &#8730;3)
                              <sup>-1</sup> to values &#956; - &#963; &#8730;3
                              &#8805; x &#8804; &#956; + &#963; &#8730;3 and <em>f</em>(x)
                              = 0 otherwise.
                              
                           </td>
                        </tr>
                        <tr>
                           <td>N</td>
                           <td>normal (Gaussian)</td>
                           <td>
                              This is the well-known bell-shaped normal distribution.
                              Because of the central limit theorem, the normal
                              distribution is the distribution of choice for an
                              unbounded random variable that is an outcome of a
                              combination of many stochastic processes. Even for
                              values bounded on a single side (i.e. greater than
                              0) the normal distribution may be accurate enough
                              if the mean is "far away" from the bound of the scale
                              measured in terms of standard deviations.
                              
                           </td>
                        </tr>
                        <tr>
                           <td>LN</td>
                           <td>log-normal</td>
                           <td>
                              The logarithmic normal distribution is used to
                              transform skewed random variable X into a normally
                              distributed random variable <em>U</em>
                              = log <em>X</em>. The log-normal distribution
                              can be specified with the properties mean &#956; and
                              standard deviation &#963;. Note however that mean
                              &#956; and standard deviation &#963; are the
                              parameters of the raw value distribution, not the
                              transformed parameters of the lognormal distribution
                              that are conventionally referred to by the same
                              letters. Those log-normal parameters &#956;
                              <sub>log</sub> and &#963;<sub>log</sub> relate to the mean &#956; and
                              standard deviation &#963; of the data value through
                              &#963;<sub>log</sub><sup>2</sup>
                              = log (&#963;<sup>2</sup>/&#956;<sup>2</sup> + 1) and &#956;log = log &#956; -
                              &#963;<sub>log</sub><sup>2</sup>/2.
                              
                           </td>
                        </tr>
                        <tr>
                           <td>G</td>
                           <td>&#947; (gamma)</td>
                           <td>
                              The gamma-distribution used for data that is
                              skewed and bounded to the right, i.e. where the
                              maximum of the distribution curve is located
                              near the origin. The &#947;-distribution has
                              two parameters &#945; and &#946;. The relationship
                              to mean &#956; and variance &#963;
                              <sup>2</sup> is &#956; = &#945; &#946;
                              and &#963;<sup>2</sup> = &#945;
                              &#946;<sup>2</sup>.
                              
                           </td>
                        </tr>
                        <tr>
                           <td>E</td>
                           <td>exponential</td>
                           <td>
                              Used for data that describes extinction. The
                              exponential distribution is a special form of
                              &#947;-distribution where &#945; = 1, hence,
                              the relationship to mean &#956; and variance &#963;
                              <sup>2</sup> are &#956; = &#946; and &#963;
                              <sup>2</sup> = &#946;<sup>2</sup>.
                              
                           </td>
                        </tr>
                        <tr>
                           <td>X2</td>
                           <td>&#967;</td>
                           <td>
                              Used to describe the sum of squares of random
                              variables that occurs when a variance is
                              estimated (rather than presumed) from the
                              sample. The only parameter of the &#967;<sup>2</sup>-distribution is &#965;,
                              so called the <em>number of degrees of
                                 freedom</em> (which is the number of independent
                              parts in the sum). The
                              &#967;<sup>2</sup>-distribution is a
                              special type of &#947;-distribution with parameter
                              &#945; = &#965; /2 and &#946; = 2. Hence,
                              &#956; = &#965; and &#963;<sup>2</sup>
                              = 2 &#965;.
                              
                           </td>
                        </tr>
                        <tr>
                           <td>T</td>
                           <td>t (Student)</td>
                           <td>
                              Used to describe the quotient of a normal random
                              variable and the square root of a &#967;<sup>2</sup> random variable. The
                              <em>t</em>-distribution has one parameter
                              &#965;, the number of degrees of freedom.
                              The relationship to mean &#956; and variance
                              &#963;<sup>2</sup> are: &#956; = 0
                              and &#963; <sup>2</sup> = &#965;
                              / (&#965; - 2).
                              
                           </td>
                        </tr>
                        <tr>
                           <td>F</td>
                           <td>F</td>
                           <td>
                              Used to describe the quotient of two &#967;<sup>2</sup> random variables. The
                              <em>F</em>-distribution has two parameters
                              &#965;<sub>1</sub> and &#965;<sub>2</sub>, which are the numbers of
                              degrees of freedom of the numerator and denominator
                              variable respectively. The relationship to mean
                              &#956; and variance &#963;<sup>2</sup>
                              are: &#956; = &#965;<sub>2</sub> /
                              (&#965;<sub>2</sub> - 2) and
                              &#963;<sup>2</sup> = (2 &#965;<sub>2</sub> (&#965;<sub>2</sub>
                              + &#965;<sub>1</sub> - 2)) / (&#965;
                              <sub>1</sub> (&#965;<sub>2</sub> - 2)
                              <sup>2</sup> (&#965;<sub>2</sub> - 4)).
                              
                           </td>
                        </tr>
                        <tr>
                           <td>B</td>
                           <td>&#946; (beta)</td>
                           <td>
                              The beta-distribution is used for data that is
                              bounded on both sides and may or may not be skewed
                              (e.g., occurs when probabilities are estimated.)
                              Two parameters &#945; and &#946; are available to
                              adjust the curve. The mean &#956; and variance
                              &#963;<sup>2</sup> relate as follows:
                              &#956; = &#945; / (&#945; + &#946;) and
                              (&#963;<sup>2</sup> = &#945;
                              &#946;/((&#945; + &#946;)<sup>2</sup>
                              (&#945; + &#946; + 1)).
                              
                           </td>
                        </tr>
                     </table>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>&nbsp;</td>
                  <td class="body_col">
                     <p>
                        The three distribution-types <em>unknown</em> (NULL),
                        <em>uniform</em> and <em>normal</em> must be
                        supported by every system that claims to support PPD.
                        All other distribution types are optional. When a
                        system interpreting a <em>PPD</em> representation encounters an
                        unknown distribution type, it maps this type to the
                        unknown (NULL) distribution-type.
                        
                     </p>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>&nbsp;</td>
                  <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>&nbsp;</td>
                  <td class="body_col">
                     <p><em>distributionType</em> is represented by the
                        XML attribute<em>standardDeviation</em>	whose value, if
                        present, must be a valid code from the
                        ProbabilityDistributionType domain
                        (<a href="#domain-ProbabilityDistributionType">Table
                           			54</a>).
                        
                     </p>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>
                     <h3><a name="dtimpl-GTS"></a>A.2 
                     </h3>
                  </td>
                  <td class="body_col">
                     <h3><a name="GTS"></a>General Timing Specification (GTS)
                     </h3>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>&nbsp;</td>
                  <td class="body_col">
                     <p><strong>Definition:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>
                        A set of points in time, specifying the timing of events
                        and actions and the cyclical validity-patterns that may
                        exist for certain kinds of information, such as phone
                        numbers (evening, daytime), addresses (so called
                        "snowbirds," residing closer to the equator during winter
                        and farther from the equator during summer) and office
                        hours.
                        
                     </p>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>&nbsp;</td>
                  <td class="body_col">
                     <blockquote><b>NOTE: </b><em>GTS</em> is conceptually nothing other than
                        <a class="termref" href="#dtimpl-SET">SET</a>&lt;<a class="termref" href="#dtimpl-TS">TS</a>&gt;.
                        
                     </blockquote>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>&nbsp;</td>
                  <td class="body_col">
                     <p>
                        The XML representation of <em>GTS</em> is informative but not the
                        <em>GTS</em> type itself.
                        
                     </p>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>&nbsp;</td>
                  <td class="body_col"><br><b class="heading">XML Representation</b><p></p>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>&nbsp;</td>
                  <td class="body_col">
                     <p><em>GTS</em> is represented as a sequence of XML elements of
                        type <a class="termref" href="#dtimpl-SXCM">SXCM</a>
                        or its specializations, including
                        <a class="termref" href="#dtimpl-IVL_TS">IVL&lt;TS&gt;</a>,
                        <a class="termref" href="#dtimpl-PIVL">PIVL</a>,
                        <a class="termref" href="#dtimpl-EIVL">EIVL</a>,
                        <a class="termref" href="#dtimpl-SXPR">SXPR</a>.
                        
                     </p>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>
                     <h4><a name="GTS-examples"></a>A.2.1 
                     </h4>
                  </td>
                  <td class="body_col">
                     <h4>Examples</h4>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>&nbsp;</td>
                  <td class="body_col">
                     <p>
                        This example shows every other Tuesday in the season from the (US holidays)
                        Memorial Day to Labor Day in the years 2002 and 2003.
                        
                     </p>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap> &nbsp; </td>
                  <td class="number_col" nowrap>&nbsp; </td>
                  <td class="body_col">
                     <table width="90%">
                        <caption>Example 58</caption>
                        <tr>
                           <td class="example"><pre>
&lt;effectiveTime xsi:type='SXPR_TS'&gt;
&lt;!-- memorial day --&gt;
   &lt;comp xsi:type='SXPR_TS'&gt;
      &lt;comp xsi:type='PIVL_TS'&gt;
         &lt;phase&gt;
           &lt;low value='19870525'/&gt;
           &lt;high value='19870601' inclusive='false'/&gt;
         &lt;/phase&gt;
         &lt;period value='1' unit='a'/&gt;
      &lt;/comp&gt;
      &lt;comp xsi:type='PIVL_TS' operator='A'&gt;
         &lt;phase&gt;
            &lt;low value='19870105'/&gt;
            &lt;high value='19870106' inclusive='false'/&gt;
         &lt;/phase&gt;
         &lt;period value='1' unit='wk'/&gt;
      &lt;/comp&gt;
   &lt;/comp&gt;
&lt;!-- labor day --&gt;
   &lt;comp xsi:type='SXPR_TS' operator='P'&gt;
      &lt;comp xsi:type='PIVL_TS'&gt;
         &lt;phase&gt;
            &lt;low value='19870901'/&gt;
            &lt;high value='19870908' inclusive='false'/&gt;
         &lt;/phase&gt;
         &lt;period value='1' unit='a'/&gt;
      &lt;/comp&gt;
      &lt;comp xsi:type='PIVL_TS' operator='A'&gt;
         &lt;phase&gt;
            &lt;low value='19870105'/&gt;
            &lt;high value='19870106' inclusive='false'/&gt;
         &lt;/phase&gt;
         &lt;period value='1' unit='wk'/&gt;
      &lt;/comp&gt;
   &lt;/comp&gt;
&lt;/effectiveTime&gt;
&lt;effectiveTime xsi:type='PIVL_TS' alignment='DW' operator='A'&gt;
&lt;!-- every other Tuesday --&gt;
   &lt;phase&gt;
      &lt;low value='20001202' inclusive='true'/&gt;
      &lt;high value='20001203' inclusive='false'/&gt;
   &lt;/phase&gt;
   &lt;period value='2' unit='wk'/&gt;
&lt;/effectiveTime&gt;
&lt;effectiveTime xsi:type='IVL_TS' operator='A'&gt;
&lt;!-- from 2002 and 2003 --&gt;
   &lt;low value='20020101' inclusive='true'/&gt;
   &lt;high value='20040101' inclusive='false'/&gt;
&lt;/effectiveTime&gt;</pre></td>
                        </tr>
                     </table>
                  </td>
               </tr>
               <!--divN/head-->
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>
                     <h2><a name="completeSchema"></a>B 
                     </h2>
                  </td>
                  <td class="body_col">
                     <h2>W3C XML Schema</h2>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>&nbsp;</td>
                  <td class="body_col">
                     <p>
                        The schema representations are provided for convenience,
                        as the XML schema is a compact and specific way to describe
                        the XML representation. However the schema is not in itself
                        a normative part of this specification. While HL7 publishes
                        schema for the HL7 data types, other schemas could be
                        proposed that describes the same XML representation, and
                        these schemas are no less valid, though they may differ in
                        their usefulness for a given task. It is the XML
                        representation of the data type that is normative.
                        
                     </p>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>&nbsp;</td>
                  <td class="body_col">
                     <p>
                        This schema defines a
                        <a href="http://www.w3.org/TR/xmlschema-1#Complex_Type_Definitions" target="schema-rec">complex type</a>
                        for each data type described in this specification as having
                        an Element form (e.g., <a class="termref" href="#dtimpl-ED">ED</a> and
                        <a class="termref" href="#dtimpl-CD">CD</a>), the name of the
                        <a href="http://www.w3.org/TR/xmlschema-1#Complex_Type_Definitions" target="schema-rec">complex type</a> is the value of the
                        "Symbol" column for the type as given in <a href="#dtimpl-summary-table">Table
                           			1</a>.
                        
                     </p>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>&nbsp;</td>
                  <td class="body_col">
                     <p>
                        This schema also defines a
                        <a href="http://www.w3.org/TR/xmlschema-2#rf=defn" target="schema-rec">simple type</a> for each data type
                        described in this specification as having an Attribute form
                        (e.g., <a class="termref" href="#dtimpl-ST">ST</a> and
                        <a class="termref" href="#dtimpl-CS">CS</a>), the name of the
                        <a href="http://www.w3.org/TR/xmlschema-2#rf-defn" target="schema-rec">simple type</a> is the lower-case
                        version of the "Symbol" column for the type as given in
                        <a href="#dtimpl-summary-table">Table
                           			1</a>.
                        
                     </p>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>&nbsp;</td>
                  <td class="body_col">
                     <p>
                        For some data types, one or more Schematron [<a href="http://www.schematron.com">http://www.schematron.com</a>] patterns are defined as
                        <a href="http://www.w3.org/TR/xmlschema-1/#cAnnotations">xs:appinfo</a>
                        annotations in either the
                        <a href="http://www.w3.org/TR/xmlschema-1#Complex_Type_Definitions" target="schema-rec">complex type</a> or
                        <a href="http://www.w3.org/TR/xmlschema-2#rf=defn" target="schema-rec">simple type</a> defintion.  These
                        patterns define additional validation rules that go
                        above-and-beyond what can be expressed in XML Schema.  The
                        most common rule checks the condition that an instance of
                        a type can have either an nullFlavor
                        or some combination of other s but not both.
                        Please refer to the Schematron specification
                        [<a href="http://www.schematron.com">http://www.schematron.com</a>] for further information.
                        
                     </p>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>&nbsp;</td>
                  <td class="body_col">
                     <p>
                        This schema does not completely represent all constraints for
                        every data type as specified in the Data Types Abstract
                        Specification.  For example, the distinction between
                        <a class="termref" href="#dtimpl-SET">SET</a>, <a class="termref" href="#dtimpl-BAG">BAG</a>
                        and <a class="termref" href="#dtimpl-LIST">LIST</a> (unique/unordered,
                        non-unique/unordered and non-unique/ordered) are not enforced
                        by this schema.  The Schematron rules described in above can
                        be used to check some, but not all, of these additional
                        contraints.  This has the implication that an instance which
                        validates against the schema may still not be a valid HL7
                        instance.
                        
                     </p>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>&nbsp;</td>
                  <td class="body_col">
                     <p>
                        The schema is contained in two separate
                        <a href="http://www.w3.org/TR/xmlschema-1/#key-schemaDoc">schema documents</a>,
                        one for the base types and a smaller one for instantiations
                        of generic types. Note: at present, definitions for generic
                        types that are used as the type of data type components are
                        defined in the <a href="http://www.w3.org/TR/xmlschema-1/#key-schemaDoc">schema document</a>
                        for the base types.
                        
                     </p>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>
                     <h3><a name="datatypes-base.xsd"></a>B.1 
                     </h3>
                  </td>
                  <td class="body_col">
                     <h3>Base Types</h3>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap> &nbsp; </td>
                  <td class="number_col" nowrap>&nbsp; </td>
                  <td class="body_col">
                     <table width="90%">
                        <tr>
                           <td class="schema"><pre>
               
&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;!--
    This schema is generated from a Generic Schema Definition (GSD)
    by gsd2xsl. Do not edit this file.
  --&gt;
&lt;xs:schema xmlns:sch="http://www.ascc.net/xml/schematron"

      xmlns:xs="http://www.w3.org/2001/XMLSchema"
      elementFormDefault="qualified"&gt;
   &lt;xs:annotation&gt;
      &lt;xs:documentation&gt;
           Copyright (c) 2001, 2002, 2003, 2004, 2005 Health Level Seven.
           All rights reserved.

           Redistribution and use in source and binary forms, with or
           without modification, are permitted provided that the following
           conditions are met:
           1. Redistributions of source code must retain the above
              copyright notice, this list of conditions and the following
              disclaimer.
           2. Redistributions in binary form must reproduce the above
              copyright notice, this list of conditions and the following
              disclaimer in the documentation and/or other materials
              provided with the distribution.
           3. All advertising materials mentioning features or use of this
              software must display the following acknowledgement:
           
           This product includes software developed by Health Level Seven.
 
           THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS
           ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
           NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
           FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT
           SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
           INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
           DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
           GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
           INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
           WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
           NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
           OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
           DAMAGE.
        
           Generated by $Id: gsd2xsd.xsl,v 1.4 2005/04/17 03:20:15 lmckenzi
           Exp $
&lt;/xs:documentation&gt;
   &lt;/xs:annotation&gt;
   &lt;xs:include schemaLocation="voc.xsd"/&gt;
   &lt;xs:annotation&gt;
      &lt;xs:documentation&gt;
        Generated by $Id: v3dt-schema.xsl,v 1.5 2005/05/24 05:44:38 lmckenzi
        Exp $
&lt;/xs:documentation&gt;
   &lt;/xs:annotation&gt;
   &lt;xs:complexType name="ANY" abstract="true"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            Defines the basic properties of every data value. This
            is an abstract type, meaning that no value can be just
            a data value without belonging to any concrete type.
            Every concrete type is a specialization of this
            general abstract DataValue type.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:attribute name="nullFlavor" type="NullFlavor" use="optional"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
               An exceptional value expressing missing information
               and possibly the reason why the information is missing.
            &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
      &lt;/xs:attribute&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:simpleType name="bl"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            The Boolean type stands for the values of two-valued logic.
            A Boolean value can be either true or
            false, or, as any other value may be NULL.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:restriction base="xs:boolean"&gt;
         &lt;xs:pattern value="true|false"/&gt;
      &lt;/xs:restriction&gt;
   &lt;/xs:simpleType&gt;
   &lt;xs:complexType name="BL"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            The Boolean type stands for the values of two-valued logic.
            A Boolean value can be either true or
            false, or, as any other value may be NULL.
         &lt;/xs:documentation&gt;
         &lt;xs:appinfo&gt;
            &lt;sch:pattern name="validate BL"&gt;
               &lt;sch:rule abstract="true" id="rule-BL"&gt;
                  &lt;sch:report test="(@nullFlavor or @value) and
                     not(@nullFlavor and @value)"/&gt;
               &lt;/sch:rule&gt;
            &lt;/sch:pattern&gt;
         &lt;/xs:appinfo&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="ANY"&gt;
            &lt;xs:attribute name="value" use="optional" type="bl"/&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:simpleType name="bn"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            The BooleanNonNull type is used where a Boolean cannot
            have a null value. A Boolean value can be either
            true or false.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:restriction base="bl"/&gt;
   &lt;/xs:simpleType&gt;
   &lt;xs:complexType name="ANYNonNull"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            The BooleanNonNull type is used where a Boolean cannot
            have a null value. A Boolean value can be either
            true or false.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ANY"&gt;
            &lt;xs:attribute name="nullFlavor" type="NullFlavor"
               use="prohibited"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="BN"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            The BooleanNonNull type is used where a Boolean cannot
            have a null value. A Boolean value can be either
            true or false.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="ANYNonNull"&gt;
            &lt;xs:attribute name="value" use="optional" type="bn"/&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="BIN" abstract="true" mixed="true"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            Binary data is a raw block of bits. Binary data is a
            protected type that MUST not be used outside the data
            type specification.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="ANY"&gt;
            &lt;xs:attribute name="representation" use="optional"
                  type="BinaryDataEncoding" default="TXT"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     Specifies the representation of the binary data that
                     is the content of the binary data value.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:simpleType name="bin"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            Binary data is a raw block of bits. Binary data is a
            protected type that MUST not be used outside the data
            type specification.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:restriction base="xs:base64Binary"/&gt;
   &lt;/xs:simpleType&gt;
   &lt;xs:simpleType name="BinaryDataEncoding"&gt;
      &lt;xs:restriction base="xs:NMTOKEN"&gt;
         &lt;xs:enumeration value="B64"/&gt;
         &lt;xs:enumeration value="TXT"/&gt;
      &lt;/xs:restriction&gt;
   &lt;/xs:simpleType&gt;
   &lt;xs:complexType name="ED" mixed="true"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            Data that is primarily intended for human interpretation
            or for further machine processing is outside the scope of
            HL7. This includes unformatted or formatted written language,
            multimedia data, or structured information as defined by a
            different standard (e.g., XML-signatures.)  Instead of the
            data itself, an ED may contain 
            only a reference (see TEL.) Note
            that the ST data type is a
            specialization of the ED data type
            when the ED media type is text/plain.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="BIN"&gt;
            &lt;xs:sequence&gt;
               &lt;xs:element name="reference" type="TEL" minOccurs="0"
                     maxOccurs="1"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                        A telecommunication address (TEL), such as a URL
                        for HTTP or FTP, which will resolve to precisely
                        the same binary data that could as well have been
                        provided as inline data.
                     &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
               &lt;xs:element name="thumbnail" minOccurs="0" maxOccurs="1"
                  type="thumbnail"/&gt;
            &lt;/xs:sequence&gt;
            &lt;xs:attribute name="mediaType" type="cs" use="optional"
                  default="text/plain"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     Identifies the type of the encapsulated data and
                     identifies a method to interpret or render the data.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
            &lt;xs:attribute name="language" type="cs" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     For character based information the language property
                     specifies the human language of the text.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
            &lt;xs:attribute name="compression" type="CompressionAlgorithm"
                  use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     Indicates whether the raw byte data is compressed,
                     and what compression algorithm was used.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
            &lt;xs:attribute name="integrityCheck" type="bin" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     The integrity check is a short binary value representing
                     a cryptographically strong checksum that is calculated
                     over the binary data. The purpose of this property, when
                     communicated with a reference is for anyone to validate
                     later whether the reference still resolved to the same
                     data that the reference resolved to when the encapsulated
                     data value with reference was created.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
            &lt;xs:attribute name="integrityCheckAlgorithm"
                  type="IntegrityCheckAlgorithm" use="optional"
                  default="SHA-1"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     Specifies the algorithm used to compute the
                     integrityCheck value.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="thumbnail" mixed="true"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
                     A thumbnail is an abbreviated rendition of the full
                     data. A thumbnail requires significantly fewer
                     resources than the full data, while still maintaining
                     some distinctive similarity with the full data. A
                     thumbnail is typically used with by-reference
                     encapsulated data. It allows a user to select data
                     more efficiently before actually downloading through
                     the reference.
                  &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ED"&gt;
            &lt;xs:sequence&gt;
               &lt;xs:element name="reference" type="TEL" minOccurs="0"
                  maxOccurs="1"/&gt;
               &lt;xs:element name="thumbnail" type="thumbnail" minOccurs="0"
                  maxOccurs="0"/&gt;
            &lt;/xs:sequence&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:simpleType name="st"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            The character string data type stands for text data,
            primarily intended for machine processing (e.g.,
            sorting, querying, indexing, etc.) Used for names,
            symbols, and formal expressions.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:restriction base="xs:string"&gt;
         &lt;xs:minLength value="1"/&gt;
      &lt;/xs:restriction&gt;
   &lt;/xs:simpleType&gt;
   &lt;xs:complexType name="ST" mixed="true"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            The character string data type stands for text data,
            primarily intended for machine processing (e.g.,
            sorting, querying, indexing, etc.) Used for names,
            symbols, and formal expressions.
         &lt;/xs:documentation&gt;
         &lt;xs:appinfo&gt;
            &lt;sch:pattern name="validate ST"&gt;
               &lt;sch:rule abstract="true" id="rule-ST"&gt;
                  &lt;sch:report test="(@nullFlavor or text()) and
                        not(@nullFlavor and text())"&gt;
                     &lt;p&gt;
                        Text content is only allowed in non-NULL
                        values.
                     &lt;/p&gt;
                  &lt;/sch:report&gt;
               &lt;/sch:rule&gt;
            &lt;/sch:pattern&gt;
         &lt;/xs:appinfo&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ED"&gt;
            &lt;xs:sequence&gt;
               &lt;xs:element name="reference" type="TEL" minOccurs="0"
                  maxOccurs="0"/&gt;
               &lt;xs:element name="thumbnail" type="ED" minOccurs="0"
                  maxOccurs="0"/&gt;
            &lt;/xs:sequence&gt;
            &lt;xs:attribute name="representation" type="BinaryDataEncoding"
               fixed="TXT"/&gt;
            &lt;xs:attribute name="mediaType" type="cs" fixed="text/plain"/&gt;
            &lt;xs:attribute name="language" type="cs" use="optional"/&gt;
            &lt;xs:attribute name="compression" type="CompressionAlgorithm"
               use="prohibited"/&gt;
            &lt;xs:attribute name="integrityCheck" type="bin" use="prohibited"/&gt;
            &lt;xs:attribute name="integrityCheckAlgorithm"
               type="IntegrityCheckAlgorithm" use="prohibited"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:simpleType name="cs"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            Coded data in its simplest form, consists of a code.
            The code system and code system version is fixed by 
            the context in which the CS value occurs. CS is used
            for coded attributes that have a single HL7-defined
            value set.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:restriction base="xs:token"&gt;
         &lt;xs:pattern value="[^\s]+"/&gt;
      &lt;/xs:restriction&gt;
   &lt;/xs:simpleType&gt;
   &lt;xs:complexType name="CD"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            A concept descriptor represents any kind of concept usually
            by giving a code defined in a code system.  A concept
            descriptor can contain the original text or phrase that
            served as the basis of the coding and one or more
            translations into different coding systems. A concept
            descriptor can also contain qualifiers to describe, e.g.,
            the concept of a "left foot" as a postcoordinated term built
            from the primary code "FOOT" and the qualifier "LEFT".
            In exceptional cases, the concept descriptor need not
            contain a code but only the original text describing
            that concept.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="ANY"&gt;
            &lt;xs:sequence&gt;
               &lt;xs:element name="originalText" type="ED" minOccurs="0"
                     maxOccurs="1"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                        The text or phrase used as the basis for the coding.
                     &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
               &lt;xs:element name="qualifier" type="CR" minOccurs="0"
                     maxOccurs="unbounded"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                        Specifies additional codes that increase the
                        specificity of the primary code.
                     &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
               &lt;xs:element name="translation" type="CD" minOccurs="0"
                     maxOccurs="unbounded"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                        A set of other concept descriptors that translate
                        this concept descriptor into other code systems.
                     &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
            &lt;/xs:sequence&gt;
            &lt;xs:attribute name="code" type="cs" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     The plain code symbol defined by the code system.
                     For example, "784.0" is the code symbol of the ICD-9
                     code "784.0" for headache.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
            &lt;xs:attribute name="codeSystem" type="uid" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     Specifies the code system that defines the code.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
            &lt;xs:attribute name="codeSystemName" type="st" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     A common name of the coding system.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
            &lt;xs:attribute name="codeSystemVersion" type="st" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     If applicable, a version descriptor defined
                     specifically for the given code system.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
            &lt;xs:attribute name="displayName" type="st" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     A name or title for the code, under which the sending
                     system shows the code value to its users.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="CE"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            Coded data, consists of a coded value (CV)
            and, optionally, coded value(s) from other coding systems
            that identify the same concept. Used when alternative
            codes may exist.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="CD"&gt;
            &lt;xs:sequence&gt;
               &lt;xs:element name="originalText" type="ED" minOccurs="0"
                     maxOccurs="1"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                        The text or phrase used as the basis for the coding.
                     &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
               &lt;xs:element name="qualifier" type="CR" minOccurs="0"
                  maxOccurs="0"/&gt;
               &lt;xs:element name="translation" type="CD" minOccurs="0"
                     maxOccurs="unbounded"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                        A set of other concept descriptors that translate
                        this concept descriptor into other code systems.
                     &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
            &lt;/xs:sequence&gt;
            &lt;xs:attribute name="code" type="cs" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     The plain code symbol defined by the code system.
                     For example, "784.0" is the code symbol of the ICD-9
                     code "784.0" for headache.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
            &lt;xs:attribute name="codeSystem" type="uid" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     Specifies the code system that defines the code.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
            &lt;xs:attribute name="codeSystemName" type="st" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     A common name of the coding system.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
            &lt;xs:attribute name="codeSystemVersion" type="st" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     If applicable, a version descriptor defined
                     specifically for the given code system.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
            &lt;xs:attribute name="displayName" type="st" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     A name or title for the code, under which the sending
                     system shows the code value to its users.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="CV"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            Coded data, consists of a code, display name, code system,
            and original text. Used when a single code value must be sent.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="CE"&gt;
            &lt;xs:sequence&gt;
               &lt;xs:element name="originalText" type="ED" minOccurs="0"
                     maxOccurs="1"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                        The text or phrase used as the basis for the coding.
                     &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
               &lt;xs:element name="translation" type="CD" minOccurs="0"
                  maxOccurs="0"/&gt;
            &lt;/xs:sequence&gt;
            &lt;xs:attribute name="code" type="cs" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     The plain code symbol defined by the code system.
                     For example, "784.0" is the code symbol of the ICD-9
                     code "784.0" for headache.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
            &lt;xs:attribute name="codeSystem" type="uid" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     Specifies the code system that defines the code.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
            &lt;xs:attribute name="codeSystemName" type="st" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     A common name of the coding system.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
            &lt;xs:attribute name="codeSystemVersion" type="st" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     If applicable, a version descriptor defined
                     specifically for the given code system.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
            &lt;xs:attribute name="displayName" type="st" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     A name or title for the code, under which the sending
                     system shows the code value to its users.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="CS"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            Coded data, consists of a code, display name, code system,
            and original text. Used when a single code value must be sent.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="CV"&gt;
            &lt;xs:attribute name="code" type="cs" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     The plain code symbol defined by the code system.
                     For example, "784.0" is the code symbol of the ICD-9
                     code "784.0" for headache.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
            &lt;xs:attribute name="codeSystem" type="uid" use="prohibited"/&gt;
            &lt;xs:attribute name="codeSystemName" type="st" use="prohibited"/&gt;
            &lt;xs:attribute name="codeSystemVersion" type="st" use="prohibited"/&gt;
            &lt;xs:attribute name="displayName" type="st" use="prohibited"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="CO"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            Coded data, where the domain from which the codeset comes
            is ordered. The Coded Ordinal data type adds semantics
            related to ordering so that models that make use of such
            domains may introduce model elements that involve statements
            about the order of the terms in a domain. 
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="CV"/&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="CR"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            A concept qualifier code with optionally named role.
            Both qualifier role and value codes must be defined by
            the coding system.  For example, if SNOMED RT defines a
            concept "leg", a role relation "has-laterality", and
            another concept "left", the concept role relation allows
            to add the qualifier "has-laterality: left" to a primary
            code "leg" to construct the meaning "left leg".
         &lt;/xs:documentation&gt;
         &lt;xs:appinfo&gt;
            &lt;sch:pattern name="validate CR"&gt;
               &lt;sch:rule abstract="true" id="rule-CR"&gt;
                  &lt;sch:report test="(value or @nullFlavor) and
                        not(@nullFlavor and node())"&gt;
                     &lt;p&gt;
                        A value component is required or else the
                        code role is NULL.
                     &lt;/p&gt;
                  &lt;/sch:report&gt;
               &lt;/sch:rule&gt;
            &lt;/sch:pattern&gt;
         &lt;/xs:appinfo&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="ANY"&gt;
            &lt;xs:sequence&gt;
               &lt;xs:element name="name" type="CV" minOccurs="0" maxOccurs="1"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                        Specifies the manner in which the concept role value
                        contributes to the meaning of a code phrase.  For
                        example, if SNOMED RT defines a concept "leg", a role
                        relation "has-laterality", and another concept "left",
                        the concept role relation allows to add the qualifier
                        "has-laterality: left" to a primary code "leg" to
                        construct the meaning "left leg".  In this example
                        "has-laterality" is the CR.name.
                     &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
               &lt;xs:element name="value" type="CD" minOccurs="0" maxOccurs="1"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                        The concept that modifies the primary code of a code
                        phrase through the role relation.  For example, if
                        SNOMED RT defines a concept "leg", a role relation
                        "has-laterality", and another concept "left", the
                        concept role relation allows adding the qualifier
                        "has-laterality: left" to a primary code "leg" to
                        construct the meaning "left leg".  In this example
                        "left" is the CR.value.
                     &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
            &lt;/xs:sequence&gt;
            &lt;xs:attribute name="inverted" type="bn" use="optional"
                  default="false"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     Indicates if the sense of the role name is inverted.
                     This can be used in cases where the underlying code
                     system defines inversion but does not provide reciprocal
                     pairs of role names. By default, inverted is false.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="SC" mixed="true"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            A ST that optionally may have a code attached.
            The text must always be present if a code is present. The
            code is often a local code.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="ST"&gt;
            &lt;xs:attribute name="code" type="cs" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     The plain code symbol defined by the code system.
                     For example, "784.0" is the code symbol of the ICD-9
                     code "784.0" for headache.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
            &lt;xs:attribute name="codeSystem" type="uid" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     Specifies the code system that defines the code.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
            &lt;xs:attribute name="codeSystemName" type="st" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     A common name of the coding system.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
            &lt;xs:attribute name="codeSystemVersion" type="st" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     If applicable, a version descriptor defined
                     specifically for the given code system.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
            &lt;xs:attribute name="displayName" type="st" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     A name or title for the code, under which the sending
                     system shows the code value to its users.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:simpleType name="uid"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            A unique identifier string is a character string which
            identifies an object in a globally unique and timeless
            manner. The allowable formats and values and procedures
            of this data type are strictly controlled by HL7. At this
            time, user-assigned identifiers may be certain character
            representations of ISO Object Identifiers (OID) and DCE
            Universally Unique Identifiers (UUID). HL7 also reserves
            the right to assign other forms of UIDs, such as mnemonic
            identifiers for code systems.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:union memberTypes="oid uuid ruid"/&gt;
   &lt;/xs:simpleType&gt;
   &lt;xs:simpleType name="oid"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            A globally unique string representing an ISO Object Identifier
            (OID) in a form that consists only of non-negative numbers with
            no leading zeros and dots (e.g., "2.16.840.1.113883.3.1").
            According to ISO, OIDs are paths in a tree structure, with the
            left-most number representing the root and the right-most number
            representing a leaf.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:restriction base="xs:string"&gt;
         &lt;xs:pattern value="[0-2](\.(0|[1-9][0-9]*))*"/&gt;
      &lt;/xs:restriction&gt;
   &lt;/xs:simpleType&gt;
   &lt;xs:simpleType name="uuid"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            A DCE Universal Unique Identifier is a globally unique
            string consisting of 5 groups of upper- or lower-case
            hexadecimal digits having 8, 4, 4, 4, and 12 places
            respectively. UUIDs are assigned using Ethernet MAC
            addresses, the point in time of creation and some random
            components. This mix is believed to generate sufficiently
            unique identifiers without any organizational policy for
            identifier assignment (in fact this piggy-backs on the
            organization of MAC address assignment.)
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:restriction base="xs:string"&gt;
         &lt;xs:pattern value="[0-9a-zA-Z]{8}-[0-9a-zA-Z]{4}-
            [0-9a-zA-Z]{4}-[0-9a-zA-Z]{4}-[0-9a-zA-Z]{12}"/&gt;
      &lt;/xs:restriction&gt;
   &lt;/xs:simpleType&gt;
   &lt;xs:simpleType name="ruid"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            HL7 reserved identifiers are strings consisting only of
            (US-ASCII) letters, digits and hyphens, where the first
            character must be a letter. HL7 may assign these reserved
            identifiers as mnemonic identifiers for major concepts of
            interest to HL7.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:restriction base="xs:string"&gt;
         &lt;xs:pattern value="[A-Za-z][A-Za-z0-9\-]*"/&gt;
      &lt;/xs:restriction&gt;
   &lt;/xs:simpleType&gt;
   &lt;xs:complexType name="II"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            An identifier that uniquely identifies a thing or object.
            Examples are object identifier for HL7 RIM objects,
            medical record number, order id, service catalog item id,
            Vehicle Identification Number (VIN), etc. Instance
            identifiers are defined based on ISO object identifiers.
         &lt;/xs:documentation&gt;
         &lt;xs:appinfo&gt;
            &lt;sch:pattern name="validate II"&gt;
               &lt;sch:rule abstract="true" id="rule-II"&gt;
                  &lt;sch:report test="(@root or @nullFlavor) and
                        not(@root and @nullFlavor)"&gt;
                     A root component is required or else the II value is NULL.
                  &lt;/sch:report&gt;
               &lt;/sch:rule&gt;
            &lt;/sch:pattern&gt;
         &lt;/xs:appinfo&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="ANY"&gt;
            &lt;xs:attribute name="root" type="uid" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     A unique identifier that guarantees the global uniqueness
                     of the instance identifier. The root alone may be the
                     entire instance identifier.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
            &lt;xs:attribute name="extension" type="st" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     A character string as a unique identifier within the
                     scope of the identifier root.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
            &lt;xs:attribute name="assigningAuthorityName" type="st"
                  use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     A human readable name or mnemonic for the assigning
                     authority. This name may be provided solely for the
                     convenience of unaided humans interpreting an II value
                     and can have no computational meaning. Note: no
                     automated processing must depend on the assigning
                     authority name to be present in any form.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
            &lt;xs:attribute name="displayable" type="bl" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     Specifies if the identifier is intended for human
                     display and data entry (displayable = true) as
                     opposed to pure machine interoperation (displayable
                     = false).
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:simpleType name="url"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            A telecommunications address  specified according to
            Internet standard RFC 1738
            [http://www.ietf.org/rfc/rfc1738.txt]. The
            URL specifies the protocol and the contact point defined
            by that protocol for the resource.  Notable uses of the
            telecommunication address data type are for telephone and
            telefax numbers, e-mail addresses, Hypertext references,
            FTP references, etc.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:restriction base="xs:anyURI"/&gt;
   &lt;/xs:simpleType&gt;
   &lt;xs:complexType name="URL" abstract="true"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            A telecommunications address  specified according to
            Internet standard RFC 1738
            [http://www.ietf.org/rfc/rfc1738.txt]. The
            URL specifies the protocol and the contact point defined
            by that protocol for the resource.  Notable uses of the
            telecommunication address data type are for telephone and
            telefax numbers, e-mail addresses, Hypertext references,
            FTP references, etc.
         &lt;/xs:documentation&gt;
         &lt;xs:appinfo&gt;
            &lt;sch:pattern name="validate URL"&gt;
               &lt;sch:rule abstract="true" id="rule-URL"&gt;
                  &lt;sch:report test="(@nullFlavor or @value) and
                     not(@nullFlavor and @value)"/&gt;
               &lt;/sch:rule&gt;
            &lt;/sch:pattern&gt;
         &lt;/xs:appinfo&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="ANY"&gt;
            &lt;xs:attribute name="value" type="url" use="optional"/&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:simpleType name="ts"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            A quantity specifying a point on the axis of natural time.
            A point in time is most often represented as a calendar
            expression.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:restriction base="xs:string"&gt;
         &lt;xs:pattern value="[0-9]{1,8}|([0-9]{9,14}|[0-9]{14,14}
            \.[0-9]+)([+\-][0-9]{1,4})?"/&gt;
      &lt;/xs:restriction&gt;
   &lt;/xs:simpleType&gt;
   &lt;xs:complexType name="TS"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            A quantity specifying a point on the axis of natural time.
            A point in time is most often represented as a calendar
            expression.
         &lt;/xs:documentation&gt;
         &lt;xs:appinfo&gt;
            &lt;diff&gt;PQ&lt;/diff&gt;
         &lt;/xs:appinfo&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="QTY"&gt;
            &lt;xs:attribute name="value" use="optional" type="ts"/&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="TEL"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            A telephone number (voice or fax), e-mail address, or
            other locator for a resource (information or service)
            mediated by telecommunication equipment. The address
            is specified as a Universal Resource Locator (URL)
            qualified by time specification and use codes that help
            in deciding which address to use for a given time and
            purpose.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="URL"&gt;
            &lt;xs:sequence&gt;
               &lt;xs:element name="useablePeriod" minOccurs="0"
                     maxOccurs="unbounded" type="SXCM_TS"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                     Specifies the periods of time during which the
                     telecommunication address can be used.  For a
                     telephone number, this can indicate the time of day
                     in which the party can be reached on that telephone.
                     For a web address, it may specify a time range in
                     which the web content is promised to be available
                     under the given address.
                  &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
            &lt;/xs:sequence&gt;
            &lt;xs:attribute name="use" use="optional"
                  type="set_TelecommunicationAddressUse"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     One or more codes advising a system or user which
                     telecommunication address in a set of like addresses
                     to select for a given telecommunication need.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="ADXP" mixed="true"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            A character string that may have a type-tag signifying its
            role in the address. Typical parts that exist in about
            every address are street, house number, or post box,
            postal code, city, country but other roles may be defined
            regionally, nationally, or on an enterprise level (e.g. in
            military addresses). Addresses are usually broken up into
            lines, which are indicated by special line-breaking
            delimiter elements (e.g., DEL).
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="ST"&gt;
            &lt;xs:attribute name="partType" type="AddressPartType"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     Specifies whether an address part names the street,
                     city, country, postal code, post box, etc. If the type
                     is NULL the address part is unclassified and would
                     simply appear on an address label as is.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType mixed="true" name="adxp.delimiter"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ADXP"&gt;
            &lt;xs:attribute name="partType" type="AddressPartType" fixed="DEL"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType mixed="true" name="adxp.country"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ADXP"&gt;
            &lt;xs:attribute name="partType" type="AddressPartType" fixed="CNT"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType mixed="true" name="adxp.state"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ADXP"&gt;
            &lt;xs:attribute name="partType" type="AddressPartType" fixed="STA"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType mixed="true" name="adxp.county"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ADXP"&gt;
            &lt;xs:attribute name="partType" type="AddressPartType" fixed="CPA"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType mixed="true" name="adxp.city"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ADXP"&gt;
            &lt;xs:attribute name="partType" type="AddressPartType" fixed="CTY"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType mixed="true" name="adxp.postalCode"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ADXP"&gt;
            &lt;xs:attribute name="partType" type="AddressPartType" fixed="ZIP"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType mixed="true" name="adxp.streetAddressLine"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ADXP"&gt;
            &lt;xs:attribute name="partType" type="AddressPartType" fixed="SAL"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType mixed="true" name="adxp.houseNumber"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ADXP"&gt;
            &lt;xs:attribute name="partType" type="AddressPartType" fixed="BNR"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType mixed="true" name="adxp.houseNumberNumeric"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ADXP"&gt;
            &lt;xs:attribute name="partType" type="AddressPartType" fixed="BNN"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType mixed="true" name="adxp.direction"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ADXP"&gt;
            &lt;xs:attribute name="partType" type="AddressPartType" fixed="DIR"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType mixed="true" name="adxp.streetName"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ADXP"&gt;
            &lt;xs:attribute name="partType" type="AddressPartType" fixed="STR"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType mixed="true" name="adxp.streetNameBase"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ADXP"&gt;
            &lt;xs:attribute name="partType" type="AddressPartType" fixed="STB"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;&lt;!--
   jaxb implementors note: the jaxb code generator (v1.0.?) will
   fail to append "Type" to streetNameType so that there will be
   duplicate definitions in the java source for streetNameType.
   You will have to fix this manually.
  --&gt;
   &lt;xs:complexType mixed="true" name="adxp.streetNameType"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ADXP"&gt;
            &lt;xs:attribute name="partType" type="AddressPartType"
               fixed="STTYP"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType mixed="true" name="adxp.additionalLocator"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ADXP"&gt;
            &lt;xs:attribute name="partType" type="AddressPartType" fixed="ADL"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType mixed="true" name="adxp.unitID"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ADXP"&gt;
            &lt;xs:attribute name="partType" type="AddressPartType" fixed="UNID"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType mixed="true" name="adxp.unitType"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ADXP"&gt;
            &lt;xs:attribute name="partType" type="AddressPartType" fixed="UNIT"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType mixed="true" name="adxp.careOf"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ADXP"&gt;
            &lt;xs:attribute name="partType" type="AddressPartType" fixed="CAR"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType mixed="true" name="adxp.censusTract"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ADXP"&gt;
            &lt;xs:attribute name="partType" type="AddressPartType" fixed="CEN"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType mixed="true" name="adxp.deliveryAddressLine"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ADXP"&gt;
            &lt;xs:attribute name="partType" type="AddressPartType" fixed="DAL"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType mixed="true" name="adxp.deliveryInstallationType"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ADXP"&gt;
            &lt;xs:attribute name="partType" type="AddressPartType"
               fixed="DINST"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType mixed="true" name="adxp.deliveryInstallationArea"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ADXP"&gt;
            &lt;xs:attribute name="partType" type="AddressPartType"
               fixed="DINSTA"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType mixed="true" name="adxp.deliveryInstallationQualifier"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ADXP"&gt;
            &lt;xs:attribute name="partType" type="AddressPartType"
               fixed="DINSTQ"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType mixed="true" name="adxp.deliveryMode"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ADXP"&gt;
            &lt;xs:attribute name="partType" type="AddressPartType" fixed="DMOD"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType mixed="true" name="adxp.deliveryModeIdentifier"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ADXP"&gt;
            &lt;xs:attribute name="partType" type="AddressPartType"
               fixed="DMODID"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType mixed="true" name="adxp.buildingNumberSuffix"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ADXP"&gt;
            &lt;xs:attribute name="partType" type="AddressPartType" fixed="BNS"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType mixed="true" name="adxp.postBox"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ADXP"&gt;
            &lt;xs:attribute name="partType" type="AddressPartType" fixed="POB"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType mixed="true" name="adxp.precinct"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ADXP"&gt;
            &lt;xs:attribute name="partType" type="AddressPartType" fixed="PRE"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="AD" mixed="true"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            Mailing and home or office addresses. A sequence of
            address parts, such as street or post office Box, city,
            postal code, country, etc.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="ANY"&gt;
            &lt;xs:sequence&gt;
               &lt;xs:choice minOccurs="0" maxOccurs="unbounded"&gt;
                  &lt;xs:element name="delimiter" type="adxp.delimiter"/&gt;
                  &lt;xs:element name="country" type="adxp.country"/&gt;
                  &lt;xs:element name="state" type="adxp.state"/&gt;
                  &lt;xs:element name="county" type="adxp.county"/&gt;
                  &lt;xs:element name="city" type="adxp.city"/&gt;
                  &lt;xs:element name="postalCode" type="adxp.postalCode"/&gt;
                  &lt;xs:element name="streetAddressLine"
                     type="adxp.streetAddressLine"/&gt;
                  &lt;xs:element name="houseNumber" type="adxp.houseNumber"/&gt;
                  &lt;xs:element name="houseNumberNumeric"
                     type="adxp.houseNumberNumeric"/&gt;
                  &lt;xs:element name="direction" type="adxp.direction"/&gt;
                  &lt;xs:element name="streetName" type="adxp.streetName"/&gt;
                  &lt;xs:element name="streetNameBase"
                     type="adxp.streetNameBase"/&gt;
                  &lt;xs:element name="streetNameType"
                     type="adxp.streetNameType"/&gt;
                  &lt;xs:element name="additionalLocator"
                     type="adxp.additionalLocator"/&gt;
                  &lt;xs:element name="unitID" type="adxp.unitID"/&gt;
                  &lt;xs:element name="unitType" type="adxp.unitType"/&gt;
                  &lt;xs:element name="careOf" type="adxp.careOf"/&gt;
                  &lt;xs:element name="censusTract"
                     type="adxp.censusTract"/&gt;
                  &lt;xs:element name="deliveryAddressLine"
                     type="adxp.deliveryAddressLine"/&gt;
                  &lt;xs:element name="deliveryInstallationType"
                     type="adxp.deliveryInstallationType"/&gt;
                  &lt;xs:element name="deliveryInstallationArea"
                     type="adxp.deliveryInstallationArea"/&gt;
                  &lt;xs:element name="deliveryInstallationQualifier"
                     type="adxp.deliveryInstallationQualifier"/&gt;
                  &lt;xs:element name="deliveryMode"
                     type="adxp.deliveryMode"/&gt;
                  &lt;xs:element name="deliveryModeIdentifier"
                     type="adxp.deliveryModeIdentifier"/&gt;
                  &lt;xs:element name="buildingNumberSuffix"
                     type="adxp.buildingNumberSuffix"/&gt;
                  &lt;xs:element name="postBox" type="adxp.postBox"/&gt;
                  &lt;xs:element name="precinct" type="adxp.precinct"/&gt;
               &lt;/xs:choice&gt;
               &lt;xs:element name="useablePeriod" minOccurs="0"
                     maxOccurs="unbounded" type="SXCM_TS"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                        A General Timing Specification (GTS) specifying the
                        periods of time during which the address can be used.
                        This is used to specify different addresses for
                        different times of the year or to refer to historical
                        addresses.
                     &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
            &lt;/xs:sequence&gt;
            &lt;xs:attribute name="use" use="optional"
                  type="set_PostalAddressUse"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     A set of codes advising a system or user which address
                     in a set of like addresses to select for a given purpose.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
            &lt;xs:attribute name="isNotOrdered" type="bl" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     A boolean value specifying whether the order of the
                     address parts is known or not. While the address parts
                     are always a Sequence, the order in which they are
                     presented may or may not be known. Where this matters, the
                     isNotOrdered property can be used to convey this
                     information.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="ENXP" mixed="true"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            A character string token representing a part of a name.
            May have a type code signifying the role of the part in
            the whole entity name, and a qualifier code for more detail
            about the name part type. Typical name parts for person
            names are given names, and family names, titles, etc.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="ST"&gt;
            &lt;xs:attribute name="partType" type="EntityNamePartType"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     Indicates whether the name part is a given name,
                     family name, prefix, suffix, etc.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
            &lt;xs:attribute name="qualifier" use="optional"
                  type="set_EntityNamePartQualifier"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     The qualifier is a set of codes each of which specifies
                     a certain subcategory of the name part in addition to
                     the main name part type. For example, a given name may
                     be flagged as a nickname, a family name may be a
                     pseudonym or a name of public records.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="en.delimiter" mixed="true"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ENXP"&gt;
            &lt;xs:attribute name="partType" type="EntityNamePartType"
               fixed="DEL"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="en.family" mixed="true"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ENXP"&gt;
            &lt;xs:attribute name="partType" type="EntityNamePartType"
               fixed="FAM"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="en.given" mixed="true"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ENXP"&gt;
            &lt;xs:attribute name="partType" type="EntityNamePartType"
               fixed="GIV"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="en.prefix" mixed="true"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ENXP"&gt;
            &lt;xs:attribute name="partType" type="EntityNamePartType"
               fixed="PFX"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="en.suffix" mixed="true"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="ENXP"&gt;
            &lt;xs:attribute name="partType" type="EntityNamePartType"
               fixed="SFX"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="EN" mixed="true"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            A name for a person, organization, place or thing. A
            sequence of name parts, such as given name or family
            name, prefix, suffix, etc. Examples for entity name
            values are "Jim Bob Walton, Jr.", "Health Level Seven,
            Inc.", "Lake Tahoe", etc. An entity name may be as simple
            as a character string or may consist of several entity name
            parts, such as, "Jim", "Bob", "Walton", and "Jr.", "Health
            Level Seven" and "Inc.", "Lake" and "Tahoe".
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="ANY"&gt;
            &lt;xs:sequence&gt;
               &lt;xs:choice minOccurs="0" maxOccurs="unbounded"&gt;
                  &lt;xs:element name="delimiter" type="en.delimiter"/&gt;
                  &lt;xs:element name="family" type="en.family"/&gt;
                  &lt;xs:element name="given" type="en.given"/&gt;
                  &lt;xs:element name="prefix" type="en.prefix"/&gt;
                  &lt;xs:element name="suffix" type="en.suffix"/&gt;
               &lt;/xs:choice&gt;
               &lt;xs:element name="validTime" minOccurs="0" maxOccurs="1"
                     type="IVL_TS"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                        An interval of time specifying the time during which
                        the name is or was used for the entity. This
                        accomodates the fact that people change names for
                        people, places and things.
                     &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
            &lt;/xs:sequence&gt;
            &lt;xs:attribute name="use" use="optional" type="set_EntityNameUse"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     A set of codes advising a system or user which name
                     in a set of like names to select for a given purpose.
                     A name without specific use code might be a default
                     name useful for any purpose, but a name with a specific
                     use code would be preferred for that respective purpose.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="PN" mixed="true"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            A name for a person. A sequence of name parts, such as
            given name or family name, prefix, suffix, etc. PN differs
            from EN because the qualifier type cannot include LS
            (Legal Status).
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="EN"/&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="ON" mixed="true"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            A name for an organization. A sequence of name parts.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="EN"&gt;
            &lt;xs:sequence&gt;
               &lt;xs:choice minOccurs="0" maxOccurs="unbounded"&gt;
                  &lt;xs:element name="delimiter" type="en.delimiter"/&gt;
                  &lt;xs:element name="prefix" type="en.prefix"/&gt;
                  &lt;xs:element name="suffix" type="en.suffix"/&gt;
               &lt;/xs:choice&gt;
               &lt;xs:element name="validTime" minOccurs="0" maxOccurs="1"
                     type="IVL_TS"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                        An interval of time specifying the time during which
                        the name is or was used for the entity. This
                        accomodates the fact that people change names for
                        people, places and things.
                     &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
            &lt;/xs:sequence&gt;
            &lt;xs:attribute name="use" use="optional" type="set_EntityNameUse"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     A set of codes advising a system or user which name
                     in a set of like names to select for a given purpose.
                     A name without specific use code might be a default
                     name useful for any purpose, but a name with a specific
                     use code would be preferred for that respective purpose.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="TN" mixed="true"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            A restriction of entity name that is effectively a simple
            string used for a simple name for things and places.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="EN"&gt;
            &lt;xs:sequence&gt;
               &lt;xs:element name="validTime" minOccurs="0" maxOccurs="1"
                     type="IVL_TS"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                        An interval of time specifying the time during which
                        the name is or was used for the entity. This
                        accomodates the fact that people change names for
                        people, places and things.
                     &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
            &lt;/xs:sequence&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="QTY" abstract="true"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            The quantity data type is an abstract generalization
            for all data types (1) whose value set has an order
            relation (less-or-equal) and (2) where difference is
            defined in all of the data type's totally ordered value
            subsets.  The quantity type abstraction is needed in
            defining certain other types, such as the interval and
            the probability distribution.
         &lt;/xs:documentation&gt;
         &lt;xs:appinfo&gt;
            &lt;diff&gt;QTY&lt;/diff&gt;
         &lt;/xs:appinfo&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="ANY"/&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:simpleType name="int"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            Integer numbers (-1,0,1,2, 100, 3398129, etc.) are precise
            numbers that are results of counting and enumerating.
            Integer numbers are discrete, the set of integers is
            infinite but countable.  No arbitrary limit is imposed on
            the range of integer numbers. Two NULL flavors are
            defined for the positive and negative infinity.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:restriction base="xs:integer"/&gt;
   &lt;/xs:simpleType&gt;
   &lt;xs:complexType name="INT"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            Integer numbers (-1,0,1,2, 100, 3398129, etc.) are precise
            numbers that are results of counting and enumerating.
            Integer numbers are discrete, the set of integers is
            infinite but countable.  No arbitrary limit is imposed on
            the range of integer numbers. Two NULL flavors are
            defined for the positive and negative infinity.
         &lt;/xs:documentation&gt;
         &lt;xs:appinfo&gt;
            &lt;diff&gt;INT&lt;/diff&gt;
            &lt;sch:pattern name="validate INT"&gt;
               &lt;sch:rule abstract="true" id="rule-INT"&gt;
                  &lt;sch:report test="(@value or @nullFlavor) and
                     not(@value and @nullFlavor)"/&gt;
               &lt;/sch:rule&gt;
            &lt;/sch:pattern&gt;
         &lt;/xs:appinfo&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="QTY"&gt;
            &lt;xs:attribute name="value" use="optional" type="int"/&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:simpleType name="real"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            Fractional numbers. Typically used whenever quantities
            are measured, estimated, or computed from other real
            numbers.  The typical representation is decimal, where
            the number of significant decimal digits is known as the
            precision. Real numbers are needed beyond integers
            whenever quantities of the real world are measured,
            estimated, or computed from other real numbers. The term
            "Real number" in this specification is used to mean
            that fractional values are covered without necessarily
            implying the full set of the mathematical real numbers.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:union memberTypes="xs:decimal xs:double"/&gt;
   &lt;/xs:simpleType&gt;
   &lt;xs:complexType name="REAL"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            Fractional numbers. Typically used whenever quantities
            are measured, estimated, or computed from other real
            numbers.  The typical representation is decimal, where
            the number of significant decimal digits is known as the
            precision. Real numbers are needed beyond integers
            whenever quantities of the real world are measured,
            estimated, or computed from other real numbers. The term
            "Real number" in this specification is used to mean
            that fractional values are covered without necessarily
            implying the full set of the mathematical real numbers.
         &lt;/xs:documentation&gt;
         &lt;xs:appinfo&gt;
            &lt;diff&gt;REAL&lt;/diff&gt;
            &lt;sch:pattern name="validate REAL"&gt;
               &lt;sch:rule abstract="true" id="rule-REAL"&gt;
                  &lt;sch:report test="(@nullFlavor or @value) and
                     not(@nullFlavor and @value)"/&gt;
               &lt;/sch:rule&gt;
            &lt;/sch:pattern&gt;
         &lt;/xs:appinfo&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="QTY"&gt;
            &lt;xs:attribute name="value" use="optional" type="real"/&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="PQR"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            A representation of a physical quantity in a unit from
            any code system. Used to show alternative representation
            for a physical quantity.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="CV"&gt;
            &lt;xs:attribute name="value" type="real" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     The magnitude of the measurement value in terms of
                     the unit specified in the code.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="PQ"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            A dimensioned quantity expressing the result of a
            measurement act.
        &lt;/xs:documentation&gt;
         &lt;xs:appinfo&gt;
            &lt;diff&gt;PQ&lt;/diff&gt;
         &lt;/xs:appinfo&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="QTY"&gt;
            &lt;xs:sequence&gt;
               &lt;xs:element name="translation" type="PQR" minOccurs="0"
                     maxOccurs="unbounded"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                        An alternative representation of the same physical
                        quantity expressed in a different unit, of a different
                        unit code system and possibly with a different value.
                     &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
            &lt;/xs:sequence&gt;
            &lt;xs:attribute name="value" type="real" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     The magnitude of the quantity measured in terms of
                     the unit.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
            &lt;xs:attribute name="unit" type="cs" use="optional" default="1"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     The unit of measure specified in the Unified Code for
                     Units of Measure (UCUM)
                     [http://aurora.rg.iupui.edu/UCUM].
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="MO"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            A monetary amount is a quantity expressing the amount of
            money in some currency. Currencies are the units in which
            monetary amounts are denominated in different economic
            regions. While the monetary amount is a single kind of
            quantity (money) the exchange rates between the different
            units are variable.  This is the principle difference
            between physical quantity and monetary amounts, and the
            reason why currency units are not physical units.
         &lt;/xs:documentation&gt;
         &lt;xs:appinfo&gt;
            &lt;diff&gt;MO&lt;/diff&gt;
            &lt;sch:pattern name="validate MO"&gt;
               &lt;sch:rule abstract="true" id="rule-MO"&gt;
                  &lt;sch:report test="not(@nullFlavor and
                     (@value or @currency))"/&gt;
               &lt;/sch:rule&gt;
            &lt;/sch:pattern&gt;
         &lt;/xs:appinfo&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="QTY"&gt;
            &lt;xs:attribute name="value" type="real" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     The magnitude of the monetary amount in terms of the
                     currency unit.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
            &lt;xs:attribute name="currency" type="cs" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     The currency unit as defined in ISO 4217.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="RTO"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            A quantity constructed as the quotient of a numerator
            quantity divided by a denominator quantity. Common
            factors in the numerator and denominator are not
            automatically cancelled out.  RTO supports titers
            (e.g., "1:128") and other quantities produced by
            laboratories that truly represent ratios. Ratios are
            not simply "structured numerics", particularly blood
            pressure measurements (e.g. "120/60") are not ratios.
            In many cases REAL should be used instead
            of RTO.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="RTO_QTY_QTY"/&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:simpleType name="probability"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
               The probability assigned to the value, a decimal number
               between 0 (very uncertain) and 1 (certain).
            &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:restriction base="xs:double"&gt;
         &lt;xs:minInclusive value="0.0"/&gt;
         &lt;xs:maxInclusive value="1.0"/&gt;
      &lt;/xs:restriction&gt;
   &lt;/xs:simpleType&gt;
   &lt;xs:complexType name="EIVL.event"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
                        A code for a common (periodical) activity of daily
                        living based on which the event related periodic
                        interval is specified.
                     &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:restriction base="CE"&gt;
            &lt;xs:attribute name="code" type="TimingEvent" use="optional"/&gt;
            &lt;xs:attribute name="codeSystem" type="uid"
               fixed="2.16.840.1.113883.5.139"/&gt;
            &lt;xs:attribute name="codeSystemName"
               type="st" fixed="TimingEvent"/&gt;
         &lt;/xs:restriction&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
&lt;!--
      Instantiated templates
    --&gt;
   &lt;xs:complexType name="SXCM_TS"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="TS"&gt;
            &lt;xs:attribute name="operator" type="SetOperator"
                  use="optional" default="I"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     A code specifying whether the set component is included
                     (union) or excluded (set-difference) from the set, or
                     other set operations with the current set component and
                     the set as constructed from the representation stream
                     up to the current point.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:simpleType name="set_TelecommunicationAddressUse"&gt;
      &lt;xs:list itemType="TelecommunicationAddressUse"/&gt;
   &lt;/xs:simpleType&gt;
   &lt;xs:simpleType name="set_PostalAddressUse"&gt;
      &lt;xs:list itemType="PostalAddressUse"/&gt;
   &lt;/xs:simpleType&gt;
   &lt;xs:simpleType name="set_EntityNamePartQualifier"&gt;
      &lt;xs:list itemType="EntityNamePartQualifier"/&gt;
   &lt;/xs:simpleType&gt;
   &lt;xs:complexType name="IVL_TS"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="SXCM_TS"&gt;
            &lt;xs:choice minOccurs="0"&gt;
               &lt;xs:sequence&gt;
                  &lt;xs:element name="low" minOccurs="1" maxOccurs="1"
                        type="IVXB_TS"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The low limit of the interval.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
                  &lt;xs:choice minOccurs="0"&gt;
                     &lt;xs:element name="width" minOccurs="0" maxOccurs="1"
                           type="PQ"&gt;
                        &lt;xs:annotation&gt;
                           &lt;xs:documentation&gt;
                           The difference between high and low boundary. The
                           purpose of distinguishing a width property is to
                           handle all cases of incomplete information
                           symmetrically. In any interval representation only
                           two of the three properties high, low, and width
                           need to be stated and the third can be derived.
                        &lt;/xs:documentation&gt;
                        &lt;/xs:annotation&gt;
                     &lt;/xs:element&gt;
                     &lt;xs:element name="high" minOccurs="0" maxOccurs="1"
                           type="IVXB_TS"&gt;
                        &lt;xs:annotation&gt;
                           &lt;xs:documentation&gt;
                           The high limit of the interval.
                        &lt;/xs:documentation&gt;
                        &lt;/xs:annotation&gt;
                     &lt;/xs:element&gt;
                  &lt;/xs:choice&gt;
               &lt;/xs:sequence&gt;
               &lt;xs:element name="high" minOccurs="1" maxOccurs="1"
                     type="IVXB_TS"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation/&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
               &lt;xs:sequence&gt;
                  &lt;xs:element name="width" minOccurs="1" maxOccurs="1"
                        type="PQ"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The difference between high and low boundary. The
                           purpose of distinguishing a width property is to
                           handle all cases of incomplete information
                           symmetrically. In any interval representation only
                           two of the three properties high, low, and width
                           need to be stated and the third can be derived.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
                  &lt;xs:element name="high" minOccurs="0" maxOccurs="1"
                        type="IVXB_TS"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The high limit of the interval.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
               &lt;/xs:sequence&gt;
               &lt;xs:sequence&gt;
                  &lt;xs:element name="center" minOccurs="1" maxOccurs="1"
                        type="TS"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The arithmetic mean of the interval (low plus
                           high divided by 2). The purpose of distinguishing
                           the center as a semantic property is for
                           conversions of intervals from and to point values.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
                  &lt;xs:element name="width" minOccurs="0" maxOccurs="1"
                        type="PQ"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The difference between high and low boundary. The
                           purpose of distinguishing a width property is to
                           handle all cases of incomplete information
                           symmetrically. In any interval representation only
                           two of the three properties high, low, and width
                           need to be stated and the third can be derived.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
               &lt;/xs:sequence&gt;
            &lt;/xs:choice&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="IVXB_TS"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="TS"&gt;
            &lt;xs:attribute name="inclusive" type="bl" use="optional"
                  default="true"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     Specifies whether the limit is included in the
                     interval (interval is closed) or excluded from the
                     interval (interval is open).
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:simpleType name="set_EntityNameUse"&gt;
      &lt;xs:list itemType="EntityNameUse"/&gt;
   &lt;/xs:simpleType&gt;
   &lt;xs:complexType name="RTO_QTY_QTY"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:appinfo&gt;
            &lt;diff&gt;RTO_QTY_QTY&lt;/diff&gt;
         &lt;/xs:appinfo&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="QTY"&gt;
            &lt;xs:sequence&gt;
               &lt;xs:element name="numerator" type="QTY"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                        The quantity that is being divided in the ratio.
                        The default is the integer number 1 (one).
                     &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
               &lt;xs:element name="denominator" type="QTY"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                        The quantity that devides the numerator in the ratio.
                        The default is the integer number 1 (one).
                        The denominator must not be zero.
                     &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
            &lt;/xs:sequence&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
&lt;/xs:schema&gt;

            </pre></td>
                        </tr>
                     </table>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap>&nbsp;</td>
                  <td class="number_col" nowrap>
                     <h3><a name="datatypes.xsd"></a>B.2 
                     </h3>
                  </td>
                  <td class="body_col">
                     <h3>Generic Type Instantiations</h3>
                  </td>
               </tr>
               <tr>
                  <td class="graphic_col" nowrap> &nbsp; </td>
                  <td class="number_col" nowrap>&nbsp; </td>
                  <td class="body_col">
                     <table width="90%">
                        <tr>
                           <td class="schema"><pre>
               
&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;!-- $Id: datatypes-its-xml.xml,v 1.6 2005/09/26 08:59:04 mcraig Exp $ --&gt;&lt;!--
    This schema is generated from a Generic Schema Definition (GSD)
    by gsd2xsl. Do not edit this file.
  --&gt;
&lt;xs:schema xmlns:sch="http://www.ascc.net/xml/schematron"
      xmlns:xs="http://www.w3.org/2001/XMLSchema"
      elementFormDefault="qualified"&gt;
   &lt;xs:annotation&gt;
      &lt;xs:documentation&gt;
           Copyright (c) 2001, 2002, 2003, 2004, 2005 Health Level Seven.
           All rights reserved.

           Redistribution and use in source and binary forms, with or
           without modification, are permitted provided that the following
           conditions are met:
           1. Redistributions of source code must retain the above
              copyright notice, this list of conditions and the following
              disclaimer.
           2. Redistributions in binary form must reproduce the above
              copyright notice, this list of conditions and the following
              disclaimer in the documentation and/or other materials
              provided with the distribution.
           3. All advertising materials mentioning features or use of this
              software must display the following acknowledgement:
           
           This product includes software developed by Health Level Seven.
 
           THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS
           ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
           NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
           FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT
           SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
           INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
           DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
           GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
           INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
           WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
           NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
           OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
           DAMAGE.
        
           Generated by $Id: gsd2xsd.xsl,v 1.4 2005/04/17 03:20:15 lmckenzi
           Exp $
&lt;/xs:documentation&gt;
   &lt;/xs:annotation&gt;
   &lt;xs:include schemaLocation="datatypes-base.xsd"/&gt;
&lt;!--
      Instantiated templates
    --&gt;
   &lt;xs:complexType name="PIVL_TS"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            Note: because this type is defined as an extension of SXCM_T,
            all of the attributes and elements accepted for T are also
            accepted by this definition.  However, they are NOT allowed
            by the normative description of this type.  Unfortunately,
            we cannot write a general purpose schematron contraints to
            provide that extra validation, thus applications must be
            aware that instance (fragments) that pass validation with
            this might might still not be legal.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="SXCM_TS"&gt;
            &lt;xs:sequence&gt;
               &lt;xs:element name="phase" minOccurs="0" maxOccurs="1"
                     type="IVL_TS"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                        A prototype of the repeating interval specifying the
                        duration of each occurrence and anchors the periodic
                        interval sequence at a certain point in time.
                     &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
               &lt;xs:element name="period" minOccurs="0" maxOccurs="1" type="PQ"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                        A time duration specifying a reciprocal measure of
                        the frequency at which the periodic interval repeats.
                     &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
            &lt;/xs:sequence&gt;
            &lt;xs:attribute name="alignment" type="CalendarCycle" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     Specifies if and how the repetitions are aligned to
                     the cycles of the underlying calendar (e.g., to
                     distinguish every 30 days from "the 5th of every
                     month".) A non-aligned periodic interval recurs
                     independently from the calendar. An aligned periodic
                     interval is synchronized with the calendar.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
            &lt;xs:attribute name="institutionSpecified" type="bl" use="optional"
                  default="false"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     Indicates whether the exact timing is up to the party
                     executing the schedule (e.g., to distinguish "every 8
                     hours" from "3 times a day".)
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="EIVL_TS"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            Note: because this type is defined as an extension of SXCM_T,
            all of the attributes and elements accepted for T are also
            accepted by this definition.  However, they are NOT allowed
            by the normative description of this type.  Unfortunately,
            we cannot write a general purpose schematron contraints to
            provide that extra validation, thus applications must be
            aware that instance (fragments) that pass validation with
            this might might still not be legal.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="SXCM_TS"&gt;
            &lt;xs:sequence&gt;
               &lt;xs:element name="event" type="EIVL.event" minOccurs="0"
                     maxOccurs="1"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                        A code for a common (periodical) activity of daily
                        living based on which the event related periodic
                        interval is specified.
                     &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
               &lt;xs:element name="offset" minOccurs="0" maxOccurs="1"
                     type="IVL_PQ"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                        An interval of elapsed time (duration, not absolute
                        point in time) that marks the offsets for the
                        beginning, width and end of the event-related periodic
                        interval measured from the time each such event
                        actually occurred.
                     &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
            &lt;/xs:sequence&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="IVL_PQ"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="SXCM_PQ"&gt;
            &lt;xs:choice minOccurs="0"&gt;
               &lt;xs:sequence&gt;
                  &lt;xs:element name="low" minOccurs="1" maxOccurs="1"
                        type="IVXB_PQ"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The low limit of the interval.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
                  &lt;xs:choice minOccurs="0"&gt;
                     &lt;xs:element name="width" minOccurs="0" maxOccurs="1"
                           type="PQ"&gt;
                        &lt;xs:annotation&gt;
                           &lt;xs:documentation&gt;
                           The difference between high and low boundary. The
                           purpose of distinguishing a width property is to
                           handle all cases of incomplete information
                           symmetrically. In any interval representation only
                           two of the three properties high, low, and width
                           need to be stated and the third can be derived.
                        &lt;/xs:documentation&gt;
                        &lt;/xs:annotation&gt;
                     &lt;/xs:element&gt;
                     &lt;xs:element name="high" minOccurs="0" maxOccurs="1"
                           type="IVXB_PQ"&gt;
                        &lt;xs:annotation&gt;
                           &lt;xs:documentation&gt;
                           The high limit of the interval.
                        &lt;/xs:documentation&gt;
                        &lt;/xs:annotation&gt;
                     &lt;/xs:element&gt;
                  &lt;/xs:choice&gt;
               &lt;/xs:sequence&gt;
               &lt;xs:element name="high" minOccurs="1" maxOccurs="1"
                     type="IVXB_PQ"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation/&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
               &lt;xs:sequence&gt;
                  &lt;xs:element name="width" minOccurs="1" maxOccurs="1"
                        type="PQ"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The difference between high and low boundary. The
                           purpose of distinguishing a width property is to
                           handle all cases of incomplete information
                           symmetrically. In any interval representation only
                           two of the three properties high, low, and width
                           need to be stated and the third can be derived.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
                  &lt;xs:element name="high" minOccurs="0" maxOccurs="1"
                        type="IVXB_PQ"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The high limit of the interval.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
               &lt;/xs:sequence&gt;
               &lt;xs:sequence&gt;
                  &lt;xs:element name="center" minOccurs="1" maxOccurs="1"
                        type="PQ"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The arithmetic mean of the interval (low plus high
                           divided by 2). The purpose of distinguishing the
                           center as a semantic property is for conversions
                           of intervals from and to point values.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
                  &lt;xs:element name="width" minOccurs="0" maxOccurs="1"
                        type="PQ"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The difference between high and low boundary. The
                           purpose of distinguishing a width property is to
                           handle all cases of incomplete information
                           symmetrically. In any interval representation only
                           two of the three properties high, low, and width
                           need to be stated and the third can be derived.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
               &lt;/xs:sequence&gt;
            &lt;/xs:choice&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="SXCM_PQ"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="PQ"&gt;
            &lt;xs:attribute name="operator" type="SetOperator" use="optional"
                  default="I"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     A code specifying whether the set component is included
                     (union) or excluded (set-difference) from the set, or
                     other set operations with the current set component and
                     the set as constructed from the representation stream
                     up to the current point.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="IVXB_PQ"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="PQ"&gt;
            &lt;xs:attribute name="inclusive" type="bl" use="optional"
                  default="true"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     Specifies whether the limit is included in the
                     interval (interval is closed) or excluded from the
                     interval (interval is open).
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="PPD_TS"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:appinfo&gt;
            &lt;diff&gt;PPD_PQ&lt;/diff&gt;
         &lt;/xs:appinfo&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="TS"&gt;
            &lt;xs:sequence&gt;
               &lt;xs:element name="standardDeviation" minOccurs="0"
                     maxOccurs="1" type="PQ"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                        The primary measure of variance/uncertainty of the
                        value (the square root of the sum of the squares of
                        the differences between all data points and the mean).
                        The standard deviation is used to normalize the data
                        for computing the distribution function. Applications
                        that cannot deal with probability distributions can
                        still get an idea about the confidence level by looking
                        at the standard deviation.
                     &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
            &lt;/xs:sequence&gt;
            &lt;xs:attribute name="distributionType"
                  type="ProbabilityDistributionType" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     A code specifying the type of probability distribution.
                     Possible values are as shown in the attached table.
                     The NULL value (unknown) for the type code indicates
                     that the probability distribution type is unknown. In
                     that case, the standard deviation has the meaning of an
                     informal guess.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="PPD_PQ"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:appinfo&gt;
            &lt;diff&gt;PPD_PQ&lt;/diff&gt;
         &lt;/xs:appinfo&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="PQ"&gt;
            &lt;xs:sequence&gt;
               &lt;xs:element name="standardDeviation" minOccurs="0"
                     maxOccurs="1" type="PQ"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                        The primary measure of variance/uncertainty of the
                        value (the square root of the sum of the squares of
                        the differences between all data points and the mean).
                        The standard deviation is used to normalize the data
                        for computing the distribution function. Applications
                        that cannot deal with probability distributions can
                        still get an idea about the confidence level by looking
                        at the standard deviation.
                     &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
            &lt;/xs:sequence&gt;
            &lt;xs:attribute name="distributionType"
                  type="ProbabilityDistributionType" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     A code specifying the type of probability distribution.
                     Possible values are as shown in the attached table.
                     The NULL value (unknown) for the type code indicates
                     that the probability distribution type is unknown. In
                     that case, the standard deviation has the meaning of an
                     informal guess.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="PIVL_PPD_TS"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            Note: because this type is defined as an extension of SXCM_T,
            all of the attributes and elements accepted for T are also
            accepted by this definition.  However, they are NOT allowed
            by the normative description of this type.  Unfortunately,
            we cannot write a general purpose schematron contraints to
            provide that extra validation, thus applications must be
            aware that instance (fragments) that pass validation with
            this might might still not be legal.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="SXCM_PPD_TS"&gt;
            &lt;xs:sequence&gt;
               &lt;xs:element name="phase" minOccurs="0" maxOccurs="1"
                     type="IVL_PPD_TS"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                        A prototype of the repeating interval specifying the
                        duration of each occurrence and anchors the periodic
                        interval sequence at a certain point in time.
                     &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
               &lt;xs:element name="period" minOccurs="0" maxOccurs="1"
                     type="PPD_PQ"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                        A time duration specifying a reciprocal measure of
                        the frequency at which the periodic interval repeats.
                     &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
            &lt;/xs:sequence&gt;
            &lt;xs:attribute name="alignment" type="CalendarCycle" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     Specifies if and how the repetitions are aligned to
                     the cycles of the underlying calendar (e.g., to
                     distinguish every 30 days from "the 5th of every
                     month".) A non-aligned periodic interval recurs
                     independently from the calendar. An aligned periodic
                     interval is synchronized with the calendar.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
            &lt;xs:attribute name="institutionSpecified" type="bl"
                  use="optional" default="false"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     Indicates whether the exact timing is up to the party
                     executing the schedule (e.g., to distinguish "every 8
                     hours" from "3 times a day".)
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="SXCM_PPD_TS"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="PPD_TS"&gt;
            &lt;xs:attribute name="operator" type="SetOperator" use="optional"
                  default="I"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     A code specifying whether the set component is included
                     (union) or excluded (set-difference) from the set, or
                     other set operations with the current set component and
                     the set as constructed from the representation stream
                     up to the current point.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="IVL_PPD_TS"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="SXCM_PPD_TS"&gt;
            &lt;xs:choice minOccurs="0"&gt;
               &lt;xs:sequence&gt;
                  &lt;xs:element name="low" minOccurs="1" maxOccurs="1"
                        type="IVXB_PPD_TS"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The low limit of the interval.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
                  &lt;xs:choice minOccurs="0"&gt;
                     &lt;xs:element name="width" minOccurs="0" maxOccurs="1"
                           type="PPD_PQ"&gt;
                        &lt;xs:annotation&gt;
                           &lt;xs:documentation&gt;
                           The difference between high and low boundary. The
                           purpose of distinguishing a width property is to
                           handle all cases of incomplete information
                           symmetrically. In any interval representation only
                           two of the three properties high, low, and width
                           need to be stated and the third can be derived.
                        &lt;/xs:documentation&gt;
                        &lt;/xs:annotation&gt;
                     &lt;/xs:element&gt;
                     &lt;xs:element name="high" minOccurs="0" maxOccurs="1"
                           type="IVXB_PPD_TS"&gt;
                        &lt;xs:annotation&gt;
                           &lt;xs:documentation&gt;
                           The high limit of the interval.
                        &lt;/xs:documentation&gt;
                        &lt;/xs:annotation&gt;
                     &lt;/xs:element&gt;
                  &lt;/xs:choice&gt;
               &lt;/xs:sequence&gt;
               &lt;xs:element name="high" minOccurs="1" maxOccurs="1"
                     type="IVXB_PPD_TS"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation/&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
               &lt;xs:sequence&gt;
                  &lt;xs:element name="width" minOccurs="1" maxOccurs="1"
                        type="PPD_PQ"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The difference between high and low boundary. The
                           purpose of distinguishing a width property is to
                           handle all cases of incomplete information
                           symmetrically. In any interval representation only
                           two of the three properties high, low, and width
                           need to be stated and the third can be derived.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
                  &lt;xs:element name="high" minOccurs="0" maxOccurs="1"
                        type="IVXB_PPD_TS"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The high limit of the interval.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
               &lt;/xs:sequence&gt;
               &lt;xs:sequence&gt;
                  &lt;xs:element name="center" minOccurs="1" maxOccurs="1"
                        type="PPD_TS"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The arithmetic mean of the interval (low plus high
                           divided by 2). The purpose of distinguishing the
                           center as a semantic property is for conversions
                           of intervals from and to point values.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
                  &lt;xs:element name="width" minOccurs="0" maxOccurs="1"
                        type="PPD_PQ"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The difference between high and low boundary. The
                           purpose of distinguishing a width property is to
                           handle all cases of incomplete information
                           symmetrically. In any interval representation only
                           two of the three properties high, low, and width
                           need to be stated and the third can be derived.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
               &lt;/xs:sequence&gt;
            &lt;/xs:choice&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="IVXB_PPD_TS"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="PPD_TS"&gt;
            &lt;xs:attribute name="inclusive" type="bl" use="optional"
                  default="true"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     Specifies whether the limit is included in the
                     interval (interval is closed) or excluded from the
                     interval (interval is open).
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="EIVL_PPD_TS"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:documentation&gt;
            Note: because this type is defined as an extension of SXCM_T,
            all of the attributes and elements accepted for T are also
            accepted by this definition.  However, they are NOT allowed
            by the normative description of this type.  Unfortunately,
            we cannot write a general purpose schematron contraints to
            provide that extra validation, thus applications must be
            aware that instance (fragments) that pass validation with
            this might might still not be legal.
         &lt;/xs:documentation&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="SXCM_PPD_TS"&gt;
            &lt;xs:sequence&gt;
               &lt;xs:element name="event" type="EIVL.event" minOccurs="0"
                     maxOccurs="1"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                        A code for a common (periodical) activity of daily
                        living based on which the event related periodic
                        interval is specified.
                     &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
               &lt;xs:element name="offset" minOccurs="0" maxOccurs="1"
                     type="IVL_PPD_PQ"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                        An interval of elapsed time (duration, not absolute
                        point in time) that marks the offsets for the
                        beginning, width and end of the event-related periodic
                        interval measured from the time each such event
                        actually occurred.
                     &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
            &lt;/xs:sequence&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="IVL_PPD_PQ"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="SXCM_PPD_PQ"&gt;
            &lt;xs:choice minOccurs="0"&gt;
               &lt;xs:sequence&gt;
                  &lt;xs:element name="low" minOccurs="1" maxOccurs="1"
                        type="IVXB_PPD_PQ"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The low limit of the interval.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
                  &lt;xs:choice minOccurs="0"&gt;
                     &lt;xs:element name="width" minOccurs="0" maxOccurs="1"
                           type="PPD_PQ"&gt;
                        &lt;xs:annotation&gt;
                           &lt;xs:documentation&gt;
                           The difference between high and low boundary. The
                           purpose of distinguishing a width property is to
                           handle all cases of incomplete information
                           symmetrically. In any interval representation only
                           two of the three properties high, low, and width
                           need to be stated and the third can be derived.
                        &lt;/xs:documentation&gt;
                        &lt;/xs:annotation&gt;
                     &lt;/xs:element&gt;
                     &lt;xs:element name="high" minOccurs="0" maxOccurs="1"
                           type="IVXB_PPD_PQ"&gt;
                        &lt;xs:annotation&gt;
                           &lt;xs:documentation&gt;
                           The high limit of the interval.
                        &lt;/xs:documentation&gt;
                        &lt;/xs:annotation&gt;
                     &lt;/xs:element&gt;
                  &lt;/xs:choice&gt;
               &lt;/xs:sequence&gt;
               &lt;xs:element name="high" minOccurs="1" maxOccurs="1"
                     type="IVXB_PPD_PQ"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation/&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
               &lt;xs:sequence&gt;
                  &lt;xs:element name="width" minOccurs="1" maxOccurs="1"
                        type="PPD_PQ"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The difference between high and low boundary. The
                           purpose of distinguishing a width property is to
                           handle all cases of incomplete information
                           symmetrically. In any interval representation only
                           two of the three properties high, low, and width
                           need to be stated and the third can be derived.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
                  &lt;xs:element name="high" minOccurs="0" maxOccurs="1"
                        type="IVXB_PPD_PQ"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The high limit of the interval.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
               &lt;/xs:sequence&gt;
               &lt;xs:sequence&gt;
                  &lt;xs:element name="center" minOccurs="1" maxOccurs="1"
                        type="PPD_PQ"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The arithmetic mean of the interval (low plus high
                           divided by 2). The purpose of distinguishing the
                           center as a semantic property is for conversions
                           of intervals from and to point values.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
                  &lt;xs:element name="width" minOccurs="0" maxOccurs="1"
                        type="PPD_PQ"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The difference between high and low boundary. The
                           purpose of distinguishing a width property is to
                           handle all cases of incomplete information
                           symmetrically. In any interval representation only
                           two of the three properties high, low, and width
                           need to be stated and the third can be derived.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
               &lt;/xs:sequence&gt;
            &lt;/xs:choice&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="SXCM_PPD_PQ"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="PPD_PQ"&gt;
            &lt;xs:attribute name="operator" type="SetOperator" use="optional"
                  default="I"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     A code specifying whether the set component is included
                     (union) or excluded (set-difference) from the set, or
                     other set operations with the current set component and
                     the set as constructed from the representation stream
                     up to the current point.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="IVXB_PPD_PQ"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="PPD_PQ"&gt;
            &lt;xs:attribute name="inclusive" type="bl" use="optional"
                  default="true"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     Specifies whether the limit is included in the
                     interval (interval is closed) or excluded from the
                     interval (interval is open).
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="SXPR_TS"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="SXCM_TS"&gt;
            &lt;xs:sequence&gt;
               &lt;xs:element name="comp" minOccurs="2" maxOccurs="unbounded"
                     type="SXCM_TS"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation/&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
            &lt;/xs:sequence&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="SXCM_CD"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="CD"&gt;
            &lt;xs:attribute name="operator" type="SetOperator" use="optional"
                  default="I"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     A code specifying whether the set component is included
                     (union) or excluded (set-difference) from the set, or
                     other set operations with the current set component and
                     the set as constructed from the representation stream
                     up to the current point.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="SXCM_MO"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="MO"&gt;
            &lt;xs:attribute name="operator" type="SetOperator" use="optional"
                  default="I"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     A code specifying whether the set component is included
                     (union) or excluded (set-difference) from the set, or
                     other set operations with the current set component and
                     the set as constructed from the representation stream
                     up to the current point.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="SXCM_INT"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="INT"&gt;
            &lt;xs:attribute name="operator" type="SetOperator" use="optional"
                  default="I"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     A code specifying whether the set component is included
                     (union) or excluded (set-difference) from the set, or
                     other set operations with the current set component and
                     the set as constructed from the representation stream
                     up to the current point.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="SXCM_REAL"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="REAL"&gt;
            &lt;xs:attribute name="operator" type="SetOperator" use="optional"
                  default="I"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     A code specifying whether the set component is included
                     (union) or excluded (set-difference) from the set, or
                     other set operations with the current set component and
                     the set as constructed from the representation stream
                     up to the current point.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="IVL_INT"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="SXCM_INT"&gt;
            &lt;xs:choice minOccurs="0"&gt;
               &lt;xs:sequence&gt;
                  &lt;xs:element name="low" minOccurs="1" maxOccurs="1"
                        type="IVXB_INT"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The low limit of the interval.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
                  &lt;xs:choice minOccurs="0"&gt;
                     &lt;xs:element name="width" minOccurs="0" maxOccurs="1"
                           type="INT"&gt;
                        &lt;xs:annotation&gt;
                           &lt;xs:documentation&gt;
                           The difference between high and low boundary. The
                           purpose of distinguishing a width property is to
                           handle all cases of incomplete information
                           symmetrically. In any interval representation only
                           two of the three properties high, low, and width
                           need to be stated and the third can be derived.
                        &lt;/xs:documentation&gt;
                        &lt;/xs:annotation&gt;
                     &lt;/xs:element&gt;
                     &lt;xs:element name="high" minOccurs="0" maxOccurs="1"
                           type="IVXB_INT"&gt;
                        &lt;xs:annotation&gt;
                           &lt;xs:documentation&gt;
                           The high limit of the interval.
                        &lt;/xs:documentation&gt;
                        &lt;/xs:annotation&gt;
                     &lt;/xs:element&gt;
                  &lt;/xs:choice&gt;
               &lt;/xs:sequence&gt;
               &lt;xs:element name="high" minOccurs="1" maxOccurs="1"
                     type="IVXB_INT"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation/&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
               &lt;xs:sequence&gt;
                  &lt;xs:element name="width" minOccurs="1" maxOccurs="1"
                        type="INT"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The difference between high and low boundary. The
                           purpose of distinguishing a width property is to
                           handle all cases of incomplete information
                           symmetrically. In any interval representation only
                           two of the three properties high, low, and width
                           need to be stated and the third can be derived.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
                  &lt;xs:element name="high" minOccurs="0" maxOccurs="1"
                        type="IVXB_INT"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The high limit of the interval.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
               &lt;/xs:sequence&gt;
               &lt;xs:sequence&gt;
                  &lt;xs:element name="center" minOccurs="1" maxOccurs="1"
                        type="INT"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The arithmetic mean of the interval (low plus high
                           divided by 2). The purpose of distinguishing the
                           center as a semantic property is for conversions
                           of intervals from and to point values.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
                  &lt;xs:element name="width" minOccurs="0" maxOccurs="1"
                        type="INT"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The difference between high and low boundary. The
                           purpose of distinguishing a width property is to
                           handle all cases of incomplete information
                           symmetrically. In any interval representation only
                           two of the three properties high, low, and width
                           need to be stated and the third can be derived.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
               &lt;/xs:sequence&gt;
            &lt;/xs:choice&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="IVXB_INT"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="INT"&gt;
            &lt;xs:attribute name="inclusive" type="bl" use="optional"
                  default="true"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     Specifies whether the limit is included in the
                     interval (interval is closed) or excluded from the
                     interval (interval is open).
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="IVL_REAL"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="SXCM_REAL"&gt;
            &lt;xs:choice minOccurs="0"&gt;
               &lt;xs:sequence&gt;
                  &lt;xs:element name="low" minOccurs="1" maxOccurs="1"
                        type="IVXB_REAL"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The low limit of the interval.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
                  &lt;xs:choice minOccurs="0"&gt;
                     &lt;xs:element name="width" minOccurs="0" maxOccurs="1"
                           type="REAL"&gt;
                        &lt;xs:annotation&gt;
                           &lt;xs:documentation&gt;
                           The difference between high and low boundary. The
                           purpose of distinguishing a width property is to
                           handle all cases of incomplete information
                           symmetrically. In any interval representation only
                           two of the three properties high, low, and width
                           need to be stated and the third can be derived.
                        &lt;/xs:documentation&gt;
                        &lt;/xs:annotation&gt;
                     &lt;/xs:element&gt;
                     &lt;xs:element name="high" minOccurs="0" maxOccurs="1"
                           type="IVXB_REAL"&gt;
                        &lt;xs:annotation&gt;
                           &lt;xs:documentation&gt;
                           The high limit of the interval.
                        &lt;/xs:documentation&gt;
                        &lt;/xs:annotation&gt;
                     &lt;/xs:element&gt;
                  &lt;/xs:choice&gt;
               &lt;/xs:sequence&gt;
               &lt;xs:element name="high" minOccurs="1" maxOccurs="1"
                     type="IVXB_REAL"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation/&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
               &lt;xs:sequence&gt;
                  &lt;xs:element name="width" minOccurs="1" maxOccurs="1"
                        type="REAL"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The difference between high and low boundary. The
                           purpose of distinguishing a width property is to
                           handle all cases of incomplete information
                           symmetrically. In any interval representation only
                           two of the three properties high, low, and width
                           need to be stated and the third can be derived.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
                  &lt;xs:element name="high" minOccurs="0" maxOccurs="1"
                        type="IVXB_REAL"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The high limit of the interval.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
               &lt;/xs:sequence&gt;
               &lt;xs:sequence&gt;
                  &lt;xs:element name="center" minOccurs="1" maxOccurs="1"
                        type="REAL"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The arithmetic mean of the interval (low plus high
                           divided by 2). The purpose of distinguishing the
                           center as a semantic property is for conversions
                           of intervals from and to point values.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
                  &lt;xs:element name="width" minOccurs="0" maxOccurs="1"
                        type="REAL"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The difference between high and low boundary. The
                           purpose of distinguishing a width property is to
                           handle all cases of incomplete information
                           symmetrically. In any interval representation only
                           two of the three properties high, low, and width
                           need to be stated and the third can be derived.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
               &lt;/xs:sequence&gt;
            &lt;/xs:choice&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="IVXB_REAL"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="REAL"&gt;
            &lt;xs:attribute name="inclusive" type="bl" use="optional"
                  default="true"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     Specifies whether the limit is included in the
                     interval (interval is closed) or excluded from the
                     interval (interval is open).
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="IVL_MO"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="SXCM_MO"&gt;
            &lt;xs:choice minOccurs="0"&gt;
               &lt;xs:sequence&gt;
                  &lt;xs:element name="low" minOccurs="1" maxOccurs="1"
                        type="IVXB_MO"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The low limit of the interval.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
                  &lt;xs:choice minOccurs="0"&gt;
                     &lt;xs:element name="width" minOccurs="0" maxOccurs="1"
                           type="MO"&gt;
                        &lt;xs:annotation&gt;
                           &lt;xs:documentation&gt;
                           The difference between high and low boundary. The
                           purpose of distinguishing a width property is to
                           handle all cases of incomplete information
                           symmetrically. In any interval representation
                           only two of the three properties high, low, and
                           width need to be stated and the third can be
                           derived.
                        &lt;/xs:documentation&gt;
                        &lt;/xs:annotation&gt;
                     &lt;/xs:element&gt;
                     &lt;xs:element name="high" minOccurs="0" maxOccurs="1"
                           type="IVXB_MO"&gt;
                        &lt;xs:annotation&gt;
                           &lt;xs:documentation&gt;
                           The high limit of the interval.
                        &lt;/xs:documentation&gt;
                        &lt;/xs:annotation&gt;
                     &lt;/xs:element&gt;
                  &lt;/xs:choice&gt;
               &lt;/xs:sequence&gt;
               &lt;xs:element name="high" minOccurs="1" maxOccurs="1"
                      type="IVXB_MO"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation/&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
               &lt;xs:sequence&gt;
                  &lt;xs:element name="width" minOccurs="1" maxOccurs="1"
                        type="MO"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The difference between high and low boundary. The
                           purpose of distinguishing a width property is to
                           handle all cases of incomplete information
                           symmetrically. In any interval representation only
                           two of the three properties high, low, and width
                           need to be stated and the third can be derived.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
                  &lt;xs:element name="high" minOccurs="0" maxOccurs="1"
                        type="IVXB_MO"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The high limit of the interval.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
               &lt;/xs:sequence&gt;
               &lt;xs:sequence&gt;
                  &lt;xs:element name="center" minOccurs="1" maxOccurs="1"
                        type="MO"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The arithmetic mean of the interval (low plus high
                           divided by 2). The purpose of distinguishing the
                           center as a semantic property is for conversions
                           of intervals from and to point values.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
                  &lt;xs:element name="width" minOccurs="0" maxOccurs="1"
                        type="MO"&gt;
                     &lt;xs:annotation&gt;
                        &lt;xs:documentation&gt;
                           The difference between high and low boundary. The
                           purpose of distinguishing a width property is to
                           handle all cases of incomplete information
                           symmetrically. In any interval representation only
                           two of the three properties high, low, and width
                           need to be stated and the third can be derived.
                        &lt;/xs:documentation&gt;
                     &lt;/xs:annotation&gt;
                  &lt;/xs:element&gt;
               &lt;/xs:sequence&gt;
            &lt;/xs:choice&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="IVXB_MO"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="MO"&gt;
            &lt;xs:attribute name="inclusive" type="bl" use="optional"
                  default="true"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     Specifies whether the limit is included in the
                     interval (interval is closed) or excluded from the
                     interval (interval is open).
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="HXIT_PQ"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="PQ"&gt;
            &lt;xs:sequence&gt;
               &lt;xs:element name="validTime" minOccurs="0" maxOccurs="1"
                     type="IVL_TS"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                        The time interval during which the given information
                        was, is, or is expected to be valid. The interval can
                        be open or closed, as well as infinite or undefined on
                        either side.
                     &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
            &lt;/xs:sequence&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="HXIT_CE"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="CE"&gt;
            &lt;xs:sequence&gt;
               &lt;xs:element name="validTime" minOccurs="0" maxOccurs="1"
                     type="IVL_TS"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                        The time interval during which the given information
                        was, is, or is expected to be valid. The interval can
                        be open or closed, as well as infinite or undefined on
                        either side.
                     &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
            &lt;/xs:sequence&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="BXIT_CD"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="CD"&gt;
            &lt;xs:attribute name="qty" type="int" use="optional" default="1"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     The quantity in which the bag item occurs in its
                     containing bag.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="BXIT_IVL_PQ"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="IVL_PQ"&gt;
            &lt;xs:attribute name="qty" type="int" use="optional" default="1"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     The quantity in which the bag item occurs in its
                     containing bag.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="SLIST_PQ"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="ANY"&gt;
            &lt;xs:sequence&gt;
               &lt;xs:element name="origin" minOccurs="1" maxOccurs="1"
                     type="PQ"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                     The origin of the list item value scale, i.e., the
                     physical quantity that a zero-digit in the sequence
                     would represent.
                  &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
               &lt;xs:element name="scale" minOccurs="1" maxOccurs="1"
                     type="PQ"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                     A ratio-scale quantity that is factored out of the
                     digit sequence.
                  &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
               &lt;xs:element name="digits" minOccurs="1" maxOccurs="1"
                     type="list_int"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                     A sequence of raw digits for the sample values. This is
                     typically the raw output of an A/D converter.
                  &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
            &lt;/xs:sequence&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:simpleType name="list_int"&gt;
      &lt;xs:list itemType="int"/&gt;
   &lt;/xs:simpleType&gt;
   &lt;xs:complexType name="SLIST_TS"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="ANY"&gt;
            &lt;xs:sequence&gt;
               &lt;xs:element name="origin" minOccurs="1" maxOccurs="1" type="TS"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                     The origin of the list item value scale, i.e., the
                     physical quantity that a zero-digit in the sequence
                     would represent.
                  &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
               &lt;xs:element name="scale" minOccurs="1" maxOccurs="1" type="PQ"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                     A ratio-scale quantity that is factored out of the
                     digit sequence.
                  &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
               &lt;xs:element name="digits" minOccurs="1" maxOccurs="1"
                     type="list_int"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                     A sequence of raw digits for the sample values. This is
                     typically the raw output of an A/D converter.
                  &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
            &lt;/xs:sequence&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="GLIST_TS"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="ANY"&gt;
            &lt;xs:sequence&gt;
               &lt;xs:element name="head" minOccurs="1" maxOccurs="1" type="TS"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                     This is the start-value of the generated list. 
                  &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
               &lt;xs:element name="increment" minOccurs="1" maxOccurs="1"
                     type="PQ"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                     The difference between one value and its previous
                     different value. For example, to generate the sequence
                     (1; 4; 7; 10; 13; ...) the increment is 3; likewise to
                     generate the sequence (1; 1; 4; 4; 7; 7; 10; 10; 13;
                     13; ...) the increment is also 3.
                  &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
            &lt;/xs:sequence&gt;
            &lt;xs:attribute name="period" type="int" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     If non-NULL, specifies that the sequence alternates,
                     i.e., after this many increments, the sequence item
                     values roll over to start from the initial sequence
                     item value. For example, the sequence (1; 2; 3; 1; 2;
                     3; 1; 2; 3; ...) has period 3; also the sequence
                     (1; 1; 2; 2; 3; 3; 1; 1; 2; 2; 3; 3; ...) has period
                     3 too.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
            &lt;xs:attribute name="denominator" type="int" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     The integer by which the index for the sequence is
                     divided, effectively the number of times the sequence
                     generates the same sequence item value before
                     incrementing to the next sequence item value. For
                     example, to generate the sequence (1; 1; 1; 2; 2; 2; 3; 3;
                     3; ...)  the denominator is 3.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="GLIST_PQ"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="ANY"&gt;
            &lt;xs:sequence&gt;
               &lt;xs:element name="head" minOccurs="1" maxOccurs="1" type="PQ"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                     This is the start-value of the generated list. 
                  &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
               &lt;xs:element name="increment" minOccurs="1" maxOccurs="1"
                     type="PQ"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                     The difference between one value and its previous
                     different value. For example, to generate the sequence
                     (1; 4; 7; 10; 13; ...) the increment is 3; likewise to
                     generate the sequence (1; 1; 4; 4; 7; 7; 10; 10; 13;
                     13; ...) the increment is also 3.
                  &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
            &lt;/xs:sequence&gt;
            &lt;xs:attribute name="period" type="int" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     If non-NULL, specifies that the sequence alternates,
                     i.e., after this many increments, the sequence item
                     values roll over to start from the initial sequence
                     item value. For example, the sequence (1; 2; 3; 1; 2;
                     3; 1; 2; 3; ...) has period 3; also the sequence
                     (1; 1; 2; 2; 3; 3; 1; 1; 2; 2; 3; 3; ...) has period
                     3 too.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
            &lt;xs:attribute name="denominator" type="int" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
                     The integer by which the index for the sequence is
                     divided, effectively the number of times the sequence
                     generates the same sequence item value before
                     incrementing to the next sequence item value. For
                     example, to generate the sequence (1; 1; 1; 2; 2; 2; 3; 3;
                     3; ...)  the denominator is 3.
                  &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="RTO_PQ_PQ"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:appinfo&gt;
            &lt;diff&gt;RTO_PQ_PQ&lt;/diff&gt;
         &lt;/xs:appinfo&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="QTY"&gt;
            &lt;xs:sequence&gt;
               &lt;xs:element name="numerator" type="PQ"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                        The quantity that is being divided in the ratio.  The
                        default is the integer number 1 (one).
                     &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
               &lt;xs:element name="denominator" type="PQ"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                        The quantity that devides the numerator in the ratio.
                        The default is the integer number 1 (one).
                        The denominator must not be zero.
                     &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
            &lt;/xs:sequence&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="RTO_MO_PQ"&gt;
      &lt;xs:annotation&gt;
         &lt;xs:appinfo&gt;
            &lt;diff&gt;RTO_MO_PQ&lt;/diff&gt;
         &lt;/xs:appinfo&gt;
      &lt;/xs:annotation&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="QTY"&gt;
            &lt;xs:sequence&gt;
               &lt;xs:element name="numerator" type="MO"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                        The quantity that is being divided in the ratio.  The
                        default is the integer number 1 (one).
                     &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
               &lt;xs:element name="denominator" type="PQ"&gt;
                  &lt;xs:annotation&gt;
                     &lt;xs:documentation&gt;
                        The quantity that devides the numerator in the ratio.
                        The default is the integer number 1 (one).
                        The denominator must not be zero.
                     &lt;/xs:documentation&gt;
                  &lt;/xs:annotation&gt;
               &lt;/xs:element&gt;
            &lt;/xs:sequence&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
   &lt;xs:complexType name="UVP_TS"&gt;
      &lt;xs:complexContent&gt;
         &lt;xs:extension base="TS"&gt;
            &lt;xs:attribute name="probability" type="probability" use="optional"&gt;
               &lt;xs:annotation&gt;
                  &lt;xs:documentation&gt;
               The probability assigned to the value, a decimal number
               between 0 (very uncertain) and 1 (certain).
            &lt;/xs:documentation&gt;
               &lt;/xs:annotation&gt;
            &lt;/xs:attribute&gt;
         &lt;/xs:extension&gt;
      &lt;/xs:complexContent&gt;
   &lt;/xs:complexType&gt;
&lt;/xs:schema&gt;

            </pre></td>
                        </tr>
                     </table>
                  </td>
               </tr>
            </td>
         </tr>
      </table>
   </body>
</html>